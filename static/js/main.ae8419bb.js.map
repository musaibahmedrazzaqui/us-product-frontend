{"version":3,"file":"static/js/main.ae8419bb.js","mappings":"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AACza,KAAM,aAAcya,KAAM,MAC3B,CAACza,KAAM,WAAYya,KAAM,MACzB,CAACza,KAAM,UAAWya,KAAM,MACxB,CAACza,KAAM,UAAWya,KAAM,MACxB,CAACza,KAAM,SAAUya,KAAM,MACvB,CAACza,KAAM,QAASya,KAAM,MACtB,CAACza,KAAM,UAAWya,KAAM,MACxB,CAACza,KAAM,SAAUya,KAAM,MACvB,CAACza,KAAM,UAAWya,KAAM,MACxB,CAACza,KAAM,yBAA0Bya,KAAM,MACvC,CAACza,KAAM,WAAYya,KAAM,MACzB,CAACza,KAAM,gBAAiBya,KAAM,MAC9B,CAACza,KAAM,SAAUya,KAAM,MACvB,CAACza,KAAM,iCAAkCya,KAAM,MAC/C,CAACza,KAAM,oBAAqBya,KAAM,MAClC,CAACza,KAAM,WAAYya,KAAM,MACzB,CAACza,KAAM,eAAgBya,KAAM,MAC7B,CAACza,KAAM,UAAWya,KAAM,MACxB,CAACza,KAAM,WAAYya,KAAM,MACzB,CAACza,KAAM,WAAYya,KAAM,MACzB,CAACza,KAAM,SAAUya,KAAM,MACvB,CAACza,KAAM,aAAcya,KAAM,MAC3B,CAACza,KAAM,iBAAkBya,KAAM,MAC/B,CAACza,KAAM,2BAA4Bya,KAAM,MACzC,CAACza,KAAM,OAAQya,KAAM,MACrB,CAACza,KAAM,QAASya,KAAM,MACtB,CAACza,KAAM,QAASya,KAAM,MACtB,CAACza,KAAM,mBAAoBya,KAAM,MACjC,CAACza,KAAM,0BAA2Bya,KAAM,MACxC,CAACza,KAAM,WAAYya,KAAM,MACzB,CAACza,KAAM,UAAWya,KAAM,MACxB,CAACza,KAAM,QAASya,KAAM,MACtB,CAACza,KAAM,wCAAyCya,KAAM,MACtD,CAACza,KAAM,eAAgBya,KAAM,MAC7B,CAACza,KAAM,aAAcya,KAAM,MAC3B,CAACza,KAAM,gBAAkBya,KAAM,MAC/B,CAACza,KAAM,UAAWya,KAAM,MACxB,CAACza,KAAM,OAAQya,KAAM,MACrB,CAACza,KAAM,SAAUya,KAAM,MACvB,CAACza,KAAM,iBAAkBya,KAAM,MAC/B,CAACza,KAAM,UAAWya,KAAM,MACxB,CAACza,KAAM,WAAYya,KAAM,MACzB,CAACza,KAAM,WAAYya,KAAM,MACzB,CAACza,KAAM,qBAAsBya,KAAM,MACnC,CAACza,KAAM,UAAWya,KAAM,MACxB,CAACza,KAAM,QAASya,KAAM,MACtB,CAACza,KAAM,cAAeya,KAAM,MAC5B,CAACza,KAAM,oBAAqBya,KAAM,MAClC,CAACza,KAAM,UAAWya,KAAM,MACxB,CAACza,KAAM,UAAWya,KAAM,MACxB,CAACza,KAAM,WAAYya,KAAM,MACzB,CAACza,KAAM,8BAA+Bya,KAAM,MAC5C,CAACza,KAAM,gBAAiBya,KAAM,MAC9B,CAACza,KAAM,OAAQya,KAAM,MACrB,CAACza,KAAM,UAAWya,KAAM,MACxB,CAACza,KAAM,SAAUya,KAAM,MACvB,CAACza,KAAM,gBAAiBya,KAAM,MAC9B,CAACza,KAAM,mBAAoBya,KAAM,MACjC,CAACza,KAAM,8BAA+Bya,KAAM,MAC5C,CAACza,KAAM,QAASya,KAAM,MACtB,CAACza,KAAM,SAAUya,KAAM,MACvB,CAACza,KAAM,UAAWya,KAAM,MACxB,CAACza,KAAM,UAAWya,KAAM,MACxB,CAACza,KAAM,QAASya,KAAM,MACtB,CAACza,KAAM,YAAaya,KAAM,MAC1B,CAACza,KAAM,SAAUya,KAAM,MACvB,CAACza,KAAM,YAAaya,KAAM,MAC1B,CAACza,KAAM,UAAWya,KAAM,MACxB,CAACza,KAAM,aAAcya,KAAM,MAC3B,CAACza,KAAM,OAAQya,KAAM,MACrB,CAACza,KAAM,YAAaya,KAAM,MAC1B,CAACza,KAAM,WAAYya,KAAM,MACzB,CAACza,KAAM,SAAUya,KAAM,MACvB,CAACza,KAAM,gBAAiBya,KAAM,MAC9B,CAACza,KAAM,SAAUya,KAAM,MACvB,CAACza,KAAM,QAASya,KAAM,MACtB,CAACza,KAAM,oCAAqCya,KAAM,MAClD,CAACza,KAAM,gCAAiCya,KAAM,MAC9C,CAACza,KAAM,WAAYya,KAAM,MACzB,CAACza,KAAM,YAAaya,KAAM,MAC1B,CAACza,KAAM,UAAWya,KAAM,MACxB,CAACza,KAAM,UAAWya,KAAM,MACxB,CAACza,KAAM,QAASya,KAAM,MACtB,CAACza,KAAM,YAAaya,KAAM,MAC1B,CAACza,KAAM,4BAA6Bya,KAAM,MAC1C,CAACza,KAAM,OAAQya,KAAM,MACrB,CAACza,KAAM,UAAWya,KAAM,MACxB,CAACza,KAAM,cAAeya,KAAM,MAC5B,CAACza,KAAM,SAAUya,KAAM,MACvB,CAACza,KAAM,QAASya,KAAM,MACtB,CAACza,KAAM,UAAWya,KAAM,MACxB,CAACza,KAAM,QAASya,KAAM,MACtB,CAACza,KAAM,SAAUya,KAAM,MACvB,CAACza,KAAM,SAAUya,KAAM,MACvB,CAACza,KAAM,aAAcya,KAAM,MAC3B,CAACza,KAAM,QAASya,KAAM,MACtB,CAACza,KAAM,WAAYya,KAAM,MACzB,CAACza,KAAM,yCAA2Cya,KAAM,MACxD,CAACza,KAAM,qBAAsBya,KAAM,MACnC,CAACza,KAAM,SAAUya,KAAM,MACvB,CAACza,KAAM,aAAcya,KAAM,MAC3B,CAACza,KAAM,mCAAqCya,KAAM,MAClD,CAACza,KAAM,SAAUya,KAAM,MACvB,CAACza,KAAM,UAAWya,KAAM,MACxB,CAACza,KAAM,UAAWya,KAAM,MACxB,CAACza,KAAM,UAAWya,KAAM,MACxB,CAACza,KAAM,yBAA0Bya,KAAM,MACvC,CAACza,KAAM,gBAAiBya,KAAM,MAC9B,CAACza,KAAM,YAAaya,KAAM,MAC1B,CAACza,KAAM,aAAcya,KAAM,MAC3B,CAACza,KAAM,QAASya,KAAM,MACtB,CAACza,KAAM,6CAA8Cya,KAAM,MAC3D,CAACza,KAAM,aAAcya,KAAM,MAC3B,CAACza,KAAM,SAAUya,KAAM,MACvB,CAACza,KAAM,WAAYya,KAAM,MACzB,CAACza,KAAM,WAAYya,KAAM,MACzB,CAACza,KAAM,OAAQya,KAAM,MACrB,CAACza,KAAM,QAASya,KAAM,MACtB,CAACza,KAAM,mBAAoBya,KAAM,MACjC,CAACza,KAAM,aAAcya,KAAM,MAC3B,CAACza,KAAM,aAAcya,KAAM,MAC3B,CAACza,KAAM,YAAaya,KAAM,MAC1B,CAACza,KAAM,UAAWya,KAAM,MACxB,CAACza,KAAM,SAAUya,KAAM,MACvB,CAACza,KAAM,kCAAmCya,KAAM,MAChD,CAACza,KAAM,uBAAwBya,KAAM,MACrC,CAACza,KAAM,SAAUya,KAAM,MACvB,CAACza,KAAM,WAAYya,KAAM,MACzB,CAACza,KAAM,aAAcya,KAAM,MAC3B,CAACza,KAAM,UAAWya,KAAM,MACxB,CAACza,KAAM,aAAcya,KAAM,MAC3B,CAACza,KAAM,UAAWya,KAAM,MACxB,CAACza,KAAM,UAAWya,KAAM,MACxB,CAACza,KAAM,QAASya,KAAM,MACtB,CAACza,KAAM,QAASya,KAAM,MACtB,CAACza,KAAM,cAAeya,KAAM,MAC5B,CAACza,KAAM,uBAAwBya,KAAM,MACrC,CAACza,KAAM,gBAAiBya,KAAM,MAC9B,CAACza,KAAM,cAAeya,KAAM,MAC5B,CAACza,KAAM,YAAaya,KAAM,MAC1B,CAACza,KAAM,QAASya,KAAM,MACtB,CAACza,KAAM,UAAWya,KAAM,MACxB,CAACza,KAAM,OAAQya,KAAM,MACrB,CAACza,KAAM,iBAAkBya,KAAM,MAC/B,CAACza,KAAM,2BAA4Bya,KAAM,MACzC,CAACza,KAAM,SAAUya,KAAM,MACvB,CAACza,KAAM,OAAQya,KAAM,MACrB,CAACza,KAAM,QAASya,KAAM,MACtB,CAACza,KAAM,kCAAmCya,KAAM,MAChD,CAACza,KAAM,SAAUya,KAAM,MACvB,CAACza,KAAM,mBAAoBya,KAAM,MACjC,CAACza,KAAM,WAAYya,KAAM,MACzB,CAACza,KAAM,OAAQya,KAAM,MACrB,CAACza,KAAM,cAAeya,KAAM,MAC5B,CAACza,KAAM,WAAYya,KAAM,MACzB,CAACza,KAAM,SAAUya,KAAM,MACvB,CAACza,KAAM,WAAYya,KAAM,MACzB,CAACza,KAAM,cAAeya,KAAM,MAC5B,CAACza,KAAM,QAASya,KAAM,MACtB,CAACza,KAAM,UAAWya,KAAM,MACxB,CAACza,KAAM,UAAWya,KAAM,MACxB,CAACza,KAAM,qBAAsBya,KAAM,MACnC,CAACza,KAAM,SAAUya,KAAM,MACvB,CAACza,KAAM,eAAgBya,KAAM,MAC7B,CAACza,KAAM,wBAAyBya,KAAM,MACtC,CAACza,KAAM,cAAeya,KAAM,MAC5B,CAACza,KAAM,4BAA6Bya,KAAM,MAC1C,CAACza,KAAM,mCAAoCya,KAAM,MACjD,CAACza,KAAM,QAASya,KAAM,MACtB,CAACza,KAAM,aAAcya,KAAM,MAC3B,CAACza,KAAM,wBAAyBya,KAAM,MACtC,CAACza,KAAM,eAAgBya,KAAM,MAC7B,CAACza,KAAM,UAAWya,KAAM,MACxB,CAACza,KAAM,wBAAyBya,KAAM,MACtC,CAACza,KAAM,aAAcya,KAAM,MAC3B,CAACza,KAAM,eAAgBya,KAAM,MAC7B,CAACza,KAAM,YAAaya,KAAM,MAC1B,CAACza,KAAM,WAAYya,KAAM,MACzB,CAACza,KAAM,WAAYya,KAAM,MACzB,CAACza,KAAM,kBAAmBya,KAAM,MAChC,CAACza,KAAM,UAAWya,KAAM,MACxB,CAACza,KAAM,eAAgBya,KAAM,MAC7B,CAACza,KAAM,+CAAgDya,KAAM,MAC7D,CAACza,KAAM,QAASya,KAAM,MACtB,CAACza,KAAM,YAAaya,KAAM,MAC1B,CAACza,KAAM,QAASya,KAAM,MACtB,CAACza,KAAM,WAAYya,KAAM,MACzB,CAACza,KAAM,yBAA0Bya,KAAM,MACvC,CAACza,KAAM,YAAaya,KAAM,MAC1B,CAACza,KAAM,SAAUya,KAAM,MACvB,CAACza,KAAM,cAAeya,KAAM,MAC5B,CAACza,KAAM,uBAAwBya,KAAM,MACrC,CAACza,KAAM,4BAA6Bya,KAAM,MAC1C,CAACza,KAAM,aAAcya,KAAM,MAC3B,CAACza,KAAM,+BAAgCya,KAAM,MAC7C,CAACza,KAAM,WAAYya,KAAM,MACzB,CAACza,KAAM,cAAey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","sources":["src/components/projectProvider.tsx","src/components/ory/helpers/auth.tsx","src/components/ory/helpers/axios.tsx","src/components/ory/sdk.ts","src/components/authProvider.tsx","src/components/ory/ui/messages.tsx","src/components/ory/helpers/sdk.tsx","src/components/ory/helpers/form.tsx","src/components/ory/ui/Node/Image.tsx","src/components/ory/ui/Node/Input.tsx","src/components/ory/ui/styled-components/StyledText.tsx","src/components/ory/ui/Node/Text.tsx","assets/AppConstants.ts","src/screens/LoginScreen/LoginScreenStyleSheet.ts","src/components/ory/ui/Node/InputSubmit.tsx","src/components/ory/ui/Node/Node.tsx","src/components/ory/selfServiceFlow.tsx","src/ScreenWrappers/AuthScreenWrapper/AuthScreenWrapperStyle.ts","src/miscComponents/HideKeyboard.tsx","src/ScreenWrappers/AuthScreenWrapper/LegalToolTip.tsx","src/ScreenWrappers/AuthScreenWrapper.tsx","src/screens/LoginScreen/ChangePasswordModal.tsx","src/screens/login.tsx","src/GlobalStyles.ts","src/screens/SignupScreen/SignupComponents/SignupMiscComponents/CustomTextInput.tsx","src/screens/RegisterScreen/PasswordValidationView.tsx","src/components/ResponseModal.tsx","src/screens/registration.tsx","src/components/ButtonMain.tsx","src/screens/IntroCarousel.tsx","api/axiosWrapperUserService.ts","api/lib/UserService.ts","src/screens/SignupScreen/SignupComponents/WelcomeScreen.tsx","src/miscComponents/HorizontalNavigator.tsx","src/screens/SignupScreen/SignupComponents/SignupLegalNames.tsx","src/screens/SignupScreen/SignupComponents/SignupMiscComponents/CountrySelector.tsx","assets/countryListISO3.ts","src/screens/SignupScreen/SignupComponents/SignupTaxResidence.tsx","src/screens/SignupScreen/SignupComponents/SignupCitizenship.tsx","src/screens/SignupScreen/SignupComponents/SignupMiscComponents/CustomDatePicker.tsx","src/screens/SignupScreen/SignupComponents/SignupDOB.tsx","src/screens/SignupScreen/SignupComponents/SignupBirthCountry.tsx","src/screens/SignupScreen/SignupComponents/SignupIDDetails.tsx","src/screens/SignupScreen/SignupComponents/SignupAddress.tsx","src/screens/SignupScreen/SignupComponents/SignupMiscComponents/CustomSelector.tsx","src/screens/SignupScreen/SignupComponents/SignupMiscComponents/CustomNumericTextInput.tsx","src/screens/SignupScreen/SignupComponents/SignupIncomeDetails.tsx","src/screens/SignupScreen/SignupComponents/SignupAffiliationQs.tsx","src/miscComponents/BooleanSelector.tsx","src/screens/SignupScreen/SignupComponents/SignupPEPQuestion.tsx","src/screens/SignupScreen/SignupComponents/SignupAffiliationDetails.tsx","src/screens/SignupScreen/SignupComponents/SignupPEPFollowups.tsx","src/screens/SignupScreen/SignupComponents/SignupFATCA.tsx","src/screens/SignupScreen/SignupComponents/SignupNONUSDeclaration.tsx","src/screens/SignupScreen/SignupComponents/SignupW8.tsx","src/screens/SignupScreen/SignupComponents/SignupMiscComponents/CustomDocumentSelector.tsx","src/screens/SignupScreen/SignupComponents/SignupMiscComponents/CustomPictureSelector.tsx","src/screens/SignupScreen/SignupComponents/SignupDocumentUpload.tsx","src/screens/SignupScreen/SignupComponents/SignupAgreementsDisclosures.tsx","src/screens/SignupScreen/SignupComponents/SignupLastScreen.tsx","api/axiosWrapper.ts","src/Interfaces/HttpException.ts","api/lib/AlpacaService.ts","src/components/SpinnerModal.tsx","src/ScreenWrappers/SignupScreenWrapper.tsx","src/screens/SignupScreen/SignupComponents/SignupOptionalDetails.tsx","src/screens/SignupScreen.tsx","src/Navigators/DashboardTabNavigator/CustomTabBar.tsx","src/screens/AppDashboardHome/BigButtonSquare.tsx","api/lib/MiscService.ts","src/components/ServiceDownModal.tsx","src/screens/AppDashboardHome/AssetDataRectangle.tsx","src/screens/AppDashboardHome/BigButtonRectangle.tsx","src/screens/AppDashboardHome/MarketItem.tsx","src/screens/AppDashboardHome/RingButtonSquare.tsx","src/screens/AppDashboardHome.tsx","src/screens/AppDashboardAddFunds.tsx","src/screens/AppDashboardInvest/ConfigModal.tsx","src/components/ConfirmationModal.tsx","src/screens/AppDashboardInvest.tsx","src/screens/AppDashboardWithdraw.tsx","src/screens/AppDashboardMarkets.tsx","src/screens/AppDashboardNewsScreen.tsx","src/screens/AppDashboardMyPortfolioEquities.tsx","src/screens/AppDashboardIndivdualStock/TradeBox.tsx","src/screens/AppDashboardIndividualStock.tsx","src/components/CopyToClipboard.tsx","src/screens/AppDashboardUserProfile.tsx","src/screens/AppDashboardAccountStatements.tsx","src/screens/AppDashboardEditProfile/HorizontalNavigator.tsx","src/screens/AppDashboardEditProfile/PersonalDetailForm.tsx","src/screens/AppDashboardEditProfile/FinancialDetailForm.tsx","src/screens/AppDashboardEditProfile/EmploymentDetailForm.tsx","src/screens/AppDashboardEditProfile/BankDetailForm.tsx","src/screens/AppDashboardEditProfile/TrustedContentDetailForm.tsx","src/screens/AppDashboardEditProfile.tsx","src/screens/AppDashboardSell.tsx","src/screens/AppDashboardTransactions/TransactionItem.tsx","src/screens/AppDashboardTransactions/TransferItem.tsx","src/screens/AppDashboardTransactions/DividendsItem.tsx","src/screens/AppDashboardTransactions.tsx","api/axiosWrapperBalanceService.ts","api/lib/AlpacaBalanceService.ts","api/axiosWrapperBrokerAPI.ts","api/lib/AlpacaBrokerAPIService.ts","api/axiosWrapperDocumentService.ts","api/lib/AlpacaDocumentsService.ts","src/screens/AppDashboardWithdrawals.tsx","src/components/ReferralBonusModal.tsx","api/axiosWrapperReferralService.ts","api/lib/ReferralService.ts","src/Navigators/DashboardTabNavigator.tsx","src/screens/OutOfService.tsx","src/screens/PendingVerificationScreen.tsx","src/screens/InformationRequestScreen.tsx","src/screens/OnfidoScreen.tsx","src/screens/ContactUsScreen.tsx","src/screens/SignupScreen/SignupComponents/SignupEmailOTP.tsx","src/screens/verification.tsx","src/components/ReferrralResponseModal.tsx","src/screens/ReferralCodeScreen.tsx","src/components/navigation.tsx","src/components/UpdateAppModal.tsx","App.tsx","index.js","src/screens/SignupScreen/SignupComponents|sync","webpack/bootstrap","webpack/runtime/amd options","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/create fake namespace object","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/harmony module decorator","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/node module decorator","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["// This file defines a React Context which keeps track of the authenticated session.\n\nimport React, { createContext, ReactNode, useEffect, useState } from \"react\"\n\ninterface Context {\n  project: string\n  setProject: (project: string) => void\n}\n\nexport const ProjectContext = createContext<Context>({\n  setProject: () => {},\n  project: \"zen-northcutt-e1j153agmu\",\n})\n\ninterface Props {\n  children: ReactNode\n}\n\nexport default ({ children }: Props) => {\n  const [project, setProject] = useState(\"playground\")\n\n  return (\n    <ProjectContext.Provider\n      value={{\n        // Helpers to set the global Ory Project for this app.\n        project,\n        setProject: (project: string) => {\n          setProject(project)\n        },\n      }}\n    >\n      {children}\n    </ProjectContext.Provider>\n  )\n}\n","// This file handles the authentication state.\n\nimport { Session } from \"@ory/client\"\nimport AsyncStorage from \"@react-native-async-storage/async-storage\"\nimport * as SecureStore from \"expo-secure-store\"\nimport { Platform } from \"react-native\"\n\n// The key under which the session is being stored\nconst userSessionName = \"user_session\"\n\n// The session type\nexport type SessionContext = {\n  // The session token\n  session_token: string\n\n  // The session itself\n  session: Session\n} | null\n\n// getAuthenticatedSession returns a promise with the session of the authenticated user, if the\n// user is authenticated or null is the user is not authenticated.\n//\n// If an error (e.g. network error) occurs, the promise rejects with an error.\nexport const getAuthenticatedSession = (): Promise<SessionContext> => {\n  const parse = (sessionRaw: string | null): SessionContext => {\n    if (!sessionRaw) {\n      return null\n    }\n\n    // sessionRaw is a JSON String that needs to be parsed.\n    return JSON.parse(sessionRaw)\n  }\n\n  let p = AsyncStorage.getItem(userSessionName)\n  if (Platform.OS !== \"web\") {\n    // We can use SecureStore if not on web instead!\n    p = SecureStore.getItemAsync(userSessionName)\n  }\n\n  return p.then(parse)\n}\n\n// Sets the session.\nexport const setAuthenticatedSession = (\n  session: SessionContext,\n): Promise<void> => {\n  if (!session) {\n    return killAuthenticatedSession()\n  }\n\n  if (Platform.OS === \"web\") {\n    // SecureStore is not available on the web platform. We need to use AsyncStore\n    // instead.\n    return AsyncStorage.setItem(userSessionName, JSON.stringify(session))\n  }\n\n  return (\n    SecureStore\n      // The SecureStore only supports strings so we encode the session.\n      .setItemAsync(userSessionName, JSON.stringify(session))\n  )\n}\n\n// Removes the session from the store.\nexport const killAuthenticatedSession = async () => {\n  if (Platform.OS === \"web\") {\n    // SecureStore is not available on the web platform. We need to use AsyncStorage instead.\n    try {\n      const userSessionName = \"user_session\"; // Assuming userSessionName is defined somewhere\n      const a = await AsyncStorage.removeItem(userSessionName);\n      console.log(\"User session removed successfully\",a)\n      return a\n\n    } catch (error) {\n      console.error(\"Failed to remove user session\", error);\n    }\n  } else {\n    console.warn(\"killAuthenticatedSession is not supported on this platform.\");\n    return SecureStore.deleteItemAsync(userSessionName)\n    // You might want to implement platform-specific behavior here if needed.\n  }\n\n\n  \n}\n","// A small which adds retries to axios\n\nimport { AxiosInstance } from \"axios\"\n\nexport const resilience = (axios: AxiosInstance) => {\n  axios.interceptors.response.use(\n    (v) => Promise.resolve(v),\n    (error) => {\n      if (!error.config) {\n        console.error(\"Received network error without axios details\", error)\n        return Promise.reject(error)\n      }\n\n      if (\n        error.response &&\n        (error.response.status == 400 ||\n          error.response.status == 401 ||\n          error.response.status == 403)\n      ) {\n        console.debug(\"Network request failed but this is ok\", {\n          config: error.config,\n          error,\n        })\n        return Promise.reject(error)\n      }\n\n      if (\n        error.response &&\n        (error.response.status >= 400 || error.response.status < 500)\n      ) {\n        // 4xx status means we should not retry.\n        console.error(\"Network request failed\", { config: error.config, error })\n        return Promise.reject(error)\n      }\n\n      const config = {\n        ...error.config,\n        timeout: 1000,\n        count: (error?.config?.count || 0) + 1,\n      }\n\n      if (config.count > 60) {\n        const err = new Error(\n          \"Unable to reach network, gave up after 60 retries. Please restart the app and try again.\",\n        )\n        console.error(err, { config: error.config, error })\n        return Promise.reject(err)\n      }\n\n      console.debug(\"Retrying due to network error\", {\n        count: error.config.count,\n        error,\n      })\n      return new Promise((resolve, reject) => {\n        setTimeout(() => {\n          axios.request(config).then(resolve).catch(reject)\n        }, 1000)\n      })\n    },\n  )\n}\n","import { Configuration, FrontendApi } from \"@ory/client\"\nimport Constants from \"expo-constants\"\nimport axiosFactory from \"axios\"\nimport { resilience } from \"./helpers/axios\"\n\nconst axios = axiosFactory.create()\nresilience(axios) // Adds retry mechanism to axios\n\n// canonicalize removes the trailing slash from URLs.\nconst canonicalize = (url: string = \"\") => url.replace(/\\/+$/, \"\")\n\n// This value comes from ../../app.config.js\nexport const kratosUrl = (project: string = \"playground\") => {\n  const url = canonicalize(\"https://auth.elphinstone.us/\") || \"\"\n//ory_pat_fMv3vNvPTchD7kSHLYpPlv7L3WjNmSEa\n  if (url.indexOf(\"https://playground.projects.oryapis.com/\") == -1) {\n    // The URL is not from Ory, so let's just return it.\n    return url\n  }\n\n  // We handle a special case where we allow the project to be changed\n  // if you use an ory project.\n  return url.replace(\"playground.\", `${project}.`)\n}\n\nexport const newOrySdk = (project: string) =>\n  new FrontendApi(\n    new Configuration({\n      basePath: kratosUrl(project),\n      baseOptions: {\n        // Setting this is very important as axios will send the CSRF cookie otherwise\n        // which causes problems with ORY Kratos' security detection.\n        withCredentials: false,\n\n        // Timeout after 5 seconds.\n        timeout: 10000,\n      },\n    }),\n    \"\",\n    // Ensure that we are using the axios client with retry.\n    axios,\n  )","// This file defines a React Context which keeps track of the authenticated session.\n\nimport { Session } from \"@ory/client\"\nimport { AxiosError } from \"axios\"\nimport React, {\n  createContext,\n  ReactNode,\n  useContext,\n  useEffect,\n  useState,\n} from \"react\"\nimport {\n  getAuthenticatedSession,\n  killAuthenticatedSession,\n  SessionContext,\n  setAuthenticatedSession,\n} from \"./ory/helpers/auth\"\nimport { newOrySdk } from \"./ory/sdk\"\nimport { ProjectContext } from \"./projectProvider\"\n\ninterface Context {\n  session?: Session\n  sessionToken?: string\n  setSession: (session: SessionContext) => void\n  syncSession: () => Promise<void>\n  didFetch: boolean\n  isAuthenticated: boolean\n}\n\nexport const AuthContext = createContext<Context>({\n  setSession: () => {},\n  syncSession: () => Promise.resolve(),\n  didFetch: false,\n  isAuthenticated: false,\n})\n\ninterface AuthContextProps {\n  children: ReactNode\n}\n\nexport default ({ children }: AuthContextProps) => {\n  const { project } = useContext(ProjectContext)\n  const [sessionContext, setSessionContext] = useState<\n    SessionContext | undefined\n  >(undefined)\n\n  // Fetches the authentication session.\n  useEffect(() => {\n    getAuthenticatedSession().then(syncSession)\n  }, [])\n\n  const syncSession = (auth: SessionContext) => {\n    if (!auth) {\n      return setAuth(null)\n    }\n\n    // Use the session token from the auth session:\n    return (\n      newOrySdk(project)\n        // whoami() returns the session belonging to the session_token:\n        .toSession({ xSessionToken: auth.session_token })\n        .then(({ data: session }) => {\n          // This means that the session is still valid! The user is logged in.\n          //\n          // Here you could print the user's email using e.g.:\n          //\n          console.log(session.identity.traits.email)\n          setSessionContext({ session, session_token: auth.session_token })\n          return Promise.resolve()\n        })\n        .catch((err: AxiosError) => {\n          if (err.response?.status === 401) {\n            // The user is no longer logged in (hence 401)\n            // console.log('Session is not authenticated:', err)\n          } else {\n            // A network or some other error occurred\n            console.error(err)\n          }\n\n          // Remove the session / log the user out.\n          setSessionContext(null)\n        })\n    )\n  }\n\n  const setAuth = (session: SessionContext) => {\n    if (!session) {\n      console.log(\"Session to be removed:\", session);\n      killAuthenticatedSession().then((res)=>{console.log(\"RES\",res)})\n      //setSessionContext\n      return killAuthenticatedSession().then(() => setSessionContext(null));\n    }\n  \n    setAuthenticatedSession(session).then(() => syncSession(session));\n  };\n\n  if (sessionContext === undefined) {\n    return null\n  }\n\n  return (\n    <AuthContext.Provider\n      value={{\n        // The session information\n        session: sessionContext?.session,\n        sessionToken: sessionContext?.session_token,\n\n        // Is true when the user has a session\n        isAuthenticated: Boolean(sessionContext?.session_token),\n\n        // Fetches the session from the server\n        syncSession: () => getAuthenticatedSession().then(syncSession),\n\n        // Allows to override the session\n        setSession: setAuth,\n\n        // Is true if we have fetched the session.\n        didFetch: true,\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  )\n}","import React from \"react\";\nimport { View, Text, Dimensions } from \"react-native\";\nimport { UiText } from \"@ory/kratos-client\";\n\ninterface Props {\n  messages?: Array<UiText>;\n  testID?: string;\n}\n\nexport default ({ messages = [], testID }: Props) => (\n  <View testID={testID}>\n    {messages.map(({ text, id }, k) => (\n      <Text\n        style={{\n          color: \"red\",\n          padding: 10,\n          textAlign: \"center\",\n          marginBottom: 32,\n          width: Dimensions.get('window').width * 0.9\n        }}\n        testID={`ui/message/${id}`}\n        key={`${id}${k}`}\n      >\n        {text === 'The provided credentials are invalid, check for spelling mistakes in your password or username, email address, or phone number.' ? \"The provided credentials are invalid.\" : text}\n      </Text>\n    ))}\n  </View>\n);\n","import { Configuration, FrontendApi } from \"@ory/client\"\nimport axiosFactory from \"axios\"\nimport Constants from \"expo-constants\"\nimport { resilience } from \"./axios\"\n\nconst axios = axiosFactory.create()\nresilience(axios) // Adds retry mechanism to axios\n\n// canonicalize removes the trailing slash from URLs.\nconst canonicalize = (url: string = \"\") => url.replace(/\\/+$/, \"\")\n\n// This value comes from ../../app.config.js\nexport const kratosUrl = (project: string = \"playground\") => {\n  const url = canonicalize(Constants.manifest?.extra?.kratosUrl) || \"\"\n\n  if (url.indexOf(\"https://playground.projects.oryapis.com/\") == -1) {\n    // The URL is not from Ory, so let's just return it.\n    return url\n  }\n\n  // We handle a special case where we allow the project to be changed\n  // if you use an ory project.\n  return url.replace(\"playground.\", `${project}.`)\n}\n\nexport const newOrySdk = (project: string) =>\n  new FrontendApi(\n    new Configuration({\n      basePath: kratosUrl(project),\n      baseOptions: {\n        // Setting this is very important as axios will send the CSRF cookie otherwise\n        // which causes problems with ORY Kratos' security detection.\n        withCredentials: false,\n\n        // Timeout after 5 seconds.\n        timeout: 10000,\n      },\n    }),\n    \"\",\n    // Ensure that we are using the axios client with retry.\n    axios,\n  )\n","import {\n  FrontendApiExchangeSessionTokenRequest,\n  GenericError,\n  LoginFlow,\n  RegistrationFlow,\n  UiNode,\n  UiNodeAnchorAttributes,\n  UiNodeAttributes,\n  UiNodeImageAttributes,\n  UiNodeInputAttributes,\n  UiNodeTextAttributes,\n} from \"@ory/client\"\nimport { showMessage } from \"react-native-flash-message\"\nimport * as WebBrowser from \"expo-web-browser\"\nimport { SessionContext } from \"./auth\"\nimport { newOrySdk } from \"./sdk\"\nimport { AxiosError } from \"axios\"\n\nexport function camelize<T>(str: string) {\n  return str.replace(/_([a-z])/g, (g) => g[1].toUpperCase()) as keyof T\n}\n\nexport function isUiNodeAnchorAttributes(\n  pet: UiNodeAttributes,\n): pet is UiNodeAnchorAttributes {\n  return (pet as UiNodeAnchorAttributes).href !== undefined\n}\n\nexport function isUiNodeImageAttributes(\n  pet: UiNodeAttributes,\n): pet is UiNodeImageAttributes {\n  return (pet as UiNodeImageAttributes).src !== undefined\n}\n\nexport function isUiNodeInputAttributes(\n  pet: UiNodeAttributes,\n): pet is UiNodeInputAttributes {\n  return (pet as UiNodeInputAttributes).name !== undefined\n}\n\nexport function isUiNodeTextAttributes(\n  pet: UiNodeAttributes,\n): pet is UiNodeTextAttributes {\n  return (pet as UiNodeTextAttributes).text !== undefined\n}\n\nexport function getNodeId({ attributes }: UiNode) {\n  if (isUiNodeInputAttributes(attributes)) {\n    return attributes.name\n  } else {\n    return attributes.id\n  }\n}\n\nexport function getNodeValue({ attributes }: UiNode) {\n  if (isUiNodeInputAttributes(attributes)) {\n    return attributes.value\n  }\n\n  return \"\"\n}\n\nexport const getNodeTitle = ({ attributes, meta }: UiNode): string => {\n  if (isUiNodeInputAttributes(attributes)) {\n    if (meta?.label?.text) {\n      return meta.label.text\n    }\n    return attributes.name\n  }\n\n  if (meta?.label?.text) {\n    return meta.label.text\n  }\n\n  return \"\"\n}\n\nexport function handleFlowInitError(err: AxiosError) {\n  return\n}\n\nexport function handleFormSubmitError<\n  T extends RegistrationFlow | LoginFlow | undefined,\n>(\n  flow: T,\n  setFlow: (p: T) => void,\n  initializeFlow: () => void,\n  setSession: (p: SessionContext) => void,\n  refetchFlow: () => Promise<void>,\n  logout?: () => void,\n) {\n  return (err: AxiosError) => {\n    if (err.response) {\n      switch (err.response.status) {\n        case 400:\n          if (typeof err.response.data.error === \"object\") {\n            const ge: GenericError = err.response.data\n            showMessage({\n              message: `${ge.message}: ${ge.reason}`,\n              type: \"danger\",\n            })\n\n            return Promise.resolve()\n          }\n\n          console.debug(\"Form validation failed:\", err.response.data)\n          setFlow(err.response.data)\n          return Promise.resolve()\n        case 404:\n        case 410:\n          // This happens when the flow is, for example, expired or was deleted.\n          // We simply re-initialize the flow if that happens!\n          console.debug(\"Flow could not be found, reloading page.\")\n          initializeFlow()\n          return Promise.resolve()\n        case 403:\n        case 401:\n          if (!logout) {\n            console.error(\n              `Received unexpected 401/403 status code: `,\n              err,\n              err.response.data,\n            )\n            return Promise.resolve()\n          }\n\n          // This happens when the privileged session is expired but the user tried\n          // to modify a privileged field (e.g. change the password).\n          console.warn(\n            \"The server indicated that this action is not allowed for you. The most likely cause of that is that you modified a privileged field (e.g. your password) but your ORY Kratos Login Session is too old.\",\n          )\n          showMessage({\n            message: \"Please re-authenticate before making these changes.\",\n            type: \"warning\",\n          })\n          logout()\n          return Promise.resolve()\n        case 422:\n          handleRedirectBrowserTo(\n            err.response.data.redirect_browser_to,\n            flow,\n            setSession,\n            refetchFlow,\n          )\n          return Promise.resolve()\n      }\n    }\n\n    console.error(err, err.response?.data)\n    return Promise.resolve()\n  }\n}\n\nasync function handleRedirectBrowserTo(\n  url: string,\n  flow: LoginFlow | RegistrationFlow | undefined,\n  setSession: (p: SessionContext) => void,\n  refetchFlow: () => Promise<void>,\n) {\n  const fetchToken = (params: FrontendApiExchangeSessionTokenRequest) =>\n    newOrySdk(\"\").exchangeSessionToken(params)\n  const setToken = (res: Awaited<ReturnType<typeof fetchToken>>) =>\n    res?.data.session_token &&\n    setSession({\n      session: res.data.session,\n      session_token: res.data.session_token,\n    })\n\n  const result = await WebBrowser.openAuthSessionAsync(\n    url,\n    \"http://localhost:4457/Callback\",\n  )\n  if (result.type == \"success\") {\n    // We can fetch the session token now!\n    const initCode = flow?.session_token_exchange_code\n    const returnToCode = new URL(result.url).searchParams.get(\"code\")\n    if (!initCode || !returnToCode) {\n      console.log(\"code missing, refetching flow\")\n      return refetchFlow()\n    }\n    fetchToken({ initCode, returnToCode })\n      .then(setToken)\n      .catch(() => {\n        console.log(\"failed to get session\")\n        refetchFlow()\n      })\n  } else {\n    console.log(\"authentication canceled, refetching flow\")\n    return refetchFlow()\n  }\n}\n","import React from \"react\"\nimport { UiNode, UiNodeImageAttributes } from \"@ory/kratos-client\"\nimport { getNodeId } from \"../../helpers/form\"\nimport { View, Image } from \"react-native\"\n\ninterface Props {\n  node: UiNode\n  attributes: UiNodeImageAttributes\n}\n\nconst StyledImage = ({ attributes }: Props) => { \n  return( <Image\n  source={{uri : attributes.src}}\n  style = {{\n    width: attributes.width,\n    height: attributes.height\n  }}\n/>)}\n\nexport const NodeImage = (props: Props) => {\n  const name = getNodeId(props.node)\n  return (\n    <View testID={`field/${name}`}>\n      <StyledImage\n        {...props}\n      />\n    </View>\n  )\n}\n","import { UiNode, UiNodeInputAttributes } from \"@ory/kratos-client\"\nimport React from \"react\"\nimport { TextInputProps, View, Text, TextInput, Dimensions } from \"react-native\"\n\nimport {\n  getNodeId,\n  getNodeTitle,\n  isUiNodeInputAttributes,\n} from \"../../helpers/form\"\n\ninterface Props extends InputProps {\n  node: UiNode\n  attributes: UiNodeInputAttributes\n}\n\nexport interface InputProps {\n  onChange: (value: any) => void\n  value: any\n  disabled?: boolean\n  textInputOverride?: TextInputOverride\n}\n\nexport type TextInputOverride = (\n  field: UiNode,\n  props: TextInputProps,\n) => TextInputProps\n\nconst guessVariant = ({ attributes }: UiNode) => {\n  if (!isUiNodeInputAttributes(attributes)) {\n    return \"text\"\n  }\n\n  if (attributes.name === \"identifier\") {\n    return \"username\"\n  }\n\n  switch (attributes.type) {\n    case \"hidden\":\n      return null\n    case \"email\":\n      return \"email\"\n    case \"submit\":\n      return \"button\"\n    case \"password\":\n      return \"password\"\n    default:\n      return \"text\"\n  }\n}\n\nconst typeToState = ({\n  type,\n  disabled,\n}: {\n  type?: string\n  disabled?: boolean\n}) => {\n  if (disabled) {\n    return \"disabled\"\n  }\n  switch (type) {\n    case \"error\":\n      return \"error\"\n  }\n  return undefined\n}\n\n\nexport const NodeInput = ({\n  node,\n  attributes,\n  value,\n  onChange,\n  disabled,\n  textInputOverride,\n}: Props) => {\n  const variant = guessVariant(node)\n  if (!variant) {\n    return null\n  }\n  let extraProps: TextInputProps = {}\n  switch (variant) {\n    case \"email\":\n      extraProps.autoComplete = \"email\"\n      extraProps.keyboardType = \"email-address\"\n      extraProps.textContentType = \"emailAddress\"\n      extraProps.autoCapitalize = \"none\"\n      extraProps.autoCorrect = false\n      break\n    case \"password\":\n      extraProps.autoComplete = \"password\"\n      extraProps.textContentType = \"password\"\n      extraProps.autoCapitalize = \"none\"\n      extraProps.placeholder = \"password\"\n      extraProps.secureTextEntry = true\n      extraProps.autoCorrect = false\n      break\n    case \"username\":\n      extraProps.autoComplete = \"username\"\n      extraProps.textContentType = \"username\"\n      extraProps.autoCapitalize = \"none\"\n      extraProps.placeholder = \"email address\"\n      extraProps.autoCorrect = false\n      break\n  }\n\n  if (textInputOverride) {\n    extraProps = textInputOverride(node, extraProps)\n  }\n\n  const name = getNodeId(node)\n  const title = getNodeTitle(node)\n\n  return (\n    <View testID={`field/${name}`}>\n      {/* <Text>{title}</Text> */}\n      <TextInput\n        testID={name}\n        onChange={onChange}\n        value={value ? String(value) : \"\"}\n        editable={!disabled}\n        onChangeText={onChange}\n        style={{\n          width:'100%',\n          height: 64,\n          borderWidth: 1,\n          borderColor: '#DDDDDD',\n          fontSize: 16,\n          padding:10,\n          borderRadius: 6,\n          marginVertical:10\n        }}\n        {...extraProps}\n      />\n      <>\n        {node.messages?.map(({ text, id, type }, k) => (\n          <Text key={`${id}${k}`} style={{fontFamily:'ArialNova', color:'red'}}>\n            {text === 'Property identifier is missing.' && \"Email Address is missing\" }\n            {text === 'Property password is missing.' && \"Password is missing\" }\n\n          </Text>\n        ))}\n      </>\n    </View>\n  )\n}\n","/*import React, { ReactNode, useContext } from \"react\"\nimport styled from \"styled-components/native\"\nimport {\n  typographyCaptionStyles,\n  typographyCodeStyles,\n  typographyH1Styles,\n  typographyH2Styles,\n  typographyH3Styles,\n  typographyLeadStyles,\n  typographyParagraphStyles,\n} from \"@ory/themes\"\nimport { TextProps } from \"react-native\"\n\ninterface StyledTextProps extends TextProps {\n  variant?:\n    | \"p\"\n    | \"h1\"\n    | \"h2\"\n    | \"h3\"\n    | \"caption\"\n    | \"lead\"\n    | \"code\"\n    | \"code-block\"\n  children: ReactNode\n}\n\nconst Paragraph = styled.Text(typographyParagraphStyles)\n\nconst H1 = styled.Text(typographyH1Styles)\n\nconst H2 = styled.Text(typographyH2Styles)\n\nconst H3 = styled.Text(typographyH3Styles)\n\nconst Caption = styled.Text(typographyCaptionStyles)\n\nconst Lead = styled.Text(typographyLeadStyles)\n\nconst Code = styled.Text(typographyCodeStyles)\n\nexport default ({ variant, ...props }: StyledTextProps) => {\n  switch (variant) {\n    case \"h1\":\n      return <H1 {...props} />\n    case \"h2\":\n      return <H2 {...props} />\n    case \"h3\":\n      return <H3 {...props} />\n    case \"caption\":\n      return <Caption {...props} />\n    case \"lead\":\n      return <Lead {...props} />\n    case \"code\":\n      return <Code {...props} />\n    case \"p\":\n    default:\n      return <Paragraph {...props} />\n  }\n}*/\n\nexport default {}","import React from \"react\"\nimport { Dimensions, View } from \"react-native\"\nimport { UiNode, UiNodeTextAttributes } from \"@ory/kratos-client\"\nimport StyledText from \"../styled-components/StyledText\"\nimport { getNodeId } from \"../../helpers/form\"\n\ninterface Props {\n  node: UiNode\n  attributes: UiNodeTextAttributes\n}\n\nexport const NodeText = (props: Props) => {\n  const name = getNodeId(props.node)\n  return (\n    <View style={{\n      marginBottom : 14,\n\n    }} testID={`field/${name}`}>\n      {props.node.meta.label?.text && (\n        <StyledText variant=\"lead\" testID={`field/${name}/label`}>\n          {props.node.meta.label?.text}\n        </StyledText>\n      )}\n      <StyledText variant=\"h3\" testID={`field/${name}/text`}>\n        {props.attributes.text.text}\n      </StyledText>\n    </View>\n  )\n}\n","export const AppConstants = {\n    loginHeaderBlue : '#004DBC',\n    GenericErrorResponse : {\n        message : \"Some error occurred\",\n        subMessage : \"E-mail us at help@elphinstone.us if the error persists.\",\n        isSuccess : false\n    }\n}\nexport const AlpacaAccountsError = (msg: string, errorCode: number, orderType: string) => ({\n    GenericErrorResponse : {\n        message : `Your ${orderType.toLowerCase()} order has been rejected with status code ${errorCode} due to ${msg}`,\n        subMessage : \"E-mail us at help@elphinstone.us if the error persists.\",\n        isSuccess : false\n    }\n});\n\nexport const humanReadableDate = (ts : any) => {\n    const timestamp = Date.now();\n    const date = new Date(timestamp);\n    const year = date.getFullYear();\n    const month = ('0' + (date.getMonth() + 1)).slice(-2);\n    const day = ('0' + date.getDate()).slice(-2);\n    const hours = ('0' + date.getHours()).slice(-2);\n    const minutes = ('0' + date.getMinutes()).slice(-2);\n    const seconds = ('0' + date.getSeconds()).slice(-2);\n    return `${year}-${month}-${day} ${hours}:${minutes}:${seconds}`;\n}","import { \n    StyleSheet,\n    Dimensions,\n    Platform\n} from 'react-native'\nimport Constants from 'expo-constants'\nimport { AppConstants } from '../../../assets/AppConstants'\n\nexport const LoginScreenStyle = StyleSheet.create({\n    viewMain : {\n        alignItems:'center',\n        justifyContent:'flex-start',\n        flex:1,\n        fontFamily:'ArialNova'\n    },\n    header : {\n        width: Dimensions.get('window').width,\n        height: (Dimensions.get('window').height * 0.1) + Constants.statusBarHeight,\n        backgroundColor: AppConstants.loginHeaderBlue,\n        paddingTop:Constants.statusBarHeight,\n        flexDirection: 'row',\n        alignItems:'center'\n    },\n    body : {\n        height : Platform.OS === 'ios' ? (Dimensions.get('window').height * 0.8)- Constants.statusBarHeight : (Dimensions.get('screen').height * 0.8)- Constants.statusBarHeight,\n        paddingTop:40\n    },\n    textInputStyle : {\n        width:Dimensions.get('window').width * 0.9,\n        height: 64,\n        borderWidth: 1,\n        borderColor: '#DDDDDD',\n        fontSize: 16,\n        padding:10,\n        borderRadius: 6,\n        marginVertical:10\n    },\n    loginButton : {\n        width:Dimensions.get('window').width * 0.9,\n        height: 54,\n        backgroundColor:AppConstants.loginHeaderBlue,\n        marginVertical:10,\n        borderRadius: 8,\n        padding:10,\n        alignItems:'center',\n        flexDirection:'row',\n        justifyContent:'space-between'\n    },\n    footer : {\n        height: Dimensions.get('window').height * 0.05,\n        width: '100%',\n        flexDirection:'row',\n        justifyContent:'space-between',\n        paddingHorizontal:20,\n        paddingBottom:10,\n    }\n})","import { UiNode, UiNodeInputAttributes } from \"@ory/kratos-client\"\nimport React from \"react\"\nimport { View, TouchableOpacity, Text } from \"react-native\"\nimport { getNodeId, getNodeTitle } from \"../../helpers/form\"\nimport Button from \"../styled-components/StyledButton\"\nimport {Feather} from \"@expo/vector-icons\"\nimport {LoginScreenStyle} from '../../../../screens/LoginScreen/LoginScreenStyleSheet'\ninterface Props extends InputSubmitProps {\n  node: UiNode\n  attributes: UiNodeInputAttributes\n}\n\nexport interface InputSubmitProps {\n  isSubmitting: boolean\n  onSubmitPress: (key: string, value: any) => void\n  onChange: (value: any) => void\n}\n\nexport const NodeInputSubmit = ({\n  node,\n  attributes,\n  isSubmitting,\n  onSubmitPress,\n  onChange,\n}: Props) => {\n  if (attributes.type !== \"submit\") {\n    return null\n  }\n\n  const name = getNodeId(node)\n  const title = getNodeTitle(node)\n  return (\n    <View testID={`field/${name}/${attributes.value}`}>\n      <TouchableOpacity style={LoginScreenStyle.loginButton} activeOpacity={0.8} onPress={()=>onSubmitPress(attributes.name, attributes.value)}>\n          <Text style={{color:'white', fontFamily:'ArialNova'}}>\n              Login to your account\n          </Text>\n          <Feather name=\"arrow-right\" size={24} color=\"white\" />\n      </TouchableOpacity>\n    </View>\n  )\n}\n","import { UiNode } from \"@ory/kratos-client\"\nimport React from \"react\"\nimport {\n  isUiNodeImageAttributes,\n  isUiNodeInputAttributes,\n  isUiNodeTextAttributes,\n} from \"../../helpers/form\"\nimport { NodeImage } from \"./Image\"\nimport { NodeText } from \"./Text\"\nimport { InputProps, NodeInput } from \"./Input\"\nimport { InputSubmitProps, NodeInputSubmit } from \"./InputSubmit\"\n\ninterface Props extends InputSubmitProps, InputProps {\n  node: UiNode\n}\n\nexport const Node = (props: Props) => {\n  const { node } = props\n  if (isUiNodeImageAttributes(node.attributes)) {\n    return <NodeImage node={node} attributes={node.attributes} />\n  } else if (isUiNodeTextAttributes(node.attributes)) {\n    return <NodeText node={node} attributes={node.attributes} />\n  } else if (isUiNodeInputAttributes(node.attributes)) {\n    if (node.attributes.type === \"submit\") {\n      return <NodeInputSubmit {...props} attributes={node.attributes} />\n    }\n    return <NodeInput {...props} attributes={node.attributes} />\n  } else {\n    return <>Unknown Element: {node.type}</>\n  }\n}\n","import React, { useEffect, useState } from \"react\"\nimport {\n  SelfServiceLoginFlow,\n  SelfServiceRegistrationFlow,\n  SelfServiceSettingsFlow,\n  SubmitSelfServiceLoginFlowBody,\n  SubmitSelfServiceRegistrationFlowBody,\n  SubmitSelfServiceSettingsFlowBody,\n  UiNode,\n} from \"@ory/kratos-client\"\nimport Messages from \"./ui/messages\"\nimport { getNodeId, isUiNodeInputAttributes } from \"./helpers/form\"\nimport { Node, TextInputOverride } from \"./ui/Node\"\n\ninterface Props<T> {\n  flow?:\n  | SelfServiceLoginFlow\n  | SelfServiceRegistrationFlow\n  | SelfServiceSettingsFlow\n  onSubmit: (payload: T) => Promise<void>\n  only?: \"password\" | \"profile\" | \"totp\" | \"lookup_secret\"\n  textInputOverride?: TextInputOverride\n}\n\nexport const SelfServiceFlow = <\n  T extends\n  | SubmitSelfServiceSettingsFlowBody\n  | SubmitSelfServiceLoginFlowBody\n  | SubmitSelfServiceRegistrationFlowBody,\n>({\n  flow,\n  only,\n  onSubmit,\n  textInputOverride,\n}: Props<T>) => {\n  const [inProgress, setInProgress] = useState(false)\n  const [values, setValues] = useState<T>({} as T)\n  const [nodes, setNodes] = useState<Array<UiNode>>([])\n\n  useEffect(() => {\n    if (!flow) {\n      return\n    }\n\n    const nodes = flow.ui.nodes.filter(({ group }) => {\n      if (only) {\n        return group === only || group === \"default\"\n      }\n      return true\n    })\n    const values: Partial<T> = {}\n    nodes.forEach((node: UiNode) => {\n      const name = getNodeId(node)\n\n      const key = name as keyof T\n      if (isUiNodeInputAttributes(node.attributes)) {\n        if (\n          node.attributes.type === \"button\" ||\n          node.attributes.type === \"submit\"\n        ) {\n          // In order to mimic real HTML forms, we need to skip setting the value\n          // for buttons as the button value will (in normal HTML forms) only trigger\n          // if the user clicks it.\n          return\n        }\n        values[key] = node.attributes.value\n      }\n    })\n\n    setValues(values as T)\n    setNodes(nodes)\n  }, [flow])\n\n  if (!flow) {\n    return null\n  }\n\n  const onChange = (name: string) => (value: any) => {\n    setValues((values) => ({\n      ...values,\n      [name]: value,\n    }))\n  }\n\n  const getValue = (name: string) => values[name as keyof T]\n  const onPress = (key: string, value: any) => {\n    setInProgress(true)\n    onSubmit({ ...values, [key]: value }).then(()=>setInProgress(false))\n  }\n  return (\n    <>\n      <Messages testID=\"form-messages\" messages={flow.ui.messages} />\n      {nodes.map((node: UiNode, k) => {\n        const name = getNodeId(node)\n        return (\n          <Node\n            key={`form-field-${flow.ui.action || \"\"}-${name}-${k}`}\n            textInputOverride={textInputOverride}\n            disabled={inProgress}\n            value={getValue(name)}\n            onChange={onChange(name)}\n            node={node}\n            isSubmitting={inProgress}\n            onSubmitPress={onPress}\n          />\n        )\n      })}\n    </>\n  )\n}\n","import { \n    StyleSheet,\n    Dimensions,\n    Platform\n} from 'react-native'\nimport Constants from 'expo-constants'\nimport { AppConstants } from '../../../assets/AppConstants'\n\nexport const AuthScreenWrapperStyle = StyleSheet.create({\n    viewMain : {\n        alignItems:'center',\n        justifyContent:'flex-start',\n        flex:1,\n        fontFamily:'ArialNova',\n        width: Dimensions.get('window').width\n    },\n    header : {\n        width: Dimensions.get('window').width,\n        height: (Dimensions.get('window').height * 0.1) + Constants.statusBarHeight,\n        backgroundColor: '#F7F8FC',\n        paddingTop:Constants.statusBarHeight,\n        flexDirection: 'row',\n        alignItems:'center'\n    },\n    body : {\n        height : (Platform.OS === 'ios' ? (Dimensions.get('window').height * 0.8)- Constants.statusBarHeight : (Dimensions.get('window').height * 0.85)- Constants.statusBarHeight),\n        paddingTop:40,\n        // width:'100%'\n    },\n    textInputStyle : {\n        width:Dimensions.get('window').width * 0.9,\n        height: 64,\n        borderWidth: 1,\n        borderColor: '#DDDDDD',\n        fontSize: 16,\n        padding:10,\n        borderRadius: 6,\n        marginVertical:10\n    },\n    loginButton : {\n        width:Dimensions.get('window').width * 0.9,\n        height: 54,\n        backgroundColor:AppConstants.loginHeaderBlue,\n        marginVertical:10,\n        borderRadius: 6,\n        padding:10,\n        alignItems:'center',\n        flexDirection:'row',\n        justifyContent:'space-between'\n    },\n    footer : {\n        // height: Dimensions.get('window').height * 0.1,\n        width: '100%',\n        flexDirection:'row',\n        justifyContent:'space-between',\n        paddingHorizontal:20,\n        paddingTop:0,\n        paddingBottom:10,\n    }\n})","import {\n    TouchableWithoutFeedback,\n    Keyboard\n} from 'react-native'\n\nexport function HideKeyboard({children} : {children : React.ReactNode}) {\n    return(\n        <TouchableWithoutFeedback onPress={Keyboard.dismiss}>\n            {children}\n        </TouchableWithoutFeedback>\n    )\n}","import React from 'react'\nimport { Tooltip, TooltipProps } from '@rneui/themed';\nimport { Text, View, TouchableHighlight, TouchableOpacity, Linking } from 'react-native';\nconst ControlledTooltip: React.FC<TooltipProps> = (props) => {\n    const [open, setOpen] = React.useState(false);\n    return (\n      <Tooltip\n        visible={open}\n        onOpen={() => {\n          setOpen(true);\n        }}\n        onClose={() => {\n          setOpen(false);\n        }}\n        {...props}\n      />\n    );\n  };\n\n\nfunction ToolTipComponent({contactUsRoute} : any) {\n    return (\n        <View style={{width:'100%',height:'100%'}}>\n            <TouchableOpacity onPress={()=>Linking.openURL('https://elphinstone.us/wp-content/uploads/2023/01/Privacy-Policy.pdf')} style={{height:'33.3%', padding: 10, justifyContent:'center', borderBottomColor: '#DFE0EB', borderBottomWidth:1}}>\n                <Text style={{fontFamily:'ArialNova', color:'#8692A6'}}>\n                    Privacy Policy\n                </Text>\n            </TouchableOpacity>\n            <TouchableOpacity onPress={()=>Linking.openURL('https://elphinstone.us/wp-content/uploads/2023/01/Terms-and-Conditions-Platform.pdf')} style={{height:'33.3%', padding: 10, justifyContent:'center', borderBottomColor: '#DFE0EB', borderBottomWidth:1}}>\n                <Text style={{fontFamily:'ArialNova', color:'#8692A6'}}>\n                    Terms & Conditions\n                </Text>\n            </TouchableOpacity>\n            <TouchableOpacity onPress={contactUsRoute} style={{height:'33.4%', padding: 10, justifyContent:'center', borderBottomColor: '#DFE0EB', borderBottomWidth:1}}>\n                <Text style={{fontFamily:'ArialNova', color:'#8692A6'}}>\n                    Contact Us\n                </Text>\n            </TouchableOpacity>\n        </View>\n    )\n}\n\nexport default function LegalToolTip({children, contactUsRoute} : {children : React.ReactNode, contactUsRoute : any}) {\n    return(\n        <ControlledTooltip\n            width={200}\n            height={180}\n            backgroundColor={'#f0f0f0'}\n            popover={<ToolTipComponent contactUsRoute ={contactUsRoute}/>}\n            skipAndroidStatusBar={false}\n            containerStyle={{\n                padding:0,\n                // overflow:'hidden',\n                shadowColor: \"#000\",\n                shadowOffset: {\n                    width: 0,\n                    height: 2,\n                },\n                shadowOpacity: 0.06,\n                shadowRadius: 3.84,\n\n                elevation: 5,\n            }}\n            pointerStyle = {{\n                // padding:0,\n                // overflow:'hidden',\n                shadowColor: \"#000\",\n                shadowOffset: {\n                    width: 0,\n                    height: 2,\n                },\n                shadowOpacity: 0.06,\n                shadowRadius: 3.84,\n\n                elevation: 5,\n            }}\n            // highlightColor={'#ccc'}\n          >\n            <View style={{padding:0}}>\n            {children}\n            </View>\n        </ControlledTooltip>\n    )\n}","\nimport {\n    View,\n    Text,\n    StyleSheet,\n    Image,\n    StatusBar,\n    TextInput,\n    TouchableOpacity,\n    Button,\n    KeyboardAvoidingView\n} from 'react-native';\nimport Constants from 'expo-constants';\nimport { AuthScreenWrapperStyle } from './AuthScreenWrapper/AuthScreenWrapperStyle';\nimport React,{ useEffect, useRef, useState } from 'react';\nimport { HideKeyboard } from '../miscComponents/HideKeyboard';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport LegalToolTip from './AuthScreenWrapper/LegalToolTip';\nimport { Entypo, Feather, Ionicons, MaterialIcons } from '@expo/vector-icons'; \nimport { AppConstants } from '../../assets/AppConstants';\nimport { NavigationProp } from '@react-navigation/native';\n\n\nexport default function AuthScreenWrapper({children, navigation, showBackButton, backButtonFunction, showLogoutButton} : {children : React.ReactNode, navigation : any, showBackButton: boolean, backButtonFunction? : any, showLogoutButton? : any}) {\n    useEffect(() => {\n        console.log(\"Authscreenwrapper\")\n    });\n    \n    return (\n        <HideKeyboard>\n        <View style={AuthScreenWrapperStyle.viewMain}>\n            <StatusBar barStyle = 'dark-content'/>\n            <View style = {{...AuthScreenWrapperStyle.header, flexDirection:'column',justifyContent:'center'}}>\n                {showBackButton && <TouchableOpacity style={{\n                    width:'100%',\n                    paddingHorizontal:20\n                }}>\n                    <Ionicons \n                    name=\"arrow-back-outline\" \n                    size={32} \n                    color=\"#9097AC\" \n                    onPress={backButtonFunction ?  backButtonFunction : ()=>  navigation.goBack() }\n                    />\n                </TouchableOpacity>}\n\n                {showLogoutButton && <TouchableOpacity style={{\n                    width:'100%',\n                    paddingHorizontal:20,\n                    alignItems:'flex-end',\n                    // backgroundColor:'#eee'\n                }}>\n                    <MaterialIcons\n                    name=\"logout\" \n                    size={24} \n                    color=\"#9097AC\" \n                    onPress={backButtonFunction ?  backButtonFunction : ()=>  navigation.goBack() }\n                    />\n                </TouchableOpacity>}\n            </View>\n\n            <KeyboardAvoidingView style={AuthScreenWrapperStyle.body} behavior=\"padding\">\n            {children}\n            </KeyboardAvoidingView>\n            <View style={{...AuthScreenWrapperStyle.footer}}>\n                <Text style={{color:AppConstants.loginHeaderBlue, fontFamily:'ArialNova'}}>\n                {'\\u00A9'} 2023 Elphinstone,  Inc.\n                </Text>\n                <LegalToolTip contactUsRoute = {() => navigation.navigate('ContactUs')}>\n                <Entypo name=\"lock\" size={24} color =\"#A4B3C4\"/>\n                </LegalToolTip>\n            </View>\n        </View>\n        \n        </HideKeyboard>\n    )\n}","import {\n  Modal,\n  View,\n  Text,\n  Dimensions,\n  TouchableOpacity,\n  TextInput,\n  Button,\n  Platform,\n  Linking,\n} from \"react-native\";\n\nimport { AntDesign, Feather } from \"@expo/vector-icons\";\nimport React, {\n  useCallback,\n  useContext,\n  useEffect,\n  useState,\n  useRef,\n} from \"react\";\nimport { AppConstants } from \"../../../assets/AppConstants\";\n\nimport {\n  SelfServiceRecoveryFlow,\n  SelfServiceRegistrationFlow,\n  SubmitSelfServiceRegistrationFlowBody,\n} from \"@ory/kratos-client\";\nimport { useFocusEffect } from \"@react-navigation/native\";\nimport { StackScreenProps } from \"@react-navigation/stack\";\nimport { AuthContext } from \"../../components/authProvider\";\nimport { RootStackParamList } from \"../../components/navigation\";\nimport { SelfServiceFlow } from \"../../components/ory\";\nimport {\n  getNodeId,\n  handleFormSubmitError,\n} from \"../../components/ory/helpers/form\";\nimport { newOrySdk } from \"../../components/ory/sdk\";\nimport { ProjectContext } from \"../../components/projectProvider\";\n\nexport default function ChangePasswordModal({\n  visible,\n  closeModal,\n}: {\n  visible: boolean;\n  closeModal: () => void;\n}) {\n  const emailInputRef = useRef<any>();\n  const passInputRef = useRef<any>();\n  const [email, setEmail] = useState(\"\");\n  const [submitted, setSubmitted] = useState(false);\n  const [flow, setConfig] = useState<SelfServiceRecoveryFlow | undefined>(\n    undefined\n  );\n  const { project } = useContext(ProjectContext);\n  const { setSession, isAuthenticated } = useContext(AuthContext);\n\n  const initializeFlow = () =>\n    newOrySdk(project)\n      .createNativeRecoveryFlow()\n      // The flow was initialized successfully, let's set the form data:\n      .then(({ data: flow }) => {\n        setConfig(flow);\n      })\n      .catch(console.error);\n\n  // When the component is mounted, we initialize a new use login flow:\n  useFocusEffect(\n    useCallback(() => {\n      initializeFlow();\n\n      return () => {\n        setConfig(undefined);\n      };\n    }, [project])\n  );\n\n  if (isAuthenticated) {\n    return null;\n  }\n\n  // This will update the registration flow with the user provided input:\n  const onSubmit = (payload: SubmitSelfServiceRegistrationFlowBody) =>\n    flow\n      ? newKratosSdk(project)\n          .submitSelfServiceRecoveryFlow(flow.id, {\n            csrf_token: \"\",\n            email: email,\n            method: \"link\",\n          })\n          .then(({ data }) => {\n            // ORY Kratos can be configured in such a way that it requires a login after\n            // registration. You could handle that case by navigating to the Login screen\n            // but for simplicity we'll just print an error here:\n\n            // Looks like we got a session!\n            return Promise.resolve({\n              session: data.session,\n              session_token: data.session_token,\n            });\n          })\n          // Let's log the user in!\n          .then(() => setSubmitted(true))\n          .catch((err) => console.log(err))\n      : Promise.resolve();\n\n  return (\n    <Modal visible={visible} transparent={true} animationType=\"fade\">\n      <View\n        style={{\n          backgroundColor: \"rgba(127,127,127,0.4)\",\n          height: Dimensions.get(\"window\").height,\n          width: Dimensions.get(\"window\").width,\n          alignItems: \"center\",\n          justifyContent: \"center\",\n        }}\n      >\n        <View\n          style={{\n            // height:'50%',\n            width: \"95%\",\n            backgroundColor: \"white\",\n            borderRadius: 6,\n          }}\n        >\n          {!submitted ? (\n            <>\n              <View\n                style={{\n                  width: \"100%\",\n                  padding: 20,\n                  alignItems: \"flex-end\",\n                }}\n              >\n                <TouchableOpacity onPress={closeModal}>\n                  <AntDesign name=\"close\" size={20} color=\"#A4B3C4\" />\n                </TouchableOpacity>\n              </View>\n              <View style={{ paddingHorizontal: 20 }}>\n                <Text\n                  style={{\n                    fontFamily: \"Overpass_700Bold\",\n                    fontSize: 30,\n                    paddingVertical: 20,\n                  }}\n                >\n                  Password Recovery\n                </Text>\n                <Text\n                  style={{\n                    fontFamily: \"Overpass_300Light\",\n                    fontSize: 16,\n                    color: \"#8692A6\",\n                  }}\n                >\n                  Enter your registered email address for password recovery\n                </Text>\n                <TextInput\n                  ref={emailInputRef}\n                  style={{\n                    height: 64,\n                    borderWidth: 1,\n                    borderColor: \"#DDDDDD\",\n                    fontSize: 16,\n                    padding: 10,\n                    borderRadius: 6,\n                    marginVertical: 20,\n                  }}\n                  placeholder=\"email address\"\n                  onChangeText={(value) => setEmail(value)}\n                  autoCapitalize=\"none\"\n                  keyboardType=\"email-address\"\n                  textContentType=\"emailAddress\"\n                />\n                {/* <SelfServiceFlow flow={flow} onSubmit={onSubmit}/> */}\n                <TouchableOpacity\n                  style={{\n                    height: 54,\n                    backgroundColor: AppConstants.loginHeaderBlue,\n                    marginVertical: 10,\n                    marginBottom: 30,\n                    borderRadius: 6,\n                    padding: 10,\n                    alignItems: \"center\",\n                    flexDirection: \"row\",\n                    justifyContent: \"space-between\",\n                  }}\n                  activeOpacity={0.8}\n                  onPress={() => onSubmit()}\n                >\n                  <Text style={{ color: \"white\", fontFamily: \"ArialNova\" }}>\n                    Submit\n                  </Text>\n                  <Feather name=\"arrow-right\" size={24} color=\"white\" />\n                </TouchableOpacity>\n              </View>\n            </>\n          ) : (\n            <>\n              <View\n                style={{\n                  width: \"100%\",\n                  padding: 20,\n                  alignItems: \"flex-end\",\n                }}\n              >\n                <TouchableOpacity onPress={closeModal}>\n                  <AntDesign name=\"close\" size={20} color=\"#A4B3C4\" />\n                </TouchableOpacity>\n              </View>\n              <View style={{ paddingHorizontal: 20 }}>\n                <View style={{ paddingVertical: 20, marginBottom: 50 }}>\n                  <Text\n                    style={{\n                      fontFamily: \"Overpass_700Bold\",\n                      fontSize: 30,\n                      paddingBottom: 20,\n                    }}\n                  >\n                    A password reset link has been sent to your email.\n                  </Text>\n                  <Text\n                    style={{\n                      fontFamily: \"Overpass_300Light\",\n                      fontSize: 16,\n                      color: \"#8692A6\",\n                    }}\n                  >\n                    Follow the link in the email to recover your account.\n                  </Text>\n                </View>\n\n                {/* <SelfServiceFlow flow={flow} onSubmit={onSubmit}/> */}\n                {/* <TouchableOpacity style={{\n                            height: 54,\n                            backgroundColor:AppConstants.loginHeaderBlue,\n                            marginVertical:10,\n                            borderRadius: 6,\n                            padding:10,\n                            alignItems:'center',\n                            flexDirection:'row',\n                            justifyContent:'space-between',\n                        }} activeOpacity={0.8} onPress={()=>{}}>\n                            <Text style={{color:'white', fontFamily:'ArialNova'}}>\n                                Submit\n                            </Text>\n                            <Feather name=\"arrow-right\" size={24} color=\"white\" />\n                        </TouchableOpacity> */}\n              </View>\n            </>\n          )}\n        </View>\n      </View>\n    </Modal>\n  );\n}\n","import {\n  SelfServiceLoginFlow,\n  SubmitSelfServiceLoginFlowBody,\n} from \"@ory/kratos-client\";\nimport React, { useContext, useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { View, Text, ActivityIndicator, Linking } from \"react-native\";\nimport { AuthContext } from \"../components/authProvider\";\nimport { newOrySdk } from \"../components/ory/sdk\";\nimport { ProjectContext } from \"../components/projectProvider\";\nimport { StackScreenProps } from \"@react-navigation/stack\";\nimport { RootStackParamList } from \"../components/navigation\";\nimport { useFocusEffect } from \"@react-navigation/native\";\nimport { SelfServiceFlow } from \"../components/ory\";\nimport { handleFormSubmitError } from \"../components/ory/helpers/form\";\nimport { SessionContext } from \"../components/ory/helpers/auth\";\nimport AuthScreenWrapper from \"../ScreenWrappers/AuthScreenWrapper\";\nimport ChangePasswordModal from \"./LoginScreen/ChangePasswordModal\";\nimport { ScrollView } from \"react-native-gesture-handler\";\nimport { LoginFlow, UpdateLoginFlowBody } from \"@ory/client\";\n//TODO add type checking for navigation https://reactnavigation.org/docs/typescript/\ntype Props = StackScreenProps<RootStackParamList, \"Login\">;\n\nexport default function Login({ navigation, route }: Props) {\n  const { project } = useContext(ProjectContext);\n  const { setSession, sessionToken } = useContext(AuthContext);\n  const [flow, setFlow] = useState<LoginFlow | undefined>(undefined);\n  const [passModalOpen, setPassModal] = useState(false);\n  const [userEmail, setUserEmail] = useState();\n  const initializeFlow = () =>\n    newOrySdk(project)\n      .createNativeLoginFlow({\n        aal: route.params?.aal,\n        refresh: route.params?.refresh,\n        xSessionToken: sessionToken,\n        returnTo: \"http://localhost:4457/Callback\",\n        returnSessionTokenExchangeCode: true,\n      })\n      .then(({ data: f }) => setFlow(f))\n      .catch(console.error);\n\n  const refetchFlow = () =>\n    newOrySdk(project)\n      .getLoginFlow({ id: flow!.id })\n      .then(({ data: f }) => setFlow({ ...flow, ...f })) // merging ensures we don't lose the code\n      .catch(console.error);\n\n  // When the component is mounted, we initialize a new use login flow:\n  useFocusEffect(\n    React.useCallback(() => {\n      initializeFlow();\n\n      return () => {\n        setFlow(undefined);\n      };\n    }, [project])\n  );\n\n  const setSessionAndRedirect = (session: SessionContext) => {\n    console.log(\"Set session after login\", session);\n    setSession(session);\n  };\n\n  // This will update the login flow with the user provided input:\n  const onSubmit = (payload: UpdateLoginFlowBody) => {\n    setUserEmail(payload.identifier);\n    return flow\n      ? newOrySdk(project)\n          .updateLoginFlow({\n            flow: flow.id,\n            updateLoginFlowBody: payload,\n            xSessionToken: sessionToken,\n          })\n          .then(({ data }) => Promise.resolve(data as SessionContext))\n          // Looks like everything worked and we have a session!\n          .then(setSessionAndRedirect)\n          .catch(\n            handleFormSubmitError(\n              flow,\n              setFlow,\n              initializeFlow,\n              setSessionAndRedirect,\n              refetchFlow\n            )\n          )\n      : Promise.resolve();\n  };\n  useEffect(() => {\n    console.log(\"LOgin\")\n    flow?.ui?.messages &&\n      flow.ui.messages[0].text ===\n        \"Account not active yet. Did you forget to verify your email address?\" &&\n      navigation.navigate(\"Verification\", { email: userEmail });\n  });\n  if (flow === undefined) {\n    return;\n  }\n  return (\n    <AuthScreenWrapper navigation={navigation} showBackButton={false}>\n      <ScrollView showsVerticalScrollIndicator={false} bounces={false}>\n        \n        <ChangePasswordModal\n          visible={passModalOpen}\n          closeModal={() => setPassModal(false)}\n        />\n\n        <Text\n          style={{\n            fontFamily: \"Overpass_700Bold\",\n            fontSize: 30,\n            marginTop: 40,\n          }}\n        >\n          Login\n        </Text>\n\n        <Text\n          style={{\n            fontFamily: \"Overpass_300Light\",\n            fontSize: 16,\n            color: \"#8692A6\",\n            marginBottom: 40,\n          }}\n        >\n          access your Elphinstone account\n        </Text>\n\n        <SelfServiceFlow flow={flow} onSubmit={onSubmit} />\n\n        <Text\n          style={{ color: \"#8692A6\", fontFamily: \"ArialNova\" }}\n          // onPress={() => setPassModal(true)}\n          onPress={() => Linking.openURL('https://users.elphinstone.us/recovery')}\n        >\n          Forgot your password?{\" \"}\n        </Text>\n\n        <View style={{ flexDirection: \"row\", marginTop: 24 }}>\n          <Text style={{ color: \"#8692A6\", fontFamily: \"ArialNova\" }}>\n            Don't have an account yet?{\" \"}\n          </Text>\n\n          <Text\n            style={{ color: \"#004DBC\", fontFamily: \"ArialNova\" }}\n            onPress={() => navigation.navigate(\"Registration\")}\n          >\n            Sign up\n          </Text>\n        </View>\n\n      </ScrollView>\n    </AuthScreenWrapper>\n  );\n}\n","import { \n    StyleSheet,\n    Dimensions,\n    Platform\n} from 'react-native'\nimport Constants from 'expo-constants'\nimport { AppConstants } from '../assets/AppConstants'\n\nexport const GlobalStyles = StyleSheet.create({\n    viewMain : {\n        alignItems:'center',\n        justifyContent:'flex-start',\n        flex:1,\n        fontFamily:'ArialNova'\n    },\n    header : {\n        width: Dimensions.get('window').width,\n        height: (Dimensions.get('window').height * 0.1) + Constants.statusBarHeight,\n        backgroundColor: AppConstants.loginHeaderBlue,\n        paddingTop:Constants.statusBarHeight,\n        flexDirection: 'row',\n        alignItems:'center'\n    },\n    body : {\n        height : Platform.OS === 'ios' ? (Dimensions.get('window').height * 0.8)- Constants.statusBarHeight : (Dimensions.get('screen').height * 0.8)- Constants.statusBarHeight,\n        paddingTop:40\n    },\n    textInputStyle : {\n        width:Dimensions.get('window').width * 0.9,\n        height: 64,\n        borderWidth: 1,\n        borderColor: '#DDDDDD',\n        fontSize: 16,\n        padding:10,\n        borderRadius: 6,\n    },\n    loginButton : {\n        width:Dimensions.get('window').width * 0.9,\n        height: 54,\n        backgroundColor:AppConstants.loginHeaderBlue,\n        marginVertical:10,\n        borderRadius: 6,\n        padding:10,\n        alignItems:'center',\n        flexDirection:'row',\n        justifyContent:'space-between'\n    },\n    footer : {\n        height: Dimensions.get('window').height * 0.05,\n        width: '100%',\n        flexDirection:'row',\n        justifyContent:'space-between',\n        paddingHorizontal:20,\n        paddingBottom:10,\n    }\n})","import {\n    View,\n    TextInput\n} from 'react-native'\nimport { GlobalStyles } from '../../../../GlobalStyles'\nimport {AntDesign} from '@expo/vector-icons'\nexport default function CustomTextInput({\n    reference,\n    touched,\n    errors,\n    handleChange,\n    handleBlur,\n    value,\n    keyboardType,\n    placeholder,\n    editable,\n    selectTextOnFocus,\n    textContentType,\n    secureTextEntry,\n    onFocus,\n    onLayout,\n    disabled,\n    additionalStyle\n} : {\n    reference : any,\n    touched : any,\n    errors : any,\n    value : any\n    handleChange : any,\n    handleBlur : any,\n    keyboardType? : any,\n    placeholder? : any,\n    editable? : boolean,\n    selectTextOnFocus? : any,\n    textContentType? : any,\n    secureTextEntry? : any,\n    onFocus? : any,\n    onLayout? : any,\n    disabled? : any,\n    additionalStyle? : any\n\n}) {\n    return (\n    <View style={{\n        // backgroundColor:'#eee',\n        width: '100%', \n        flexDirection:'row',\n        marginTop:20, \n        borderWidth:1,\n        borderColor: touched ? (errors ? 'red' : '#19C18F' ) : '#DDDDDD',\n        borderRadius: 6,\n    }}>\n    <TextInput \n    ref={reference}\n    style={{...GlobalStyles.textInputStyle, width:'80%', borderWidth:0}}\n    placeholder={placeholder}\n    onChangeText={handleChange}\n    onBlur={handleBlur}\n    value={value}\n    autoCapitalize=\"none\"\n    keyboardType={keyboardType}\n    editable={editable} \n    selectTextOnFocus={selectTextOnFocus}\n    textContentType={textContentType}\n    secureTextEntry={secureTextEntry}\n    onFocus={onFocus}\n    />\n    <View style={{\n        height: 64,\n        width:'20%',\n        alignItems:'center',\n        justifyContent : 'center'\n    }}>\n        {(touched) ? \n        (errors ? \n            <AntDesign name='close' size={24} color={'red'}/> :\n            <AntDesign name='check' size={24} color={'#19C18F'}/> \n        ) :\n       <></>\n    }\n    </View>\n    </View>\n    )\n}","import { \n    View,\n    Animated,\n    Text\n} from 'react-native'\nimport React,{useState, useEffect, useRef} from 'react'\nimport {AntDesign, FontAwesome} from '@expo/vector-icons'\nexport default function PasswordValidationView({password, showView} : {password : string, showView : boolean}){\n    const slideAnimator = useRef(new Animated.Value(0)).current\n    const showViewAnimator = useRef(new Animated.Value(0)).current\n    const [passCheck,setPassCheck] = useState<boolean[]>([false,false,false,false,false])\n    const sliderFunction = (to : number) => {\n        Animated.timing(slideAnimator,{\n            toValue: to,\n            duration: 500,\n            useNativeDriver : false\n          }).start()\n    }\n    const initAnimation = () => {\n        Animated.timing(showViewAnimator,{\n            toValue: 1000,\n            duration: 500,\n            useNativeDriver : false\n          }).start()\n    }\n    const parsePassword = (password : string) => {\n        let conditionArray = [false,false,false,false,false]\n        let conditionMatch = 0\n        if (password.length > 7){\n            conditionArray[0] = true\n            conditionMatch = conditionMatch + 1\n        }\n        if (/[A-Z]/.test(password)){\n            conditionArray[1] = true\n            conditionMatch = conditionMatch + 1\n        }\n        if (/[a-z]/.test(password)){\n            conditionArray[2] = true\n            conditionMatch = conditionMatch + 1\n        }\n        if (/[0-9]/.test(password)){\n            conditionArray[3] = true\n            conditionMatch = conditionMatch + 1\n        }\n        if (/[-!$%^&*@.]/.test(password)){\n            conditionArray[4] = true\n            conditionMatch = conditionMatch + 1\n        }\n        return {\n            num : conditionMatch,\n            arr : conditionArray\n        }\n\n    }\n    const sliderWidth = slideAnimator.interpolate({\n        inputRange: [0 , 1],\n        outputRange: ['0%','100%']\n    })\n    const bgColor = slideAnimator.interpolate({\n        inputRange:[0.8,1],\n        outputRange:['#FC5C5C','#71DE56']\n    })\n    useEffect(()=>{\n        setPassCheck(parsePassword(password).arr)\n        sliderFunction(parsePassword(password).num/5)\n    },[password])\n    useEffect(()=>{\n        if(showView){\n            initAnimation()\n        }\n    },[showView])\n    return(<Animated.View style={{paddingTop:10, overflow:'hidden',maxHeight:showViewAnimator}}>\n        <View\n        style={{width : '100%',height:4, backgroundColor:'#ddd', borderRadius:2, alignItems:'flex-start'}}\n        >\n        <Animated.View\n            style={{\n                width : sliderWidth,\n                height:4, \n                backgroundColor:bgColor, \n                borderRadius:2,\n            }}\n        >\n\n        </Animated.View>\n        </View>\n        <View style = {{flexDirection:'row', alignItems:'center'}}>\n            {passCheck[0] ?\n            <AntDesign name='check' color='#71DE56' size={20}/>:\n            <FontAwesome name='circle' color='#ccc' size={12}/>\n            }\n            <Text style={{padding:10, fontFamily:'ArialNova', color:'#8692A6'}}>\n            At least 8 characters\n            </Text>\n        </View>\n        <View style = {{flexDirection:'row', alignItems:'center'}}>\n            {(passCheck[1] && passCheck[2]) ?\n            <AntDesign name='check' color='#71DE56' size={20}/>:\n            <FontAwesome name='circle' color='#ccc' size={12}/>\n            }\n            <Text style={{padding:10, fontFamily:'ArialNova', color:'#8692A6'}}>\n            Includes an uppercase and a lowercase character\n            </Text>\n        </View>\n        <View style = {{flexDirection:'row', alignItems:'center'}}>\n            {passCheck[3] ?\n            <AntDesign name='check' color='#71DE56' size={20}/>:\n            <FontAwesome name='circle' color='#ccc' size={12}/>\n            }\n            <Text style={{padding:10, fontFamily:'ArialNova', color:'#8692A6'}}>\n            Includes a number\n            </Text>\n        </View>\n        <View style = {{flexDirection:'row', alignItems:'center'}}>\n            {passCheck[4] ?\n            <AntDesign name='check' color='#71DE56' size={20}/>:\n            <FontAwesome name='circle' color='#ccc' size={12}/>\n            }\n            <Text style={{padding:10, fontFamily:'ArialNova', color:'#8692A6'}}>\n            Includes a symbol (!@#$%^&*)\n            </Text>\n        </View>\n\n    </Animated.View>)\n}","import React from \"react\";\nimport {\n    View,\n    Text,\n    StyleSheet,\n    Modal,\n    Dimensions,\n    Button,\n    TouchableOpacity\n} from 'react-native'\nimport { BlurView } from 'expo-blur';\nimport LottieView from 'lottie-react-native';\nimport {AntDesign} from '@expo/vector-icons'\nexport default function ResponseModal({\n    isSuccess,\n    message,\n    subMessage,\n    show,\n    closeModal,\n    onClose\n} : any) {\n    return(\n        <Modal visible={show} transparent={true} animationType='fade' onDismiss={onClose}>\n            <BlurView intensity={20} style={{height:Dimensions.get('window').height, width : Dimensions.get('window').width,backgroundColor:'rgba(127,127,127,0.3)', alignItems:'center',justifyContent:'center'}}>\n                <View style={{height:310, width:'95%',backgroundColor:'#fff', borderRadius:6, flexDirection:'row', overflow:'hidden'}}>\n                    <View style={{height:'100%', width:5, backgroundColor: isSuccess ? '#19C18F' : '#FC5C5C'}}/>\n                    <View style={{flex:1, paddingHorizontal:20, justifyContent:'space-evenly'}}>\n                        \n                        <TouchableOpacity style={{width:'95%', alignItems:'flex-end'}} onPress={closeModal}>\n                            <AntDesign name=\"close\" color={\"#666\"} size={16}/>\n                        </TouchableOpacity>\n                        <LottieView\n                        autoPlay\n                        // ref={animation}\n                        style={{\n                        width: 100,\n                        height: 100,\n                        backgroundColor: '#fff',\n                        }}\n                        // Find more Lottie files at https://lottiefiles.com/featured\n                        source={isSuccess ? require('../../assets/success_anim.json') : require('../../assets/failed_anim.json')}\n                        loop={false}\n                    />\n\n                        <Text style={{fontFamily:'ArialNova-Light', fontSize:16}}>\n                        {message}\n                        </Text>\n\n                        <Text style={{fontFamily:'ArialNova-Light', fontSize:12}}>{subMessage}\n                        </Text>\n                    </View>\n\n                {/* <Button title=\"close\" onPress={closeModal}/> */}\n\n                </View>\n            </BlurView>\n        </Modal>\n    )\n}","import { SelfServiceRegistrationFlow, SubmitSelfServiceRegistrationFlowBody } from \"@ory/kratos-client\";\nimport { useFocusEffect } from \"@react-navigation/native\";\nimport { StackScreenProps } from \"@react-navigation/stack\";\nimport React, { useCallback, useContext, useEffect, useRef, useState } from \"react\";\nimport { Button, Platform, View, Text, Image, ScrollView, TextInput, TouchableOpacity, Modal } from \"react-native\";\nimport { AppConstants } from \"../../assets/AppConstants\";\nimport { AuthContext } from \"../components/authProvider\";\nimport { RootStackParamList } from \"../components/navigation\";\nimport { SelfServiceFlow } from \"../components/ory\";\nimport { getNodeId, handleFormSubmitError } from \"../components/ory/helpers/form\";\nimport { newOrySdk } from \"../components/ory/sdk\";\nimport { ProjectContext } from \"../components/projectProvider\";\nimport AuthScreenWrapper from \"../ScreenWrappers/AuthScreenWrapper\";\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport CustomTextInput from \"./SignupScreen/SignupComponents/SignupMiscComponents/CustomTextInput\";\nimport PasswordValidationView from \"./RegisterScreen/PasswordValidationView\";\nimport { GlobalStyles } from \"../GlobalStyles\";\nimport { AntDesign, Feather } from '@expo/vector-icons'\nimport ResponseModal from \"../components/ResponseModal\";\nimport { UpdateRegistrationFlowBody } from \"@ory/client\";\nimport { SessionContext } from \"../components/ory/helpers/auth\";\nconst SignupSchema = Yup.object().shape({\n    email: Yup.string().email('Invalid email').required('Required'),\n    password: Yup.string().matches(/[A-Z]/).matches(/[a-z]/).matches(/[0-9]/).matches(/[-!$%^&*@.]/).required().min(8),\n    phone: Yup.string().matches(/^[0-9]+$/).required(),\n});\n\ntype Props = StackScreenProps<RootStackParamList, \"Registration\">\n\nexport default function Registration({ navigation }: Props) {\n    const emailInputRef = useRef()\n    const passInputRef = useRef()\n    const phoneInputRef = useRef()\n    const [passView, setShowPassView] = useState(false)\n    const [formError, setFormError] = useState<string | null>(null)\n    const [flow, setConfig] = useState<SelfServiceRegistrationFlow | undefined>(\n        undefined,\n    )\n    const { project } = useContext(ProjectContext)\n    const { setSession, isAuthenticated } = useContext(AuthContext)\n\n    const [showResponseModal, setResponseModal] = useState(false)\n    const [uninvestedCashBalance, setCashBalance] = useState(47749)\n    const [responseModalConfig, setResponseModalConfig] = useState({\n        isSuccess : null,\n        message : \"\",\n        subMessage : \"\"\n    })\n\n    function launchResponseModal({message, subMessage, isSuccess} : any) {\n        setResponseModalConfig({\n            message,\n            subMessage,\n            isSuccess\n        })\n        setResponseModal(true)\n    }\n\n    const initializeFlow = () =>\n        newOrySdk(project)\n            .createNativeRegistrationFlow({\n                returnTo: \"http://localhost:4457/Callback\",\n                returnSessionTokenExchangeCode: true,\n              })\n            // The flow was initialized successfully, let's set the form data:rr\n            .then(({ data: flow }) => {\n                setConfig(flow)\n            })\n            .catch(console.error)\n\n    // When the component is mounted, we initialize a new use login flow:\n    useFocusEffect(\n        useCallback(() => {\n            initializeFlow()\n\n            return () => {\n                setConfig(undefined)\n            }\n        }, [project]),\n    )\n\n    // useEffect(() => {\n    //     if (isAuthenticated) {\n    //         navigation.navigate(\"Home\")\n    //     }\n    // }, [isAuthenticated])\n\n    if (isAuthenticated) {\n        return null\n    }\n\n    // This will update the registration flow with the user provided input:\n    let onSubmit2 = (\n        payload: {\n            email : string,\n            password : string,\n            phone : string\n        },\n    ): Promise<void> =>\n        flow\n            ? newKratosSdk(project)\n                .submitSelfServiceRegistrationFlow(flow.id, {\n                    \"csrf_token\": \"\",\n                    \"method\": \"password\",\n                    \"password\": payload.password,\n                    \"traits.email\": payload.email.toLowerCase(),\n                    \"traits.phone\": \"+\" + payload.phone,\n                } as any)\n                .then(({ data }) => {\n                    // ORY Kratos can be configured in such a way that it requires a login after\n                    // registration. You could handle that case by navigating to the Login screen\n                    // but for simplicity we'll just print an error here:\n\n                    if (!data.session_token || !data.session) {\n                        const err = new Error(\n                            \"It looks like you configured ORY Kratos to not issue a session automatically after registration. This edge-case is currently not supported in this example app. You can find more information on enabling this feature here: https://www.ory.sh/kratos/docs/next/self-service/flows/user-registration#successful-registration\",\n                        )\n                        return Promise.reject(err)\n                    }\n\n                    // Looks like we got a session!\n                    return Promise.resolve({\n                        session: data.session,\n                        session_token: data.session_token,\n                    })\n                })\n                // Let's log the user in!\n                .then(()=>launchResponseModal({message: \"Your account has been successfully created.\", subMessage: ' A verification email has been sent to your email address. Please check your inbox and follow the instructions in the email to complete the verification process.',isSuccess:true}))\n                .catch((err) => {\n\n                    if (err.response.data.ui.messages){\n                        launchResponseModal({...AppConstants.GenericErrorResponse, message : err.response.data.ui.messages[0].text})\n                    }else if(err.response.data.ui.nodes[1].messages.length){\n                        launchResponseModal({...AppConstants.GenericErrorResponse, message : 'Phone number is either invalid or already used'})\n                    }else if(err.response.data.ui.nodes[2].messages.length){\n                        launchResponseModal({...AppConstants.GenericErrorResponse, message : err.response.data.ui.nodes[2].messages[0].text})\n                    }\n                    else{\n                        launchResponseModal(AppConstants.GenericErrorResponse)\n                    }\n                    \n                })\n                // .catch(handleFormSubmitError(setConfig, initializeFlow,undefined, () => launchResponseModal({...AppConstants.GenericErrorResponse, message : formError})))\n            : Promise.resolve()\n\n\n    const refetchFlow = () =>\n    newOrySdk(project)\n        .getRegistrationFlow({ id: flow!.id })\n        .then(({ data: f }) => setConfig({ ...flow, ...f })) // merging ensures we don't lose the code\n        .catch(console.error)\n\n    const setSessionAndRedirect = (session: SessionContext) => {\n        setSession(session)\n        setTimeout(() => {\n            navigation.navigate(\"Home\")\n        }, 100)\n        }\n\n    const onSubmit = async (\n        payload: UpdateRegistrationFlowBody,\n        ): Promise<void> => {\n        if (!flow) {\n            return\n        }\n    \n        newOrySdk(project)\n            .updateRegistrationFlow({\n            flow: flow.id,\n            updateRegistrationFlowBody: {\n                \"csrf_token\": \"\",\n                \"method\": \"password\",\n                \"password\": payload.password,\n                \"traits.email\": payload.email.toLowerCase(),\n                \"traits.phone\": \"+\" + payload.phone,\n            },\n            \n            })\n            .then(({ data }) => {\n            // ORY Kratos can be configured in such a way that it requires a login after\n            // registration. You could handle that case by navigating to the Login screen\n            // but for simplicity we'll just print an error here:\n            if (!data.session_token || !data.session) {\n                const err = new Error(\n                \"It looks like you configured ORY Kratos to not issue a session automatically after registration. This edge-case is currently not supported in this example app. You can find more information on enabling this feature here: https://www.ory.sh/kratos/docs/next/self-service/flows/user-registration#successful-registration\",\n                )\n                return Promise.reject(err)\n            }\n    \n            const s: SessionContext = {\n                session: data.session,\n                session_token: data.session_token,\n            }\n    \n            let verificationFlow = false\n            if (data.continue_with) {\n                for (const c of data.continue_with) {\n                switch (c.action) {\n                    case \"show_verification_ui\": {\n                    console.log(\"got a verfification flow, navigating to it\", c)\n                    verificationFlow = true\n                    navigation.navigate(\"Verification\", {\n                        flowId: c.flow.id,\n                    })\n                    break\n                    }\n                    case \"set_ory_session_token\": {\n                    // Right now, this is redundant, and is just supposed to show that the session token is also included\n                    // in the continue_with elements.\n                    console.log(\n                        \"found an ory session token, storing it for further use\",\n                    )\n                    s.session_token = c.ory_session_token\n                    break\n                    }\n                }\n                }\n            }\n    \n            // Let's log the user in!\n            // setSession(s)\n            // if (!verificationFlow) {\n            //     navigation.navigate(\"Home\")\n            // }\n            })\n            .catch(\n                (err) => {\n                    console.log(err.response.data.ui.messages)\n                    if (err.response.data.ui.messages){\n                        launchResponseModal({...AppConstants.GenericErrorResponse, message : err.response.data.ui.messages[0].text})\n                    }else if(err.response.data.ui.nodes[1].messages.length){\n                        launchResponseModal({...AppConstants.GenericErrorResponse, message : 'Phone number is either invalid or already used'})\n                    }else if(err.response.data.ui.nodes[2].messages.length){\n                        launchResponseModal({...AppConstants.GenericErrorResponse, message : err.response.data.ui.nodes[2].messages[0].text})\n                    }\n                    else{\n                        launchResponseModal(AppConstants.GenericErrorResponse)\n                    }\n                    \n                }\n            )\n        }\n\n\n\n    useEffect(()=>{\n        flow?.ui?.messages && setFormError(flow?.ui?.messages[0].text)\n    },[flow])\n    return (\n        <AuthScreenWrapper navigation={navigation} showBackButton={false}>\n            <ResponseModal show={showResponseModal} closeModal={()=>{setResponseModal(false); navigation.goBack()}} {...responseModalConfig} />\n            <ScrollView style={{ paddingHorizontal: '5%' }} onStartShouldSetResponder={() => true} bounces={false} showsVerticalScrollIndicator={false}>\n                <View onStartShouldSetResponder={() => true}>\n                    <Image source={require('../../assets/images/tree.png')} style={{ height: 36, width: 36 }} />\n                    <Text style={{\n                        width: '100%',\n                        fontFamily: 'PlayfairDisplay_700Bold',\n                        fontSize: 32,\n                        color: AppConstants.loginHeaderBlue,\n                        marginTop: 20\n\n                    }}\n                    >\n                        SmartInvest {'\\n'}Onboarding\n                    </Text>\n                    <Formik\n                        initialValues={{ email: '', password: \"\", phone: '' }}\n                        validationSchema={SignupSchema}\n                        onSubmit={values => {\n                            onSubmit(values).then(() => {}).catch((e) => {\n                                //display error here ...\n                                console.log(`Error whiile creating user : ${e}`)\n                                \n                            })\n                        }}\n                    >\n                        {({ handleChange, handleBlur, handleSubmit, values, errors, touched }) => (\n                            <>\n                                <Text\n                                    style={{\n                                        fontFamily: 'ArialNova',\n                                        fontSize: 18,\n                                        lineHeight: 32,\n                                        paddingTop: 20\n                                    }}\n                                >\n                                    Can we have your email address?\n                                </Text>\n                                <CustomTextInput\n                                    reference={emailInputRef}\n                                    touched={touched.email}\n                                    errors={errors.email}\n                                    value={values.email}\n                                    onFocus={() => { }}\n                                    handleChange={handleChange('email')}\n                                    handleBlur={handleBlur('email')}\n                                    keyboardType=\"email-address\"\n                                    placeholder={\"email address\"}\n                                    editable={true}\n                                    textContentType={\"email\"}\n                                />\n\n                                <Text\n                                    style={{\n                                        fontFamily: 'ArialNova',\n                                        fontSize: 18,\n                                        lineHeight: 32,\n                                        paddingTop: 20\n                                    }}\n                                >\n                                    Set your account password\n                                </Text>\n\n                                <CustomTextInput\n                                    reference={passInputRef}\n                                    touched={touched.password}\n                                    errors={errors.password}\n                                    value={values.password}\n                                    handleChange={handleChange('password')}\n                                    handleBlur={handleBlur('password')}\n                                    keyboardType=\"default\"\n                                    placeholder={\"password\"}\n                                    editable={true}\n                                    textContentType={\"password\"}\n                                    secureTextEntry={true}\n                                    onFocus={() => setShowPassView(true)}\n                                />\n\n                                <PasswordValidationView\n                                    showView={passView}\n                                    password={values.password}\n                                />\n\n                                <Text\n                                    style={{\n                                        fontFamily: 'ArialNova',\n                                        fontSize: 18,\n                                        lineHeight: 32,\n                                        paddingTop: 20\n                                    }}\n                                >\n                                    What is your mobile number?\n                                </Text>\n\n\n                                <View style={{\n                                    width: '100%',\n                                    flexDirection: 'row',\n                                    marginTop: 20,\n                                    borderWidth: 1,\n                                    borderColor: touched.phone ? (errors.phone ? 'red' : '#19C18F') : '#DDDDDD',\n                                    borderRadius: 6,\n                                }}>\n                                    <View style={{\n                                        height: 64,\n                                        width: '15%',\n                                        alignItems: 'center',\n                                        justifyContent: 'space-around',\n                                        flexDirection: 'row',\n                                    }}>\n                                        <Text style={{ fontFamily: 'ArialNova', fontSize: 20 }}>\n                                            {'+'}\n                                        </Text>\n                                    </View>\n                                    <TextInput\n                                        ref={phoneInputRef}\n                                        style={{ ...GlobalStyles.textInputStyle, width: '65%', borderWidth: 0, paddingHorizontal: 0 }}\n                                        placeholder=\"\"\n                                        onChangeText={handleChange('phone')}\n                                        onBlur={handleBlur('phone')}\n                                        value={values.phone}\n                                        autoCapitalize=\"none\"\n                                        keyboardType='phone-pad'\n                                    />\n                                    <View style={{\n                                        height: 64,\n                                        width: '20%',\n                                        alignItems: 'center',\n                                        justifyContent: 'center'\n                                    }}>\n                                        {(touched.phone) ?\n                                            (errors.phone ?\n                                                <AntDesign name='close' size={24} color={'red'} /> :\n                                                <AntDesign name='check' size={24} color={'#19C18F'} />\n                                            ) :\n                                            <></>\n                                        }\n                                    </View>\n                                </View>\n\n                                <View\n                                    style={{\n                                        alignItems: 'flex-end',\n                                        justifyContent: 'space-between',\n                                        width: '100%',\n                                        marginTop: 20,\n                                        flex: 1,\n                                        flexDirection: 'row',\n                                        paddingBottom: 20,\n                                    }}>\n                                    <TouchableOpacity style={{\n                                        width: '17.5%',\n                                        marginTop: 10,\n                                        height: 54,\n                                        marginVertical: 10,\n                                        borderRadius: 6,\n                                        padding: 10,\n                                        alignItems: 'center',\n                                        flexDirection: 'row',\n                                        justifyContent: 'center',\n                                        borderWidth: 1,\n                                        borderColor: '#DDD'\n                                    }}\n                                        onPress={() => navigation.navigate(\"Login\", { refresh: true })}\n                                    >\n                                        <Feather name=\"arrow-left\" size={24} color=\"#8692A6\" />\n                                    </TouchableOpacity>\n                                    <TouchableOpacity style={{\n                                        width: '80%',\n                                        marginTop: 10,\n                                        height: 54,\n                                        backgroundColor: AppConstants.loginHeaderBlue,\n                                        marginVertical: 10,\n                                        borderRadius: 6,\n                                        padding: 10,\n                                        alignItems: 'center',\n                                        flexDirection: 'row',\n                                        justifyContent: 'space-between',\n                                        elevation: 5,\n                                        shadowColor: \"#000\",\n                                        shadowOffset: {\n                                            width: 0,\n                                            height: 2,\n                                        },\n                                        shadowOpacity: 0.25,\n                                        shadowRadius: 3.84,\n                                    }}\n                                        activeOpacity={0.8}\n\n                                        onPress={() => handleSubmit()}\n                                        disabled={false}\n                                    >\n                                        <Text style={{ color: 'white', fontFamily: 'ArialNova', fontSize: 18 }}>\n                                            Next\n                                        </Text>\n                                        <Feather name=\"arrow-right\" size={24} color=\"white\" />\n                                    </TouchableOpacity>\n                                </View>\n\n\n                            </>\n                        )}\n                    </Formik>\n\n\n                </View>\n            </ScrollView>\n        </AuthScreenWrapper>\n    )\n}","import {\n    View,\n    TouchableOpacity,\n    Text\n} from 'react-native'\nexport function ButtonMain({height, width, onPress} : {height? : number, width? : number, onPress? : ()=>void}) {\n    return(\n        <TouchableOpacity style={{\n            backgroundColor: '#004DBC',\n            height : height ? height : 64,\n            width : width ? width : 340,\n            elevation:5,\n            borderRadius:8,\n            alignItems:'center',\n            justifyContent:'center',\n            shadowColor: \"#000\",\n            shadowOffset: {\n                width: 0,\n                height: 2,\n            },\n            shadowOpacity: 0.25,\n            shadowRadius: 3.84,\n        }} onPress={onPress}>\n            <Text style={{\n                color:'white',\n                fontFamily:'ArialNova',\n                fontWeight:'400',\n                fontSize:16\n            }}>\n                Next\n            </Text>\n        </TouchableOpacity>\n    )\n}","import React, {useRef, useState, useEffect} from 'react'\nimport {\n    View,\n    Text,\n    StyleSheet,\n    Image,\n    StatusBar,\n    useColorScheme,\n    Dimensions,\n    TouchableOpacity,\n    Animated,\n    Easing\n} from 'react-native'\nimport { ButtonMain } from '../components/ButtonMain';\nimport { StackScreenProps } from \"@react-navigation/stack\"\nimport { RootStackParamList } from \"../components/navigation\"\ntype Props = StackScreenProps<RootStackParamList, \"Intro\">\n\nexport default function IntroCarousel({ navigation, route }: Props){\n    const isDarkMode = useColorScheme() === 'dark';\n    const width = Dimensions.get('window').width;\n    const [carouselIndex, setCarouselIndex] = useState(0)\n    const location = useRef(new Animated.Value(0)).current\n    function goToNextScreen(locationState : number) {\n        Animated.timing(location,{\n            toValue: locationState,\n            duration: 500,\n            useNativeDriver : true,\n          }).start()\n    }\n    useEffect(()=>{\n        goToNextScreen(carouselIndex)\n    },[carouselIndex])\n\n\n    return(\n        <View style={{flex:1, backgroundColor:'white',overflow:'hidden'}}>\n            <StatusBar\n        barStyle={isDarkMode ? 'light-content' : 'dark-content'}\n        backgroundColor={'white'}\n      />\n        <Animated.View style={{flexDirection:'row', height:'55%'  ,transform:[{\n                translateX : Animated.multiply(Dimensions.get('window').width,location) \n            }],}}>\n        <View style={styles.Carousel}>\n            <Image source={require('../../assets/images/money.png')} style={{height:280, width:280}}/>\n\n        </View>\n\n        <View style={styles.Carousel}>\n            <Image source={require('../../assets/images/notification.png')} style={{height:280, width:280}}/>\n\n        </View>\n\n        <View style={styles.Carousel}>\n            <Image source={require('../../assets/images/thumbs-up.png')} style={{height:280, width:280}}/>\n\n        </View>\n        </Animated.View>\n        <View style={{\n            // backgroundColor:'#ddd',\n            flex:1,\n            alignItems:'center',\n            marginTop:20\n        }}>\n            <Text style={{\n                fontFamily:'Overpass_700Bold',\n                // fontWeight:'700',\n                fontSize:30,\n                textAlign:'center',\n                color:'black',\n            }}>{carouselIndex === 0 ? 'Stay on top of your investments with us' :\n            (carouselIndex === -1 ? \"You deserve the best investment advice\" :\n            \"We’ll keep an eye on the portfolio for you\"\n            )\n            \n            }\n            </Text>\n\n            <Text style={{\n                marginTop:10,\n                fontFamily:'Overpass_300Light',\n                // fontWeight:'300',\n                color:'#8692A6',\n                textAlign:'center',\n                width:'70%'\n            \n            }}>\n            We are your new financial Advisors to recommed the best investments for you\n            </Text>\n            <View style={{marginTop:40, flexDirection:'row', alignItems:'center'}}>\n                <View style={carouselIndex === 0 ? styles.pipOnIndex : styles.pipOffIndex}/>\n\n                <View style={carouselIndex === -1 ? styles.pipOnIndex : styles.pipOffIndex}/>\n\n                <View style={carouselIndex === -2 ? styles.pipOnIndex : styles.pipOffIndex}/>\n\n            </View>\n            <View style={{marginTop:20}}>\n            <ButtonMain onPress={() => carouselIndex != -2 ? setCarouselIndex(carouselIndex === -2 ? 0 : carouselIndex-1) : navigation.replace('Login',{refresh: true})} />\n            </View>\n\n        </View>\n        </View>\n    )\n}\n\nconst styles = StyleSheet.create({\n    Carousel:{\n        height:'100%',\n        width:Dimensions.get('window').width,\n        backgroundColor:'#F7F8FC',\n        alignItems:'center',\n        justifyContent:'center'\n    },\n    pipOnIndex : \n        {\n            width:12,\n            height:12,\n            backgroundColor:'#004DBC',\n            borderRadius:6,\n            marginHorizontal:2.5\n        },\n    pipOffIndex : {\n        width:9,\n        height:9,\n        backgroundColor:'rgba(0, 77, 188, 0.2)',\n        borderRadius:4.5,\n        marginHorizontal:2.5\n    }\n    \n})","import axios, { AxiosRequestConfig } from \"axios\";\nimport * as SecureStore from 'expo-secure-store'\nconst axiosClientReferralService = axios.create({\n    baseURL: \"https://api.elphinstone.us/v1/users\" //Change to actual port on deployment\n})\n\naxiosClientReferralService.interceptors.request.use(async (config : AxiosRequestConfig) => {\n    \n    const sessionToken = JSON.parse(await SecureStore.getItemAsync(\"user_session\") as string )\n    config.headers['X-Session-Token'] = sessionToken.session_token\n    config.auth\n    return config\n})\n\n\nexport default axiosClientReferralService\n","import axios, { AxiosError } from \"axios\";\nimport axiosClient from \"../axiosWrapperUserService\";\n\n\nexport default class UserService {\n\t//Response bodies unclear\n\tpublic static async createUser(data: object) {\n\t\tconst res = await axiosClient.post('/', data)\n\t\treturn res\n\t}\n\n\tpublic static async initiateAlpacaAccountOpening(userId: any) {\n\t\tconst res = await axiosClient.post(`/${userId}/agreements`)\n\t\treturn res\n\t}\n\n\t//Document in formdata object as type file (application/pdf)\n\t//Document type = identity_verification\n\t//Document sub type = passport\n\t// formdata = {\n\t// \tfile: document\n\t// \tsub_type = 'passport'\n\t// }\n\tpublic static async uploadSingleDocument(userId: any, documentType: any, data: any) {\n\t\tconst res = await axiosClient.post(`/${userId}/documents/${documentType}`, data,{\n\t\t\theaders : {\n\t\t\t\t'Content-Type' : 'multipart/form-data'\n\t\t\t}\n\t\t})\n\t\treturn res\n\t}\n\n\tpublic static async getUser(userId : any){\n\t\tconst res = await axiosClient.get(`/${userId}`)\n\t\treturn res.data\n\t}\n\n\tpublic static async updateUser(userId : string, body : any){\n\t\tconst res = await axiosClient.patch(`/${userId}`,body)\n\t\treturn res\n\n\t\t\n\t}\n\n\tpublic static async agreements(userId : string){\n\t\tconst res = await axiosClient.post(`/${userId}/agreements`)\n\t\treturn res.data\n\t}\n}","import {\n    View,\n    KeyboardAvoidingView,\n    Text,\n    TouchableOpacity,\n    Dimensions\n} from 'react-native'\nimport { AppConstants, humanReadableDate } from '../../../../assets/AppConstants';\nimport { Entypo, Feather } from '@expo/vector-icons'; \nimport { ScrollView } from 'react-native-gesture-handler';\nimport UserService from '../../../../api/lib/UserService';\nimport { AuthContext } from '../../../components/authProvider';\nimport { useContext, useState } from 'react';\nimport { usePostHog } from 'posthog-react-native';\nexport default function SignupWelcomeScreen({goToNext, userFetched, userData,IP } : {goToNext : ()=>void, userFetched : boolean, userData : any, IP :string}){\n    const { session } = useContext(AuthContext)\n    const createMe = async () => {\n        await UserService.createUser({\n            _id : session?.identity.id,\n            email : session?.identity.traits.email,\n            phone : session?.identity.traits.phone,\n            ip_address : IP,\n            preference : 'conventional',\n            risk_tolerance_level : \"The Moderate\",\n            meta : {\n                profile_start_ts : humanReadableDate(Date.now())\n            }\n            // funding_source : 'employment_income'\n        })\n    }\n    const posthog = usePostHog()\n    const [disableMe, setDisableMe] = useState(false)\n    return(\n        <KeyboardAvoidingView behavior='height' style={{\n            width:Dimensions.get('window').width,\n            height:'100%',\n            justifyContent:'flex-start',\n            alignItems:'flex-start',\n            paddingHorizontal:30\n            }}>\n                <ScrollView style={{width:'100%'}} horizontal={false}>\n                  <View onStartShouldSetResponder={() => true}>\n                    \n                <Text style={{\n                    width:'100%',\n                    fontFamily:'PlayfairDisplay_700Bold',\n                    fontSize:32,\n                    color:AppConstants.loginHeaderBlue\n\n                }}>\n                    Welcome to {'\\n'}\n                    Elphinstone US\n                </Text>\n                <Text\n                style={{\n                    fontFamily:'ArialNova',\n                    fontSize:18,\n                    lineHeight:32,\n                    paddingTop:20\n                }}\n                >\n                Congratulations on taking the first step towards taking control of your financial future! You've made the right decision to use Elphinstone’s US Investments product to help you achieve your financial freedom. We’ll just set you up\n                by asking some important questions.\n                {'\\n'}\n                So let’s do it ...\n                </Text>\n\n                <TouchableOpacity style={{\n                    width:'100%',\n                    marginTop:50,\n                    height: 54,\n                    backgroundColor:AppConstants.loginHeaderBlue,\n                    marginVertical:10,\n                    borderRadius: 6,\n                    padding:10,\n                    alignItems:'center',\n                    flexDirection:'row',\n                    justifyContent:'space-between',\n                    opacity : (userFetched && !disableMe) ? 1 : 0.5\n                }} \n                activeOpacity={0.8}\n                onPress = {() => {\n                    setDisableMe(true)\n                    posthog?.capture('Onboarding started')\n                    createMe().catch(() => {})\n                    .finally(() => {setDisableMe(false); goToNext()})\n\n                }}\n                disabled = {!userFetched && disableMe}\n                >\n                <Text style={{color:'white', fontFamily:'ArialNova', fontSize:18}}>\n                    Let's get started\n                </Text>\n                <Feather name=\"arrow-right\" size={24} color=\"white\" />\n            </TouchableOpacity>\n            </View>  \n                </ScrollView>\n        </KeyboardAvoidingView>\n    )\n}","import {\n    View,\n    TouchableOpacity,\n    Text\n} from 'react-native'\nimport {Feather} from '@expo/vector-icons'\nimport { AppConstants } from '../../assets/AppConstants'\n\n\nexport default function HorizontalNavigatior({backFunction, nextFunction, showBackButton, disableNextButton} : {backFunction : () => void, nextFunction : ()=>void, showBackButton : boolean, disableNextButton? : any}){\n    return(\n        <View\n                style={{\n                    alignItems:'flex-end',\n                    justifyContent:'space-between',\n                    width:'100%', \n                    marginTop:20, \n                    flex:1,\n                    flexDirection:'row',\n                    paddingBottom:20,\n                    // backgroundColor:'#eee'\n                }}>\n                <TouchableOpacity style={{\n                    width:'17.5%',\n                    marginTop:10,\n                    height: 54,\n                    marginVertical:10,\n                    borderRadius: 6,\n                    padding:10,\n                    alignItems:'center',\n                    flexDirection:'row',\n                    justifyContent:'center',\n                    borderWidth: 1,\n                    borderColor:'#DDD',\n                    opacity : showBackButton ? 1 : 0\n                }} \n                onPress={backFunction}\n                disabled = {!showBackButton}\n                >\n                    <Feather name=\"arrow-left\" size={24} color=\"#8692A6\" />\n                </TouchableOpacity>\n                <TouchableOpacity style={{\n                    width:'80%',\n                    marginTop:10,\n                    height: 54,\n                    backgroundColor:AppConstants.loginHeaderBlue,\n                    marginVertical:10,\n                    borderRadius: 6,\n                    padding:10,\n                    alignItems:'center',\n                    flexDirection:'row',\n                    justifyContent:'space-between',\n                    elevation:5,\n                    shadowColor: \"#000\",\n                    shadowOffset: {\n                        width: 0,\n                        height: 2,\n                    },\n                    shadowOpacity: 0.25,\n                    shadowRadius: 3.84,\n                }} \n                activeOpacity={0.8}\n                onPress = {nextFunction}\n                disabled= {disableNextButton}\n                >\n                <Text style={{color:'white', fontFamily:'ArialNova', fontSize:18}}>\n                    Next\n                </Text>\n                <Feather name=\"arrow-right\" size={24} color=\"white\" />\n            </TouchableOpacity>\n            </View>\n    )\n}","import {\n    View,\n    KeyboardAvoidingView,\n    Text,\n    TouchableOpacity,\n    Dimensions,\n    TextInput,\n    Keyboard,\n    Image,\n    ScrollView\n} from 'react-native'\nimport { AppConstants, humanReadableDate } from '../../../../assets/AppConstants';\nimport { Entypo, Feather } from '@expo/vector-icons'; \nimport {useRef, useState} from 'react'\nimport { GlobalStyles } from '../../../GlobalStyles';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport {AntDesign} from '@expo/vector-icons'\nimport CustomTextInput from './SignupMiscComponents/CustomTextInput';\nimport HorizontalNavigatior from '../../../miscComponents/HorizontalNavigator';\nimport UserService from '../../../../api/lib/UserService';\nimport { usePostHog } from 'posthog-react-native';\nconst SignupSchema = Yup.object().shape({\n    legalFirstName: Yup.string().min(1).required('Required'),\n    legalMiddleName: Yup.string(),\n    legalLastName : Yup.string().min(1).required('Required')\n\n  });\n\n\nexport default function SignupLegalNames({goToNext, goToPrev, userData, setUserData, updateUser} : {goToNext : ()=>void, goToPrev : ()=> void, userData : any, setUserData : any, updateUser : any}){\n    const firstInputRef = useRef<any>()\n    const middleInputRef = useRef<any>()\n    const lastInputRef = useRef<any>()\n    const posthog = usePostHog()\n    return(\n        <KeyboardAvoidingView behavior='height' style={{\n            width:Dimensions.get('window').width,\n            height:'100%',\n            justifyContent:'flex-start',\n            alignItems:'flex-start',\n            paddingHorizontal:20\n            }}>\n                <ScrollView style={{width:'100%'}} showsVerticalScrollIndicator={false}>\n                    <View onStartShouldSetResponder={()=>true} style={{width:'100%'}}>\n\n                <Text style={{\n                    width:'100%',\n                    fontFamily:'PlayfairDisplay_700Bold',\n                    fontSize:32,\n                    color:AppConstants.loginHeaderBlue\n\n                }}>\n                    Elphinstone US{'\\n'}Onboarding\n                </Text>\n                \n                <Formik\n                initialValues={{  legalFirstName : userData.legalFirstName, legalMiddleName : userData.legalMiddleName, legalLastName: userData.legalLastName}}\n                validationSchema={SignupSchema}\n                onSubmit={values => {\n                    Keyboard.dismiss()\n                    setUserData({...userData, ...values})\n                    posthog?.capture('Onboarding : Next button pressed on names screen', {\n                        given_name: (values.legalFirstName.trim() + \" \" + values.legalMiddleName.trim()).trim(),\n                        family_name: values.legalLastName,\n                    })\n                    updateUser({\n                        given_name: (values.legalFirstName.trim() + \" \" + values.legalMiddleName.trim()).trim(),\n                        family_name: values.legalLastName,\n                        meta : {\n                            profile_start_ts : humanReadableDate(userData.profile_start_ts),\n                            profile_completeness : 0.1,\n                            signup_page_location : -2\n                        }\n                    }, goToNext)\n                   \n                }}\n            >\n                {({ handleChange, handleBlur, handleSubmit, values, errors, touched }) => (\n                    <>\n                \n                <Text\n                style={{\n                    fontFamily:'ArialNova',\n                    fontSize:18,\n                    // lineHeight:32,\n                    paddingTop:20\n                }}\n                >\n                What is your first legal name?\n                </Text>\n                <CustomTextInput\n                reference={firstInputRef}\n                touched={touched.legalFirstName}\n                errors={errors.legalFirstName}\n                value = {values.legalFirstName}\n                handleChange={handleChange('legalFirstName')}\n                handleBlur={handleBlur('legalFirstName')}\n                placeholder={\"e.g., Ahmad\"}\n                />\n\n                <Text\n                style={{\n                    fontFamily:'ArialNova',\n                    fontSize:18,\n                    // lineHeight:32,\n                    paddingTop:20\n                }}\n                >\n               What is your middle legal name? (optional)\n                </Text>\n                <CustomTextInput\n                reference={middleInputRef}\n                touched={touched.legalMiddleName}\n                errors={errors.legalMiddleName}\n                value = {values.legalMiddleName}\n                handleChange={handleChange('legalMiddleName')}\n                handleBlur={handleBlur('legalMiddleName')}\n                placeholder={\"e.g., Raza\"}\n                />\n\n                <Text\n                style={{\n                    fontFamily:'ArialNova',\n                    fontSize:18,\n                    // lineHeight:32,\n                    paddingTop:20\n                }}\n                >\n                What is your last legal name?\n                </Text>\n                <CustomTextInput\n                reference={lastInputRef}\n                touched={touched.legalLastName}\n                errors={errors.legalLastName}\n                value = {values.legalLastName}\n                handleChange={handleChange('legalLastName')}\n                handleBlur={handleBlur('legalLastName')}\n                placeholder={\"e.g., Khan\"}\n                />\n                \n                \n                <HorizontalNavigatior showBackButton nextFunction={handleSubmit} backFunction={goToPrev}/>\n            </>)}\n            </Formik>\n            \n            </View>\n            <View style={{height:100}}/>\n            </ScrollView>\n            \n        </KeyboardAvoidingView>\n    )\n}","import { Tooltip, TooltipProps } from '@rneui/themed';\nimport React from 'react'\nimport {\n    TouchableOpacity,\n    Text,\n    ScrollView,\n    View,\n    Dimensions,\n    FlatList\n} from 'react-native'\nimport {Entypo} from '@expo/vector-icons'\nimport Flag from 'react-native-flags';\n\n    const getISOCode = (country : string) =>{\n        if (!country){\n            return\n        }\n        return countryList.filter((item)=> item.name.toLowerCase() === country.toLocaleLowerCase())[0]\n        \n    }\n\n  const ControlledTooltip: React.FC<TooltipProps | any> = (props) => {\n    const [open, setOpen] = React.useState(false);\n    return (\n      <Tooltip\n        visible={open}\n        onOpen={() => {\n          (!props.disabled) && setOpen(true);\n        }}\n        onClose={() => {\n          setOpen(false);\n        }}\n        {...props}\n        \n        withPointer={false}\n        skipAndroidStatusBar={false}\n        popover={<ToolTipComponent list ={props.list} setSelectedStatus={(value : string)=>{props.setSelectedStatus(value); setOpen(false)}}/>}\n      />\n    );\n  };\n\n  function ToolTipComponent({setSelectedStatus, list} : {setSelectedStatus : any, list : any[]}) {\n    // const MaritalStatuses = ['Islam', 'Hinduism', 'Christianity','Sikhism','Buddhism','Other']\n\n    const ItemComponent = ({item} : any) =>{\n        // console.log(name,code)\n        return (\n            <TouchableOpacity onPress={()=>setSelectedStatus(item.name)} style={{height:60, justifyContent:'flex-start', alignItems:'center', borderBottomColor: '#DFE0EB', borderBottomWidth:1,padding:10, flexDirection:'row'}}>\n                <Flag code={item.code} size={24} type =\"flat\"/>\n                <Text style={{fontFamily:'ArialNova', color:'black', paddingLeft:10}}>\n                    {item.name}\n                </Text>\n            </TouchableOpacity>\n        )\n    }\n    return (\n        <FlatList data={countryList} renderItem={ItemComponent} style={{width:'100%', overflow:'hidden'}} showsVerticalScrollIndicator={false} keyExtractor={item=>item.code}/>\n        // <ScrollView horizontal={false}>\n        //     {countryList.map((item) => <ItemComponent item={item} key ={item.code}/>)}\n        // </ScrollView>\n    )\n}\n\nexport default function CountrySelector({selectedValue, setValue, disableChange} : {selectedValue : any, setValue : any, disableChange? : any}){\n    return (\n\n            <ControlledTooltip\n            disabled={disableChange}\n            width={Dimensions.get('window').width * 0.85 }\n            height={countryList.length > 5 ? Dimensions.get('window').height * 0.4 : countryList.length * 60}\n            backgroundColor={'#fff'}\n            closeOnlyOnBackdropPress={false}\n            setSelectedStatus = {setValue}\n            skipAndroidStatusBar={false}\n            list = {countryList}\n            containerStyle={{\n                padding:0,\n                // overflow:'hidden',\n                shadowColor: \"#000\",\n                shadowOffset: {\n                    width: 0,\n                    height: 2,\n                },\n                shadowOpacity: 0.06,\n                shadowRadius: 3.84,\n                // borderRadius:6,\n                elevation: 5,\n            }}\n            pointerStyle = {{\n                padding:0,\n                // overflow:'hidden',\n                shadowColor: \"#000\",\n                shadowOffset: {\n                    width: 0,\n                    height: 2,\n                },\n                shadowOpacity: 0.06,\n                shadowRadius: 3.84,\n\n                elevation: 5,\n            }}\n            // highlightColor={'#ccc'}\n          >\n            \n\n            <View\n            style={{\n                height:64,\n                width:Dimensions.get('window').width * 0.9,\n                borderWidth:1,\n                borderColor:'#ddd',\n                borderRadius:6,\n                marginTop:10,\n                justifyContent:'space-between',\n                alignItems:'center',\n                padding:10,\n                flexDirection:'row'\n            }}>\n                <View style={{flexDirection:'row', alignItems:'center'}}>\n                {(selectedValue != '' && selectedValue) && <Flag code={getISOCode(selectedValue).code} size={24} type =\"flat\"/>}\n                <Text style={{paddingLeft:10}}>\n                    {selectedValue === '' ? 'Select' : selectedValue}\n                </Text>\n                </View>\n                <Entypo name='chevron-down' size={20}/>\n            </View>\n            </ControlledTooltip>\n    )\n}\n\nconst countryList = [ \n    {name: 'Pakistan', code: 'PK'},\n    {name: 'United States', code: 'US'}, \n    {name: 'Afghanistan', code: 'AF'}, \n    {name: 'Åland Islands', code: 'AX'}, \n    {name: 'Albania', code: 'AL'}, \n    {name: 'Algeria', code: 'DZ'}, \n    {name: 'American Samoa', code: 'AS'}, \n    {name: 'Andorra', code: 'AD'}, \n    {name: 'Angola', code: 'AO'}, \n    {name: 'Anguilla', code: 'AI'}, \n    {name: 'Antarctica', code: 'AQ'}, \n    {name: 'Antigua and Barbuda', code: 'AG'}, \n    {name: 'Argentina', code: 'AR'}, \n    {name: 'Armenia', code: 'AM'}, \n    {name: 'Aruba', code: 'AW'}, \n    {name: 'Australia', code: 'AU'}, \n    {name: 'Austria', code: 'AT'}, \n    {name: 'Azerbaijan', code: 'AZ'}, \n    {name: 'Bahamas', code: 'BS'}, \n    {name: 'Bahrain', code: 'BH'}, \n    {name: 'Bangladesh', code: 'BD'}, \n    {name: 'Barbados', code: 'BB'}, \n    {name: 'Belarus', code: 'BY'}, \n    {name: 'Belgium', code: 'BE'}, \n    {name: 'Belize', code: 'BZ'}, \n    {name: 'Benin', code: 'BJ'}, \n    {name: 'Bermuda', code: 'BM'}, \n    {name: 'Bhutan', code: 'BT'}, \n    {name: 'Bolivia', code: 'BO'}, \n    {name: 'Bosnia and Herzegovina', code: 'BA'}, \n    {name: 'Botswana', code: 'BW'}, \n    {name: 'Bouvet Island', code: 'BV'}, \n    {name: 'Brazil', code: 'BR'}, \n    {name: 'British Indian Ocean Territory', code: 'IO'}, \n    {name: 'Brunei Darussalam', code: 'BN'}, \n    {name: 'Bulgaria', code: 'BG'}, \n    {name: 'Burkina Faso', code: 'BF'}, \n    {name: 'Burundi', code: 'BI'}, \n    {name: 'Cambodia', code: 'KH'}, \n    {name: 'Cameroon', code: 'CM'}, \n    {name: 'Canada', code: 'CA'}, \n    {name: 'Cape Verde', code: 'CV'}, \n    {name: 'Cayman Islands', code: 'KY'}, \n    {name: 'Central African Republic', code: 'CF'}, \n    {name: 'Chad', code: 'TD'}, \n    {name: 'Chile', code: 'CL'}, \n    {name: 'China', code: 'CN'}, \n    {name: 'Christmas Island', code: 'CX'}, \n    {name: 'Cocos (Keeling) Islands', code: 'CC'}, \n    {name: 'Colombia', code: 'CO'}, \n    {name: 'Comoros', code: 'KM'}, \n    {name: 'Congo', code: 'CG'}, \n    {name: 'Congo, The Democratic Republic of the', code: 'CD'}, \n    {name: 'Cook Islands', code: 'CK'}, \n    {name: 'Costa Rica', code: 'CR'}, \n    {name: 'Cote D\\'Ivoire', code: 'CI'}, \n    {name: 'Croatia', code: 'HR'}, \n    {name: 'Cuba', code: 'CU'}, \n    {name: 'Cyprus', code: 'CY'}, \n    {name: 'Czech Republic', code: 'CZ'}, \n    {name: 'Denmark', code: 'DK'}, \n    {name: 'Djibouti', code: 'DJ'}, \n    {name: 'Dominica', code: 'DM'}, \n    {name: 'Dominican Republic', code: 'DO'}, \n    {name: 'Ecuador', code: 'EC'}, \n    {name: 'Egypt', code: 'EG'}, \n    {name: 'El Salvador', code: 'SV'}, \n    {name: 'Equatorial Guinea', code: 'GQ'}, \n    {name: 'Eritrea', code: 'ER'}, \n    {name: 'Estonia', code: 'EE'}, \n    {name: 'Ethiopia', code: 'ET'}, \n    {name: 'Falkland Islands (Malvinas)', code: 'FK'}, \n    {name: 'Faroe Islands', code: 'FO'}, \n    {name: 'Fiji', code: 'FJ'}, \n    {name: 'Finland', code: 'FI'}, \n    {name: 'France', code: 'FR'}, \n    {name: 'French Guiana', code: 'GF'}, \n    {name: 'French Polynesia', code: 'PF'}, \n    {name: 'French Southern Territories', code: 'TF'}, \n    {name: 'Gabon', code: 'GA'}, \n    {name: 'Gambia', code: 'GM'}, \n    {name: 'Georgia', code: 'GE'}, \n    {name: 'Germany', code: 'DE'}, \n    {name: 'Ghana', code: 'GH'}, \n    {name: 'Gibraltar', code: 'GI'}, \n    {name: 'Greece', code: 'GR'}, \n    {name: 'Greenland', code: 'GL'}, \n    {name: 'Grenada', code: 'GD'}, \n    {name: 'Guadeloupe', code: 'GP'}, \n    {name: 'Guam', code: 'GU'}, \n    {name: 'Guatemala', code: 'GT'}, \n    {name: 'Guernsey', code: 'GG'}, \n    {name: 'Guinea', code: 'GN'}, \n    {name: 'Guinea-Bissau', code: 'GW'}, \n    {name: 'Guyana', code: 'GY'}, \n    {name: 'Haiti', code: 'HT'}, \n    {name: 'Heard Island and Mcdonald Islands', code: 'HM'}, \n    {name: 'Holy See (Vatican City State)', code: 'VA'}, \n    {name: 'Honduras', code: 'HN'}, \n    {name: 'Hong Kong', code: 'HK'}, \n    {name: 'Hungary', code: 'HU'}, \n    {name: 'Iceland', code: 'IS'}, \n    {name: 'India', code: 'IN'}, \n    {name: 'Indonesia', code: 'ID'}, \n    {name: 'Iran, Islamic Republic Of', code: 'IR'}, \n    {name: 'Iraq', code: 'IQ'}, \n    {name: 'Ireland', code: 'IE'}, \n    {name: 'Isle of Man', code: 'IM'}, \n    {name: 'Israel', code: 'IL'}, \n    {name: 'Italy', code: 'IT'}, \n    {name: 'Jamaica', code: 'JM'}, \n    {name: 'Japan', code: 'JP'}, \n    {name: 'Jersey', code: 'JE'}, \n    {name: 'Jordan', code: 'JO'}, \n    {name: 'Kazakhstan', code: 'KZ'}, \n    {name: 'Kenya', code: 'KE'}, \n    {name: 'Kiribati', code: 'KI'}, \n    {name: 'Korea, Democratic People\\'S Republic of', code: 'KP'}, \n    {name: 'Korea, Republic of', code: 'KR'}, \n    {name: 'Kuwait', code: 'KW'}, \n    {name: 'Kyrgyzstan', code: 'KG'}, \n    {name: 'Lao People\\'S Democratic Republic', code: 'LA'}, \n    {name: 'Latvia', code: 'LV'}, \n    {name: 'Lebanon', code: 'LB'}, \n    {name: 'Lesotho', code: 'LS'}, \n    {name: 'Liberia', code: 'LR'}, \n    {name: 'Libyan Arab Jamahiriya', code: 'LY'}, \n    {name: 'Liechtenstein', code: 'LI'}, \n    {name: 'Lithuania', code: 'LT'}, \n    {name: 'Luxembourg', code: 'LU'}, \n    {name: 'Macao', code: 'MO'}, \n    {name: 'Macedonia, The Former Yugoslav Republic of', code: 'MK'}, \n    {name: 'Madagascar', code: 'MG'}, \n    {name: 'Malawi', code: 'MW'}, \n    {name: 'Malaysia', code: 'MY'}, \n    {name: 'Maldives', code: 'MV'}, \n    {name: 'Mali', code: 'ML'}, \n    {name: 'Malta', code: 'MT'}, \n    {name: 'Marshall Islands', code: 'MH'}, \n    {name: 'Martinique', code: 'MQ'}, \n    {name: 'Mauritania', code: 'MR'}, \n    {name: 'Mauritius', code: 'MU'}, \n    {name: 'Mayotte', code: 'YT'}, \n    {name: 'Mexico', code: 'MX'}, \n    {name: 'Micronesia, Federated States of', code: 'FM'}, \n    {name: 'Moldova, Republic of', code: 'MD'}, \n    {name: 'Monaco', code: 'MC'}, \n    {name: 'Mongolia', code: 'MN'}, \n    {name: 'Montserrat', code: 'MS'}, \n    {name: 'Morocco', code: 'MA'}, \n    {name: 'Mozambique', code: 'MZ'}, \n    {name: 'Myanmar', code: 'MM'}, \n    {name: 'Namibia', code: 'NA'}, \n    {name: 'Nauru', code: 'NR'}, \n    {name: 'Nepal', code: 'NP'}, \n    {name: 'Netherlands', code: 'NL'}, \n    {name: 'Netherlands Antilles', code: 'AN'}, \n    {name: 'New Caledonia', code: 'NC'}, \n    {name: 'New Zealand', code: 'NZ'}, \n    {name: 'Nicaragua', code: 'NI'}, \n    {name: 'Niger', code: 'NE'}, \n    {name: 'Nigeria', code: 'NG'}, \n    {name: 'Niue', code: 'NU'}, \n    {name: 'Norfolk Island', code: 'NF'}, \n    {name: 'Northern Mariana Islands', code: 'MP'}, \n    {name: 'Norway', code: 'NO'}, \n    {name: 'Oman', code: 'OM'},  \n    {name: 'Palau', code: 'PW'}, \n    {name: 'Palestinian Territory, Occupied', code: 'PS'}, \n    {name: 'Panama', code: 'PA'}, \n    {name: 'Papua New Guinea', code: 'PG'}, \n    {name: 'Paraguay', code: 'PY'}, \n    {name: 'Peru', code: 'PE'}, \n    {name: 'Philippines', code: 'PH'}, \n    {name: 'Pitcairn', code: 'PN'}, \n    {name: 'Poland', code: 'PL'}, \n    {name: 'Portugal', code: 'PT'}, \n    {name: 'Puerto Rico', code: 'PR'}, \n    {name: 'Qatar', code: 'QA'}, \n    {name: 'Reunion', code: 'RE'}, \n    {name: 'Romania', code: 'RO'}, \n    {name: 'Russian Federation', code: 'RU'}, \n    {name: 'RWANDA', code: 'RW'}, \n    {name: 'Saint Helena', code: 'SH'}, \n    {name: 'Saint Kitts and Nevis', code: 'KN'}, \n    {name: 'Saint Lucia', code: 'LC'}, \n    {name: 'Saint Pierre and Miquelon', code: 'PM'}, \n    {name: 'Saint Vincent and the Grenadines', code: 'VC'}, \n    {name: 'Samoa', code: 'WS'}, \n    {name: 'San Marino', code: 'SM'}, \n    {name: 'Sao Tome and Principe', code: 'ST'}, \n    {name: 'Saudi Arabia', code: 'SA'}, \n    {name: 'Senegal', code: 'SN'}, \n    {name: 'Serbia and Montenegro', code: 'CS'}, \n    {name: 'Seychelles', code: 'SC'}, \n    {name: 'Sierra Leone', code: 'SL'}, \n    {name: 'Singapore', code: 'SG'}, \n    {name: 'Slovakia', code: 'SK'}, \n    {name: 'Slovenia', code: 'SI'}, \n    {name: 'Solomon Islands', code: 'SB'}, \n    {name: 'Somalia', code: 'SO'}, \n    {name: 'South Africa', code: 'ZA'}, \n    {name: 'South Georgia and the South Sandwich Islands', code: 'GS'}, \n    {name: 'Spain', code: 'ES'}, \n    {name: 'Sri Lanka', code: 'LK'}, \n    {name: 'Sudan', code: 'SD'}, \n    {name: 'Suriname', code: 'SR'}, \n    {name: 'Svalbard and Jan Mayen', code: 'SJ'}, \n    {name: 'Swaziland', code: 'SZ'}, \n    {name: 'Sweden', code: 'SE'}, \n    {name: 'Switzerland', code: 'CH'}, \n    {name: 'Syrian Arab Republic', code: 'SY'}, \n    {name: 'Taiwan, Province of China', code: 'TW'}, \n    {name: 'Tajikistan', code: 'TJ'}, \n    {name: 'Tanzania, United Republic of', code: 'TZ'}, \n    {name: 'Thailand', code: 'TH'}, \n    {name: 'Timor-Leste', code: 'TL'}, \n    {name: 'Togo', code: 'TG'}, \n    {name: 'Tokelau', code: 'TK'}, \n    {name: 'Tonga', code: 'TO'}, \n    {name: 'Trinidad and Tobago', code: 'TT'}, \n    {name: 'Tunisia', code: 'TN'}, \n    {name: 'Turkey', code: 'TR'}, \n    {name: 'Turkmenistan', code: 'TM'}, \n    {name: 'Turks and Caicos Islands', code: 'TC'}, \n    {name: 'Tuvalu', code: 'TV'}, \n    {name: 'Uganda', code: 'UG'}, \n    {name: 'Ukraine', code: 'UA'}, \n    {name: 'United Arab Emirates', code: 'AE'}, \n    {name: 'United Kingdom', code: 'GB'}, \n    {name: 'United States Minor Outlying Islands', code: 'UM'}, \n    {name: 'Uruguay', code: 'UY'}, \n    {name: 'Uzbekistan', code: 'UZ'}, \n    {name: 'Vanuatu', code: 'VU'}, \n    {name: 'Venezuela', code: 'VE'}, \n    {name: 'Vietnam', code: 'VN'}, \n    {name: 'Virgin Islands, British', code: 'VG'}, \n    {name: 'Virgin Islands, U.S.', code: 'VI'}, \n    {name: 'Wallis and Futuna', code: 'WF'}, \n    {name: 'Western Sahara', code: 'EH'}, \n    {name: 'Yemen', code: 'YE'}, \n    {name: 'Zambia', code: 'ZM'}, \n    {name: 'Zimbabwe', code: 'ZW'} \n  ]","export const ISO3 = [\n    {\n        \"code\": \"AFG\",\n        \"name\": \"Afghanistan\",\n        \n    },\n    {\n        \"code\": \"ALA\",\n        \"name\": \"Åland Islands\",\n        \n    },\n    {\n        \"code\": \"ALB\",\n        \"name\": \"Albania\",\n        \n    },\n    {\n        \"code\": \"DZA\",\n        \"name\": \"Algeria\",\n        \n    },\n    {\n        \"code\": \"ASM\",\n        \"name\": \"American Samoa\",\n        \n    },\n    {\n        \"code\": \"AND\",\n        \"name\": \"Andorra\",\n        \n    },\n    {\n        \"code\": \"AGO\",\n        \"name\": \"Angola\",\n        \n    },\n    {\n        \"code\": \"AIA\",\n        \"name\": \"Anguilla\",\n        \n    },\n    {\n        \"code\": \"ATA\",\n        \"name\": \"Antarctica\",\n        \n    },\n    {\n        \"code\": \"ATG\",\n        \"name\": \"Antigua and Barbuda\",\n        \n    },\n    {\n        \"code\": \"ARG\",\n        \"name\": \"Argentina\",\n        \n    },\n    {\n        \"code\": \"ARM\",\n        \"name\": \"Armenia\",\n        \n    },\n    {\n        \"code\": \"ABW\",\n        \"name\": \"Aruba\",\n        \n    },\n    {\n        \"code\": \"AUS\",\n        \"name\": \"Australia\",\n        \n    },\n    {\n        \"code\": \"AUT\",\n        \"name\": \"Austria\",\n        \n    },\n    {\n        \"code\": \"AZE\",\n        \"name\": \"Azerbaijan\",\n        \n    },\n    {\n        \"code\": \"BHS\",\n        \"name\": \"Bahamas\",\n        \n    },\n    {\n        \"code\": \"BHR\",\n        \"name\": \"Bahrain\",\n        \n    },\n    {\n        \"code\": \"BGD\",\n        \"name\": \"Bangladesh\",\n        \n    },\n    {\n        \"code\": \"BRB\",\n        \"name\": \"Barbados\",\n        \n    },\n    {\n        \"code\": \"BLR\",\n        \"name\": \"Belarus\",\n        \n    },\n    {\n        \"code\": \"BEL\",\n        \"name\": \"Belgium\",\n        \n    },\n    {\n        \"code\": \"BLZ\",\n        \"name\": \"Belize\",\n        \n    },\n    {\n        \"code\": \"BEN\",\n        \"name\": \"Benin\",\n        \n    },\n    {\n        \"code\": \"BMU\",\n        \"name\": \"Bermuda\",\n        \n    },\n    {\n        \"code\": \"BTN\",\n        \"name\": \"Bhutan\",\n        \n    },\n    {\n        \"code\": \"BOL\",\n        \"name\": \"Bolivia, Plurinational State of\",\n        \n    },\n    {\n        \"code\": \"BES\",\n        \"name\": \"Bonaire, Sint Eustatius and Saba\",\n        \n    },\n    {\n        \"code\": \"BIH\",\n        \"name\": \"Bosnia and Herzegovina\",\n        \n    },\n    {\n        \"code\": \"BWA\",\n        \"name\": \"Botswana\",\n        \n    },\n    {\n        \"code\": \"BVT\",\n        \"name\": \"Bouvet Island\",\n        \n    },\n    {\n        \"code\": \"BRA\",\n        \"name\": \"Brazil\",\n        \n    },\n    {\n        \"code\": \"IOT\",\n        \"name\": \"British Indian Ocean Territory\",\n        \n    },\n    {\n        \"code\": \"BRN\",\n        \"name\": \"Brunei Darussalam\",\n        \n    },\n    {\n        \"code\": \"BGR\",\n        \"name\": \"Bulgaria\",\n        \n    },\n    {\n        \"code\": \"BFA\",\n        \"name\": \"Burkina Faso\",\n        \n    },\n    {\n        \"code\": \"BDI\",\n        \"name\": \"Burundi\",\n        \n    },\n    {\n        \"code\": \"KHM\",\n        \"name\": \"Cambodia\",\n        \n    },\n    {\n        \"code\": \"CMR\",\n        \"name\": \"Cameroon\",\n        \n    },\n    {\n        \"code\": \"CAN\",\n        \"name\": \"Canada\",\n        \n    },\n    {\n        \"code\": \"CPV\",\n        \"name\": \"Cape Verde\",\n        \n    },\n    {\n        \"code\": \"CYM\",\n        \"name\": \"Cayman Islands\",\n        \n    },\n    {\n        \"code\": \"CAF\",\n        \"name\": \"Central African Republic\",\n        \n    },\n    {\n        \"code\": \"TCD\",\n        \"name\": \"Chad\",\n        \n    },\n    {\n        \"code\": \"CHL\",\n        \"name\": \"Chile\",\n        \n    },\n    {\n        \"code\": \"CHN\",\n        \"name\": \"China\",\n        \n    },\n    {\n        \"code\": \"CXR\",\n        \"name\": \"Christmas Island\",\n        \n    },\n    {\n        \"code\": \"CCK\",\n        \"name\": \"Cocos (Keeling) Islands\",\n        \n    },\n    {\n        \"code\": \"COL\",\n        \"name\": \"Colombia\",\n        \n    },\n    {\n        \"code\": \"COM\",\n        \"name\": \"Comoros\",\n        \n    },\n    {\n        \"code\": \"COG\",\n        \"name\": \"Congo\",\n        \n    },\n    {\n        \"code\": \"COD\",\n        \"name\": \"Congo, the Democratic Republic of the\",\n        \n    },\n    {\n        \"code\": \"COK\",\n        \"name\": \"Cook Islands\",\n        \n    },\n    {\n        \"code\": \"CRI\",\n        \"name\": \"Costa Rica\",\n        \n    },\n    {\n        \"code\": \"CIV\",\n        \"name\": \"Côte d'Ivoire\",\n        \n    },\n    {\n        \"code\": \"HRV\",\n        \"name\": \"Croatia\",\n        \n    },\n    {\n        \"code\": \"CUB\",\n        \"name\": \"Cuba\",\n        \n    },\n    {\n        \"code\": \"CUW\",\n        \"name\": \"Curaçao\",\n        \n    },\n    {\n        \"code\": \"CYP\",\n        \"name\": \"Cyprus\",\n        \n    },\n    {\n        \"code\": \"CZE\",\n        \"name\": \"Czech Republic\",\n        \n    },\n    {\n        \"code\": \"DNK\",\n        \"name\": \"Denmark\",\n        \n    },\n    {\n        \"code\": \"DJI\",\n        \"name\": \"Djibouti\",\n        \n    },\n    {\n        \"code\": \"DMA\",\n        \"name\": \"Dominica\",\n        \n    },\n    {\n        \"code\": \"DOM\",\n        \"name\": \"Dominican Republic\",\n        \n    },\n    {\n        \"code\": \"ECU\",\n        \"name\": \"Ecuador\",\n        \n    },\n    {\n        \"code\": \"EGY\",\n        \"name\": \"Egypt\",\n        \n    },\n    {\n        \"code\": \"SLV\",\n        \"name\": \"El Salvador\",\n        \n    },\n    {\n        \"code\": \"GNQ\",\n        \"name\": \"Equatorial Guinea\",\n        \n    },\n    {\n        \"code\": \"ERI\",\n        \"name\": \"Eritrea\",\n        \n    },\n    {\n        \"code\": \"EST\",\n        \"name\": \"Estonia\",\n        \n    },\n    {\n        \"code\": \"ETH\",\n        \"name\": \"Ethiopia\",\n        \n    },\n    {\n        \"code\": \"FLK\",\n        \"name\": \"Falkland Islands (Malvinas)\",\n        \n    },\n    {\n        \"code\": \"FRO\",\n        \"name\": \"Faroe Islands\",\n        \n    },\n    {\n        \"code\": \"FJI\",\n        \"name\": \"Fiji\",\n        \n    },\n    {\n        \"code\": \"FIN\",\n        \"name\": \"Finland\",\n        \n    },\n    {\n        \"code\": \"FRA\",\n        \"name\": \"France\",\n        \n    },\n    {\n        \"code\": \"GUF\",\n        \"name\": \"French Guiana\",\n        \n    },\n    {\n        \"code\": \"PYF\",\n        \"name\": \"French Polynesia\",\n        \n    },\n    {\n        \"code\": \"ATF\",\n        \"name\": \"French Southern Territories\",\n        \n    },\n    {\n        \"code\": \"GAB\",\n        \"name\": \"Gabon\",\n        \n    },\n    {\n        \"code\": \"GMB\",\n        \"name\": \"Gambia\",\n        \n    },\n    {\n        \"code\": \"GEO\",\n        \"name\": \"Georgia\",\n        \n    },\n    {\n        \"code\": \"DEU\",\n        \"name\": \"Germany\",\n        \n    },\n    {\n        \"code\": \"GHA\",\n        \"name\": \"Ghana\",\n        \n    },\n    {\n        \"code\": \"GIB\",\n        \"name\": \"Gibraltar\",\n        \n    },\n    {\n        \"code\": \"GRC\",\n        \"name\": \"Greece\",\n        \n    },\n    {\n        \"code\": \"GRL\",\n        \"name\": \"Greenland\",\n        \n    },\n    {\n        \"code\": \"GRD\",\n        \"name\": \"Grenada\",\n        \n    },\n    {\n        \"code\": \"GLP\",\n        \"name\": \"Guadeloupe\",\n        \n    },\n    {\n        \"code\": \"GUM\",\n        \"name\": \"Guam\",\n        \n    },\n    {\n        \"code\": \"GTM\",\n        \"name\": \"Guatemala\",\n        \n    },\n    {\n        \"code\": \"GGY\",\n        \"name\": \"Guernsey\",\n        \n    },\n    {\n        \"code\": \"GIN\",\n        \"name\": \"Guinea\",\n        \n    },\n    {\n        \"code\": \"GNB\",\n        \"name\": \"Guinea-Bissau\",\n        \n    },\n    {\n        \"code\": \"GUY\",\n        \"name\": \"Guyana\",\n        \n    },\n    {\n        \"code\": \"HTI\",\n        \"name\": \"Haiti\",\n        \n    },\n    {\n        \"code\": \"HMD\",\n        \"name\": \"Heard Island and McDonald Islands\",\n        \n    },\n    {\n        \"code\": \"VAT\",\n        \"name\": \"Holy See (Vatican City State)\",\n        \n    },\n    {\n        \"code\": \"HND\",\n        \"name\": \"Honduras\",\n        \n    },\n    {\n        \"code\": \"HKG\",\n        \"name\": \"Hong Kong\",\n        \n    },\n    {\n        \"code\": \"HUN\",\n        \"name\": \"Hungary\",\n        \n    },\n    {\n        \"code\": \"ISL\",\n        \"name\": \"Iceland\",\n        \n    },\n    {\n        \"code\": \"IND\",\n        \"name\": \"India\",\n        \n    },\n    {\n        \"code\": \"IDN\",\n        \"name\": \"Indonesia\",\n        \n    },\n    {\n        \"code\": \"IRN\",\n        \"name\": \"Iran, Islamic Republic of\",\n        \n    },\n    {\n        \"code\": \"IRQ\",\n        \"name\": \"Iraq\",\n        \n    },\n    {\n        \"code\": \"IRL\",\n        \"name\": \"Ireland\",\n        \n    },\n    {\n        \"code\": \"IMN\",\n        \"name\": \"Isle of Man\",\n        \n    },\n    {\n        \"code\": \"ISR\",\n        \"name\": \"Israel\",\n        \n    },\n    {\n        \"code\": \"ITA\",\n        \"name\": \"Italy\",\n        \n    },\n    {\n        \"code\": \"JAM\",\n        \"name\": \"Jamaica\",\n        \n    },\n    {\n        \"code\": \"JPN\",\n        \"name\": \"Japan\",\n        \n    },\n    {\n        \"code\": \"JEY\",\n        \"name\": \"Jersey\",\n        \n    },\n    {\n        \"code\": \"JOR\",\n        \"name\": \"Jordan\",\n        \n    },\n    {\n        \"code\": \"KAZ\",\n        \"name\": \"Kazakhstan\",\n        \n    },\n    {\n        \"code\": \"KEN\",\n        \"name\": \"Kenya\",\n        \n    },\n    {\n        \"code\": \"KIR\",\n        \"name\": \"Kiribati\",\n        \n    },\n    {\n        \"code\": \"PRK\",\n        \"name\": \"Korea, Democratic People's Republic of\",\n        \n    },\n    {\n        \"code\": \"KOR\",\n        \"name\": \"Korea, Republic of\",\n        \n    },\n    {\n        \"code\": \"KWT\",\n        \"name\": \"Kuwait\",\n        \n    },\n    {\n        \"code\": \"KGZ\",\n        \"name\": \"Kyrgyzstan\",\n        \n    },\n    {\n        \"code\": \"LAO\",\n        \"name\": \"Lao People's Democratic Republic\",\n        \n    },\n    {\n        \"code\": \"LVA\",\n        \"name\": \"Latvia\",\n        \n    },\n    {\n        \"code\": \"LBN\",\n        \"name\": \"Lebanon\",\n        \n    },\n    {\n        \"code\": \"LSO\",\n        \"name\": \"Lesotho\",\n        \n    },\n    {\n        \"code\": \"LBR\",\n        \"name\": \"Liberia\",\n        \n    },\n    {\n        \"code\": \"LBY\",\n        \"name\": \"Libya\",\n        \n    },\n    {\n        \"code\": \"LIE\",\n        \"name\": \"Liechtenstein\",\n        \n    },\n    {\n        \"code\": \"LTU\",\n        \"name\": \"Lithuania\",\n        \n    },\n    {\n        \"code\": \"LUX\",\n        \"name\": \"Luxembourg\",\n        \n    },\n    {\n        \"code\": \"MAC\",\n        \"name\": \"Macao\",\n        \n    },\n    {\n        \"code\": \"MKD\",\n        \"name\": \"Macedonia, the former Yugoslav Republic of\",\n        \n    },\n    {\n        \"code\": \"MDG\",\n        \"name\": \"Madagascar\",\n        \n    },\n    {\n        \"code\": \"MWI\",\n        \"name\": \"Malawi\",\n        \n    },\n    {\n        \"code\": \"MYS\",\n        \"name\": \"Malaysia\",\n        \n    },\n    {\n        \"code\": \"MDV\",\n        \"name\": \"Maldives\",\n        \n    },\n    {\n        \"code\": \"MLI\",\n        \"name\": \"Mali\",\n        \n    },\n    {\n        \"code\": \"MLT\",\n        \"name\": \"Malta\",\n        \n    },\n    {\n        \"code\": \"MHL\",\n        \"name\": \"Marshall Islands\",\n        \n    },\n    {\n        \"code\": \"MTQ\",\n        \"name\": \"Martinique\",\n        \n    },\n    {\n        \"code\": \"MRT\",\n        \"name\": \"Mauritania\",\n        \n    },\n    {\n        \"code\": \"MUS\",\n        \"name\": \"Mauritius\",\n        \n    },\n    {\n        \"code\": \"MYT\",\n        \"name\": \"Mayotte\",\n        \n    },\n    {\n        \"code\": \"MEX\",\n        \"name\": \"Mexico\",\n        \n    },\n    {\n        \"code\": \"FSM\",\n        \"name\": \"Micronesia, Federated States of\",\n        \n    },\n    {\n        \"code\": \"MDA\",\n        \"name\": \"Moldova, Republic of\",\n        \n    },\n    {\n        \"code\": \"MCO\",\n        \"name\": \"Monaco\",\n        \n    },\n    {\n        \"code\": \"MNG\",\n        \"name\": \"Mongolia\",\n        \n    },\n    {\n        \"code\": \"MNE\",\n        \"name\": \"Montenegro\",\n        \n    },\n    {\n        \"code\": \"MSR\",\n        \"name\": \"Montserrat\",\n        \n    },\n    {\n        \"code\": \"MAR\",\n        \"name\": \"Morocco\",\n        \n    },\n    {\n        \"code\": \"MOZ\",\n        \"name\": \"Mozambique\",\n        \n    },\n    {\n        \"code\": \"MMR\",\n        \"name\": \"Myanmar\",\n        \n    },\n    {\n        \"code\": \"NAM\",\n        \"name\": \"Namibia\",\n        \n    },\n    {\n        \"code\": \"NRU\",\n        \"name\": \"Nauru\",\n        \n    },\n    {\n        \"code\": \"NPL\",\n        \"name\": \"Nepal\",\n        \n    },\n    {\n        \"code\": \"NLD\",\n        \"name\": \"Netherlands\",\n        \n    },\n    {\n        \"code\": \"NCL\",\n        \"name\": \"New Caledonia\",\n        \n    },\n    {\n        \"code\": \"NZL\",\n        \"name\": \"New Zealand\",\n        \n    },\n    {\n        \"code\": \"NIC\",\n        \"name\": \"Nicaragua\",\n        \n    },\n    {\n        \"code\": \"NER\",\n        \"name\": \"Niger\",\n        \n    },\n    {\n        \"code\": \"NGA\",\n        \"name\": \"Nigeria\",\n        \n    },\n    {\n        \"code\": \"NIU\",\n        \"name\": \"Niue\",\n        \n    },\n    {\n        \"code\": \"NFK\",\n        \"name\": \"Norfolk Island\",\n        \n    },\n    {\n        \"code\": \"MNP\",\n        \"name\": \"Northern Mariana Islands\",\n        \n    },\n    {\n        \"code\": \"NOR\",\n        \"name\": \"Norway\",\n        \n    },\n    {\n        \"code\": \"OMN\",\n        \"name\": \"Oman\",\n        \n    },\n    {\n        \"code\": \"PAK\",\n        \"name\": \"Pakistan\",\n        \n    },\n    {\n        \"code\": \"PLW\",\n        \"name\": \"Palau\",\n        \n    },\n    {\n        \"code\": \"PSE\",\n        \"name\": \"Palestinian Territory, Occupied\",\n        \n    },\n    {\n        \"code\": \"PAN\",\n        \"name\": \"Panama\",\n        \n    },\n    {\n        \"code\": \"PNG\",\n        \"name\": \"Papua New Guinea\",\n        \n    },\n    {\n        \"code\": \"PRY\",\n        \"name\": \"Paraguay\",\n        \n    },\n    {\n        \"code\": \"PER\",\n        \"name\": \"Peru\",\n        \n    },\n    {\n        \"code\": \"PHL\",\n        \"name\": \"Philippines\",\n        \n    },\n    {\n        \"code\": \"PCN\",\n        \"name\": \"Pitcairn\",\n        \n    },\n    {\n        \"code\": \"POL\",\n        \"name\": \"Poland\",\n        \n    },\n    {\n        \"code\": \"PRT\",\n        \"name\": \"Portugal\",\n        \n    },\n    {\n        \"code\": \"PRI\",\n        \"name\": \"Puerto Rico\",\n        \n    },\n    {\n        \"code\": \"QAT\",\n        \"name\": \"Qatar\",\n        \n    },\n    {\n        \"code\": \"REU\",\n        \"name\": \"Réunion\",\n        \n    },\n    {\n        \"code\": \"ROU\",\n        \"name\": \"Romania\",\n        \n    },\n    {\n        \"code\": \"RUS\",\n        \"name\": \"Russian Federation\",\n        \n    },\n    {\n        \"code\": \"RWA\",\n        \"name\": \"Rwanda\",\n        \n    },\n    {\n        \"code\": \"BLM\",\n        \"name\": \"Saint Barthélemy\",\n        \n    },\n    {\n        \"code\": \"SHN\",\n        \"name\": \"Saint Helena, Ascension and Tristan da Cunha\",\n        \n    },\n    {\n        \"code\": \"KNA\",\n        \"name\": \"Saint Kitts and Nevis\",\n        \n    },\n    {\n        \"code\": \"LCA\",\n        \"name\": \"Saint Lucia\",\n        \n    },\n    {\n        \"code\": \"MAF\",\n        \"name\": \"Saint Martin (French part)\",\n        \n    },\n    {\n        \"code\": \"SPM\",\n        \"name\": \"Saint Pierre and Miquelon\",\n        \n    },\n    {\n        \"code\": \"VCT\",\n        \"name\": \"Saint Vincent and the Grenadines\",\n        \n    },\n    {\n        \"code\": \"WSM\",\n        \"name\": \"Samoa\",\n        \n    },\n    {\n        \"code\": \"SMR\",\n        \"name\": \"San Marino\",\n        \n    },\n    {\n        \"code\": \"STP\",\n        \"name\": \"Sao Tome and Principe\",\n        \n    },\n    {\n        \"code\": \"SAU\",\n        \"name\": \"Saudi Arabia\",\n        \n    },\n    {\n        \"code\": \"SEN\",\n        \"name\": \"Senegal\",\n        \n    },\n    {\n        \"code\": \"SRB\",\n        \"name\": \"Serbia\",\n        \n    },\n    {\n        \"code\": \"SYC\",\n        \"name\": \"Seychelles\",\n        \n    },\n    {\n        \"code\": \"SLE\",\n        \"name\": \"Sierra Leone\",\n        \n    },\n    {\n        \"code\": \"SGP\",\n        \"name\": \"Singapore\",\n        \n    },\n    {\n        \"code\": \"SXM\",\n        \"name\": \"Sint Maarten (Dutch part)\",\n        \n    },\n    {\n        \"code\": \"SVK\",\n        \"name\": \"Slovakia\",\n        \n    },\n    {\n        \"code\": \"SVN\",\n        \"name\": \"Slovenia\",\n        \n    },\n    {\n        \"code\": \"SLB\",\n        \"name\": \"Solomon Islands\",\n        \n    },\n    {\n        \"code\": \"SOM\",\n        \"name\": \"Somalia\",\n        \n    },\n    {\n        \"code\": \"ZAF\",\n        \"name\": \"South Africa\",\n        \n    },\n    {\n        \"code\": \"SGS\",\n        \"name\": \"South Georgia and the South Sandwich Islands\",\n        \n    },\n    {\n        \"code\": \"SSD\",\n        \"name\": \"South Sudan\",\n        \n    },\n    {\n        \"code\": \"ESP\",\n        \"name\": \"Spain\",\n        \n    },\n    {\n        \"code\": \"LKA\",\n        \"name\": \"Sri Lanka\",\n        \n    },\n    {\n        \"code\": \"SDN\",\n        \"name\": \"Sudan\",\n        \n    },\n    {\n        \"code\": \"SUR\",\n        \"name\": \"Suriname\",\n        \n    },\n    {\n        \"code\": \"SJM\",\n        \"name\": \"Svalbard and Jan Mayen\",\n        \n    },\n    {\n        \"code\": \"SWZ\",\n        \"name\": \"Swaziland\",\n        \n    },\n    {\n        \"code\": \"SWE\",\n        \"name\": \"Sweden\",\n        \n    },\n    {\n        \"code\": \"CHE\",\n        \"name\": \"Switzerland\",\n        \n    },\n    {\n        \"code\": \"SYR\",\n        \"name\": \"Syrian Arab Republic\",\n        \n    },\n    {\n        \"code\": \"TWN\",\n        \"name\": \"Taiwan, Province of China\",\n        \n    },\n    {\n        \"code\": \"TJK\",\n        \"name\": \"Tajikistan\",\n        \n    },\n    {\n        \"code\": \"TZA\",\n        \"name\": \"Tanzania, United Republic of\",\n        \n    },\n    {\n        \"code\": \"THA\",\n        \"name\": \"Thailand\",\n        \n    },\n    {\n        \"code\": \"TLS\",\n        \"name\": \"Timor-Leste\",\n        \n    },\n    {\n        \"code\": \"TGO\",\n        \"name\": \"Togo\",\n        \n    },\n    {\n        \"code\": \"TKL\",\n        \"name\": \"Tokelau\",\n        \n    },\n    {\n        \"code\": \"TON\",\n        \"name\": \"Tonga\",\n        \n    },\n    {\n        \"code\": \"TTO\",\n        \"name\": \"Trinidad and Tobago\",\n        \n    },\n    {\n        \"code\": \"TUN\",\n        \"name\": \"Tunisia\",\n        \n    },\n    {\n        \"code\": \"TUR\",\n        \"name\": \"Turkey\",\n        \n    },\n    {\n        \"code\": \"TKM\",\n        \"name\": \"Turkmenistan\",\n        \n    },\n    {\n        \"code\": \"TCA\",\n        \"name\": \"Turks and Caicos Islands\",\n        \n    },\n    {\n        \"code\": \"TUV\",\n        \"name\": \"Tuvalu\",\n        \n    },\n    {\n        \"code\": \"UGA\",\n        \"name\": \"Uganda\",\n        \n    },\n    {\n        \"code\": \"UKR\",\n        \"name\": \"Ukraine\",\n        \n    },\n    {\n        \"code\": \"ARE\",\n        \"name\": \"United Arab Emirates\",\n        \n    },\n    {\n        \"code\": \"GBR\",\n        \"name\": \"United Kingdom\",\n        \n    },\n    {\n        \"code\": \"USA\",\n        \"name\": \"United States\",\n        \n    },\n    {\n        \"code\": \"UMI\",\n        \"name\": \"United States Minor Outlying Islands\",\n        \n    },\n    {\n        \"code\": \"URY\",\n        \"name\": \"Uruguay\",\n        \n    },\n    {\n        \"code\": \"UZB\",\n        \"name\": \"Uzbekistan\",\n        \n    },\n    {\n        \"code\": \"VUT\",\n        \"name\": \"Vanuatu\",\n        \n    },\n    {\n        \"code\": \"VEN\",\n        \"name\": \"Venezuela, Bolivarian Republic of\",\n        \n    },\n    {\n        \"code\": \"VNM\",\n        \"name\": \"Viet Nam\",\n        \n    },\n    {\n        \"code\": \"VGB\",\n        \"name\": \"Virgin Islands, British\",\n        \n    },\n    {\n        \"code\": \"VIR\",\n        \"name\": \"Virgin Islands, U.S.\",\n        \n    },\n    {\n        \"code\": \"WLF\",\n        \"name\": \"Wallis and Futuna\",\n        \n    },\n    {\n        \"code\": \"ESH\",\n        \"name\": \"Western Sahara\",\n        \n    },\n    {\n        \"code\": \"YEM\",\n        \"name\": \"Yemen\",\n        \n    },\n    {\n        \"code\": \"ZMB\",\n        \"name\": \"Zambia\",\n        \n    },\n    {\n        \"code\": \"ZWE\",\n        \"name\": \"Zimbabwe\",\n        \n    }\n]\n\nexport const getCountryFromISO3 = (code : string) => {\n    return ISO3.filter(item => item.code === code)[0]?.name\n}\n\nexport const getISO3FromCountry = (name : string) => {\n    return ISO3.filter(item => item.name === name)[0]?.code\n}","import {\n    View,\n    KeyboardAvoidingView,\n    Text,\n    TouchableOpacity,\n    Dimensions,\n    TextInput,\n    Keyboard,\n    Image\n} from 'react-native'\nimport { AppConstants, humanReadableDate } from '../../../../assets/AppConstants';\nimport { Entypo, Feather } from '@expo/vector-icons'; \nimport {useRef, useState} from 'react'\nimport { GlobalStyles } from '../../../GlobalStyles';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport {AntDesign} from '@expo/vector-icons'\nimport CustomSelector from './SignupMiscComponents/CustomSelector';\nimport CountrySelector from './SignupMiscComponents/CountrySelector';\nimport HorizontalNavigatior from '../../../miscComponents/HorizontalNavigator';\nimport { getISO3FromCountry } from '../../../../assets/countryListISO3';\nimport { usePostHog } from 'posthog-react-native';\nconst SignupSchema = Yup.object().shape({\n    birthPlace: Yup.string().min(1).required('Required'),\n  });\n\n\nexport default function SignupTaxResidence({goToNext, goToPrev, userData, setUserData, updateUser} : {goToNext : ()=>void, goToPrev : ()=> void, userData : any, setUserData : any, updateUser : any}){\n    const emailInputRef = useRef<any>()\n    const [selectedCountry, setSelectedCountry] = useState(userData.taxResidence)\n    const posthog = usePostHog()\n    const onSubmit = () =>{\n        if (selectedCountry != \"\"){\n            setUserData({...userData, taxResidence : selectedCountry})\n            posthog?.capture('Onboarding : Next button pressed on tax residence screen', {\n                country_of_tax_residence: getISO3FromCountry(selectedCountry),\n            })\n            updateUser({\n                country_of_tax_residence: getISO3FromCountry(selectedCountry),\n                meta : {\n                    profile_start_ts : humanReadableDate(userData.profile_start_ts),\n                    profile_completeness : 0.15,\n                    signup_page_location : -3\n                }\n            },goToNext)\n            \n        }\n    }\n    return(\n        <KeyboardAvoidingView behavior='height' style={{\n            width:Dimensions.get('window').width,\n            height:'100%',\n            justifyContent:'flex-start',\n            alignItems:'flex-start',\n            paddingHorizontal:20\n            }}>\n                \n\n                <Text style={{\n                    width:'100%',\n                    fontFamily:'PlayfairDisplay_700Bold',\n                    fontSize:32,\n                    color:AppConstants.loginHeaderBlue\n\n                }}>\n                    Elphinstone US{'\\n'}Onboarding\n                </Text>\n                <Text\n                style={{\n                    fontFamily:'ArialNova',\n                    fontSize:18,\n                    lineHeight:32,\n                    paddingTop:20\n                }}\n                >\n                Country of Tax Residence\n                </Text>\n               <CountrySelector selectedValue={selectedCountry} setValue={setSelectedCountry}/>\n               <HorizontalNavigatior showBackButton nextFunction={onSubmit} backFunction={goToPrev}/>\n        </KeyboardAvoidingView>\n    )\n}","import {\n    View,\n    KeyboardAvoidingView,\n    Text,\n    TouchableOpacity,\n    Dimensions,\n    TextInput,\n    Keyboard,\n    Image\n} from 'react-native'\nimport { AppConstants, humanReadableDate } from '../../../../assets/AppConstants';\nimport { Entypo, Feather } from '@expo/vector-icons'; \nimport {useRef, useState} from 'react'\nimport { GlobalStyles } from '../../../GlobalStyles';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport {AntDesign} from '@expo/vector-icons'\nimport CustomSelector from './SignupMiscComponents/CustomSelector';\nimport CountrySelector from './SignupMiscComponents/CountrySelector';\nimport HorizontalNavigatior from '../../../miscComponents/HorizontalNavigator';\nimport { getISO3FromCountry } from '../../../../assets/countryListISO3';\nimport { usePostHog } from 'posthog-react-native';\nconst SignupSchema = Yup.object().shape({\n    birthPlace: Yup.string().min(1).required('Required'),\n  });\n\n\nexport default function SignupCitizenship({goToNext, goToPrev, userData, setUserData, updateUser} : {goToNext : ()=>void, goToPrev : ()=> void, userData : any, setUserData : any, updateUser : any}){\n    const [selectedCountry, setSelectedCountry] = useState(userData.citizenship)\n    const posthog = usePostHog()\n    const onSubmit = () =>{\n        if (selectedCountry != \"\"){\n            setUserData({...userData, citizenship : selectedCountry})\n            posthog?.capture('Onboarding : Next button pressed on citizenship screen', {\n                country_of_citizenship : getISO3FromCountry(selectedCountry),\n            })\n            updateUser({\n                country_of_citizenship : getISO3FromCountry(selectedCountry),\n                meta : {\n                    profile_start_ts : humanReadableDate(userData.profile_start_ts),\n                    profile_completeness : 0.2,\n                    signup_page_location : -4\n                }\n            },goToNext)\n             \n        }\n    }\n    return(\n        <KeyboardAvoidingView behavior='height' style={{\n            width:Dimensions.get('window').width,\n            height:'100%',\n            justifyContent:'flex-start',\n            alignItems:'flex-start',\n            paddingHorizontal:20\n            }}>\n               \n\n                <Text style={{\n                    width:'100%',\n                    fontFamily:'PlayfairDisplay_700Bold',\n                    fontSize:32,\n                    color:AppConstants.loginHeaderBlue\n\n                }}>\n                    Elphinstone US{'\\n'}Onboarding\n                </Text>\n                <Text\n                style={{\n                    fontFamily:'ArialNova',\n                    fontSize:18,\n                    lineHeight:32,\n                    paddingTop:20\n                }}\n                >\n                Country of Citizenship\n                </Text>\n               <CountrySelector selectedValue={selectedCountry} setValue={setSelectedCountry}/>\n               <HorizontalNavigatior showBackButton nextFunction={onSubmit} backFunction={goToPrev}/>\n        </KeyboardAvoidingView>\n    )\n}","import { Tooltip, TooltipProps } from '@rneui/themed';\nimport React,{useState} from 'react'\nimport {\n    TouchableOpacity,\n    Text,\n    ScrollView,\n    View,\n    Dimensions,\n    FlatList,\n    Platform\n} from 'react-native'\nimport {Feather} from '@expo/vector-icons'\nimport DateTimePickerModal from \"react-native-modal-datetime-picker\";\nimport { AppConstants } from '../../../../../assets/AppConstants';\nimport {DateTimePickerAndroid} from '@react-native-community/datetimepicker';\n\n\n\nexport default function CustomDatePicker({selectedValue, setValue, maximumDate} : {selectedValue : any, setValue : any, maximumDate? :any}){\n    const [open, setOpen] = useState(false)\n\n    const showMode = () => {\n        DateTimePickerAndroid.open({\n          value: selectedValue || new Date(),\n          onChange : ((event, selectedValue) => setValue(selectedValue)),\n          mode: \"date\",\n          is24Hour: true,\n          maximumDate: maximumDate\n        });\n      };\n    return (\n            <TouchableOpacity\n            style={{\n                height:64,\n                width:Dimensions.get('window').width * 0.9,\n                borderWidth:1,\n                borderColor:'#ddd',\n                borderRadius:6,\n                marginTop:10,\n                justifyContent:'space-between',\n                alignItems:'center',\n                padding:10,\n                flexDirection:'row'\n            }}\n            onPress={()=> Platform.OS  === 'ios'  ? setOpen(!open) : showMode()}\n            activeOpacity={1}\n            >\n                <View style={{flexDirection:'row',}}>\n                <Text style={{paddingLeft:10}}>\n                    {selectedValue === '' ? 'e.g., 12/31/2028' : selectedValue.toLocaleDateString()}\n                </Text>\n                </View>\n                <Feather name='calendar' size={20}/>\n\n                {Platform.OS === 'ios' && <DateTimePickerModal\n                    isVisible={open}\n                    mode=\"date\"\n                    onConfirm={(cb) => {setValue(cb); setOpen(!open)}}\n                    onCancel={()=>setOpen(!open)}\n                    display=\"inline\"\n                    accentColor={AppConstants.loginHeaderBlue}\n                    maximumDate={maximumDate}\n                /> \n\n\n            \n            }\n            </TouchableOpacity>\n    )\n}\n","import {\n    View,\n    KeyboardAvoidingView,\n    Text,\n    TouchableOpacity,\n    Dimensions,\n    TextInput,\n    Keyboard,\n    Image,\n    Button\n} from 'react-native'\nimport { AppConstants, humanReadableDate } from '../../../../assets/AppConstants';\nimport { Entypo, Feather } from '@expo/vector-icons'; \nimport {useRef, useState} from 'react'\nimport CountrySelector from './SignupMiscComponents/CountrySelector';\nimport HorizontalNavigatior from '../../../miscComponents/HorizontalNavigator';\nimport DateTimePickerModal from \"react-native-modal-datetime-picker\";\nimport CustomDatePicker from './SignupMiscComponents/CustomDatePicker';\nimport { usePostHog } from 'posthog-react-native';\nfunction getEighteenYearsAgo(date) {\n    const newDate = new Date(date);\n    newDate.setFullYear(newDate.getFullYear() - 18);\n    return newDate;\n  }\n\n  function formatDate(date : Date) {\n    const year = date.getFullYear();\n    const month = String(date.getMonth() + 1).padStart(2, '0');\n    const day = String(date.getDate()).padStart(2, '0');\n    const formattedDate = `${year}-${month}-${day}`;\n    return formattedDate;\n  }\nexport default function SignupDOB({goToNext, goToPrev, userData, setUserData, updateUser} : {goToNext : ()=>void, goToPrev : ()=> void, userData : any, setUserData : any, updateUser : any}){\n    const [date, setDate] = useState(userData.dob);\n    const posthog = usePostHog()\n    const onSubmit = () =>{\n        if (date != \"\"){\n            setUserData({...userData, dob : date})\n            posthog?.capture('Onboarding : Next button pressed on DOB screen', {\n                dob: formatDate(date),\n            })\n            updateUser({\n                dob: formatDate(date),\n                meta : {\n                    profile_start_ts : humanReadableDate(userData.profile_start_ts),\n                    profile_completeness : 0.25,\n                    signup_page_location: -5\n                }\n            }, goToNext)   \n        }\n    }\n    return(\n        <KeyboardAvoidingView behavior='height' style={{\n            width:Dimensions.get('window').width,\n            height:'100%',\n            justifyContent:'flex-start',\n            alignItems:'flex-start',\n            paddingHorizontal:20\n            }}>\n               \n\n                <Text style={{\n                    width:'100%',\n                    fontFamily:'PlayfairDisplay_700Bold',\n                    fontSize:32,\n                    color:AppConstants.loginHeaderBlue\n\n                }}>\n                    Elphinstone US{'\\n'}Onboarding\n                </Text>\n                <Text\n                style={{\n                    fontFamily:'ArialNova',\n                    fontSize:18,\n                    lineHeight:32,\n                    paddingTop:20\n                }}\n                >\n                Date of Birth\n                </Text>\n\n                <CustomDatePicker selectedValue={date} setValue={setDate} maximumDate={getEighteenYearsAgo(new Date())}/>\n\n               <HorizontalNavigatior showBackButton nextFunction={onSubmit} backFunction={goToPrev}/>\n        </KeyboardAvoidingView>\n    )\n}","import {\n    View,\n    KeyboardAvoidingView,\n    Text,\n    TouchableOpacity,\n    Dimensions,\n    TextInput,\n    Keyboard,\n    Image\n} from 'react-native'\nimport { AppConstants, humanReadableDate } from '../../../../assets/AppConstants';\nimport {useRef, useState} from 'react'\nimport CountrySelector from './SignupMiscComponents/CountrySelector';\nimport HorizontalNavigatior from '../../../miscComponents/HorizontalNavigator';\nimport { getISO3FromCountry } from '../../../../assets/countryListISO3';\nimport { usePostHog } from 'posthog-react-native';\n\n\n \nexport default function SignupBirthCountry({goToNext, goToPrev, userData, setUserData, updateUser} : {goToNext : ()=>void, goToPrev : ()=> void, userData : any, setUserData : any, updateUser : any}){\n    const [selectedCountry, setSelectedCountry] = useState(userData.birthCountry)\n    const posthog = usePostHog()\n    const onSubmit = () =>{\n        if (selectedCountry != \"\"){\n            setUserData({...userData, birthCountry : selectedCountry})\n            posthog?.capture('Onboarding : Next button pressed on birth country screen', {\n                country_of_citizenship : getISO3FromCountry(selectedCountry),\n            })\n            updateUser({\n                country_of_birth : getISO3FromCountry(selectedCountry),\n                meta : {\n                    profile_start_ts : humanReadableDate(userData.profile_start_ts),\n                    profile_completeness : 0.30,\n                    signup_page_location : -6\n                }\n            },goToNext)    \n        }\n    }\n    return(\n        <KeyboardAvoidingView behavior='height' style={{\n            width:Dimensions.get('window').width,\n            height:'100%',\n            justifyContent:'flex-start',\n            alignItems:'flex-start',\n            paddingHorizontal:20\n            }}>\n               \n\n                <Text style={{\n                    width:'100%',\n                    fontFamily:'PlayfairDisplay_700Bold',\n                    fontSize:32,\n                    color:AppConstants.loginHeaderBlue\n\n                }}>\n                    Elphinstone US{'\\n'}Onboarding\n                </Text>\n                <Text\n                style={{\n                    fontFamily:'ArialNova',\n                    fontSize:18,\n                    lineHeight:32,\n                    paddingTop:20\n                }}\n                >\n                Country of Birth\n                </Text>\n               <CountrySelector selectedValue={selectedCountry} setValue={setSelectedCountry}/>\n               <HorizontalNavigatior showBackButton nextFunction={onSubmit} backFunction={goToPrev}/>\n        </KeyboardAvoidingView>\n    )\n}","import {\n    View,\n    KeyboardAvoidingView,\n    Text,\n    TouchableOpacity,\n    Dimensions,\n    TextInput,\n    Keyboard,\n    Image,\n    ScrollView\n} from 'react-native'\nimport { AppConstants } from '../../../../assets/AppConstants';\nimport { Entypo, Feather } from '@expo/vector-icons'; \nimport {useEffect, useRef, useState} from 'react'\nimport { GlobalStyles } from '../../../GlobalStyles';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport {AntDesign} from '@expo/vector-icons'\nimport CustomTextInput from './SignupMiscComponents/CustomTextInput';\nimport HorizontalNavigatior from '../../../miscComponents/HorizontalNavigator';\nimport CustomDatePicker from './SignupMiscComponents/CustomDatePicker';\nimport { usePostHog } from 'posthog-react-native';\nconst SignupSchema = Yup.object().shape({\n    idNumber: Yup.string().min(1).required('Required'),\n  });\n\n\nexport default function SignupIDDetails({goToNext, goToPrev, userData, setUserData, updateUser} : {goToNext : ()=>void, goToPrev : ()=> void, userData : any, setUserData : any, updateUser : any}){\n    const numberInputRef = useRef<any>()\n    const [date, setDate] = useState(userData.idExpirationData)\n    const posthog = usePostHog()\n    return(\n        <KeyboardAvoidingView behavior='height' style={{\n            width:Dimensions.get('window').width,\n            height:'100%',\n            justifyContent:'flex-start',\n            alignItems:'flex-start',\n            paddingHorizontal:20\n            }}>\n                <ScrollView style={{width:'100%'}}>\n                    <View onStartShouldSetResponder={()=>true} style={{width:'100%'}}>\n                <View style={{\n                    marginBottom:20\n                }}>\n                    <Image source={require('../../../../assets/images/tree.png')} style={{height:36,width:36}}/>\n                </View>\n\n                <Text style={{\n                    width:'100%',\n                    fontFamily:'PlayfairDisplay_700Bold',\n                    fontSize:32,\n                    color:AppConstants.loginHeaderBlue\n\n                }}>\n                    Elphinstone US{'\\n'}Onboarding\n                </Text>\n                \n                <Formik\n                initialValues={{  idNumber : userData.idNumber}}\n                validationSchema={SignupSchema}\n                onSubmit={values => {\n                    Keyboard.dismiss()\n                    setUserData({...userData, ...values, idExpirationData: date})\n                    posthog?.capture('Onboarding : Next button pressed on ID details screen',{\n                        ...values, idExpirationData: date\n                    })\n                    goToNext()\n                }}\n            >\n                {({ handleChange, handleBlur, handleSubmit, values, errors, touched }) => (\n                    <>\n                \n                <Text\n                style={{\n                    fontFamily:'ArialNova',\n                    fontSize:18,\n                    // lineHeight:32,\n                    paddingTop:20\n                }}\n                >\n                {userData.idType === 'USA_SSN' ? \"Social Security Number\" : \"CNIC Number\"} \n                </Text>\n                <CustomTextInput\n                reference={numberInputRef}\n                touched={touched.idNumber}\n                errors={errors.idNumber}\n                value = {values.idNumber}\n                handleChange={handleChange('idNumber')}\n                handleBlur={handleBlur('idNumber')}\n                placeholder={\"e.g., 388-19-1625\"}\n                keyboardType={\"numeric\"}\n                />\n\n                \n\n                \n            \n                {userData.idType === 'PAK_NIC' &&  <Text\n                style={{\n                    fontFamily:'ArialNova',\n                    fontSize:18,\n                    // lineHeight:32,\n                    paddingTop:20\n                }}\n                >\n                CNIC expiry date \n                </Text>}\n\n                {userData.idType === 'PAK_NIC' && <CustomDatePicker selectedValue={date} setValue={setDate}/>}\n                \n                \n                \n                \n                <HorizontalNavigatior showBackButton nextFunction={handleSubmit} backFunction={goToPrev}/>\n            </>)}\n            </Formik>\n            \n            </View>\n            </ScrollView>\n            \n        </KeyboardAvoidingView>\n    )\n}","import {\n    View,\n    KeyboardAvoidingView,\n    Text,\n    TouchableOpacity,\n    Dimensions,\n    TextInput,\n    Keyboard,\n    Image,\n    ScrollView\n} from 'react-native'\nimport { AppConstants, humanReadableDate } from '../../../../assets/AppConstants';\nimport { Entypo, Feather } from '@expo/vector-icons'; \nimport {useRef, useState} from 'react'\nimport { GlobalStyles } from '../../../GlobalStyles';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport {AntDesign} from '@expo/vector-icons'\nimport CustomTextInput from './SignupMiscComponents/CustomTextInput';\nimport HorizontalNavigatior from '../../../miscComponents/HorizontalNavigator';\nimport CountrySelector from './SignupMiscComponents/CountrySelector';\nimport { getISO3FromCountry } from '../../../../assets/countryListISO3';\nimport { usePostHog } from 'posthog-react-native';\nconst SignupSchema = Yup.object().shape({\n    homeAddress1 : Yup.string().min(1).required('Required'),\n    homeAddress2 : Yup.string(),\n    city : Yup.string().min(1).required('Required'),\n    zipCode : Yup.string(),\n    state : Yup.string().min(1).required('Required'),\n\n  });\n\n\nexport default function SignupAddress({goToNext, goToPrev, userData, setUserData, updateUser} : {goToNext : ()=>void, goToPrev : ()=> void, userData : any, setUserData : any, updateUser : any}){\n    const homeAddress1InputRef = useRef<any>()\n    const homeAddress2InputRef = useRef<any>()\n    const cityInputRef = useRef<any>()\n    const zipInputRef = useRef<any>()\n    const stateInputRef = useRef<any>()\n    const [selectedCountry, setSelectedCountry] = useState(userData.taxResidence)\n    const posthog = usePostHog()\n    return(\n        <KeyboardAvoidingView behavior='height' style={{\n            width:Dimensions.get('window').width,\n            height:'100%',\n            justifyContent:'flex-start',\n            alignItems:'flex-start',\n            paddingHorizontal:20\n            }}>\n                <ScrollView style={{width:'100%'}} showsVerticalScrollIndicator={false}>\n                    <View onStartShouldSetResponder={()=>true} style={{width:'100%'}}>\n                \n\n                <Text style={{\n                    width:'100%',\n                    fontFamily:'PlayfairDisplay_700Bold',\n                    fontSize:32,\n                    color:AppConstants.loginHeaderBlue\n\n                }}>\n                    Elphinstone US{'\\n'}Onboarding\n                </Text>\n                \n                <Formik\n                initialValues={{  \n                    homeAddress1 : userData.homeAddress1,\n                    homeAddress2 : userData.homeAddress2,\n                    city : userData.city,\n                    zipCode : userData.zipCode,\n                    state : userData.state,\n                }}\n                validationSchema={SignupSchema}\n                onSubmit={values => {\n                    // if (selectedCountry === ''){\n                    //     return\n                    // }\n                    Keyboard.dismiss()\n                    setUserData({...userData, ...values, addressCountry : userData.taxResidence})\n                    posthog?.capture('Onboarding : Next button pressed on address screen', {\n                        street_address_1: values.homeAddress1,\n                        street_address_2: values.homeAddress2,\n                        city: values.city,\n                        state: values.state,\n                        postal_code: values.zipCode,\n                        province: values.state,\n                        country: getISO3FromCountry(userData.taxResidence),\n                    })\n                    updateUser({\n                        street_address_1: values.homeAddress1,\n                        street_address_2: values.homeAddress2,\n                        city: values.city,\n                        state: values.state,\n                        postal_code: values.zipCode,\n                        province: values.state,\n                        country: getISO3FromCountry(userData.taxResidence),\n                        meta : {\n                            profile_start_ts : humanReadableDate(userData.profile_start_ts),\n                            profile_completeness : 0.4,\n                            signup_page_location : -7\n                        }\n                    }, goToNext)\n                }}\n                >\n                {({ handleChange, handleBlur, handleSubmit, values, errors, touched }) => (\n                    <>\n                \n                <Text\n                style={{\n                    fontFamily:'ArialNova',\n                    fontSize:12,\n                    // lineHeight:32,\n                    paddingTop:20,\n                    color:'red'\n                }}\n                >\n                Note: Depending on your details you may be asked later on to upload a copy of your bank statement. Make sure the address you enter matches the address on the statement.\n                </Text>\n                <Text\n                style={{\n                    fontFamily:'ArialNova',\n                    fontSize:18,\n                    // lineHeight:32,\n                    paddingTop:20\n                }}\n                >\n                Home address line 1\n                </Text>\n                <CustomTextInput\n                reference={homeAddress1InputRef}\n                touched={touched.homeAddress1}\n                errors={errors.homeAddress1}\n                value = {values.homeAddress1}\n                handleChange={handleChange('homeAddress1')}\n                handleBlur={handleBlur('homeAddress1')}\n                placeholder={\"e.g., House No. 365, Street 16,\"}\n                />\n\n                <Text\n                style={{\n                    fontFamily:'ArialNova',\n                    fontSize:18,\n                    // lineHeight:32,\n                    paddingTop:20\n                }}\n                >\n               Home address line 2\n                </Text>\n                <CustomTextInput\n                reference={homeAddress2InputRef}\n                touched={touched.homeAddress2}\n                errors={errors.homeAddress2}\n                value = {values.homeAddress2}\n                handleChange={handleChange('homeAddress2')}\n                handleBlur={handleBlur('homeAddress2')}\n                placeholder={\"e.g., F-8/3\"}\n                />\n\n                <Text\n                style={{\n                    fontFamily:'ArialNova',\n                    fontSize:18,\n                    // lineHeight:32,\n                    paddingTop:20\n                }}\n                >\n                City\n                </Text>\n                <CustomTextInput\n                reference={cityInputRef}\n                touched={touched.city}\n                errors={errors.city}\n                value = {values.city}\n                handleChange={handleChange('city')}\n                handleBlur={handleBlur('city')}\n                placeholder={\"e.g., Islamabad\"}\n                />\n\n                <Text\n                style={{\n                    fontFamily:'ArialNova',\n                    fontSize:18,\n                    // lineHeight:32,\n                    paddingTop:20\n                }}\n                >\n                Zip/postal code (optional)\n                </Text>\n                <CustomTextInput\n                reference={zipInputRef}\n                touched={touched.zipCode}\n                errors={errors.zipCode}\n                value = {values.zipCode}\n                handleChange={handleChange('zipCode')}\n                handleBlur={handleBlur('zipCode')}\n                placeholder={\"e.g., 41120\"}\n                />\n\n                <Text\n                style={{\n                    fontFamily:'ArialNova',\n                    fontSize:18,\n                    // lineHeight:32,\n                    paddingTop:20\n                }}\n                >\n                Province / State\n                </Text>\n                <CustomTextInput\n                reference={stateInputRef}\n                touched={touched.state}\n                errors={errors.state}\n                value = {values.state}\n                handleChange={handleChange('state')}\n                handleBlur={handleBlur('state')}\n                placeholder={\"e.g., Federal Capital\"}\n                />\n\n                <Text\n                style={{\n                    fontFamily:'ArialNova',\n                    fontSize:18,\n                    // lineHeight:32,\n                    paddingTop:20\n                }}\n                >\n                Country\n                </Text>\n                <CountrySelector selectedValue={userData.taxResidence} setValue={setSelectedCountry} disableChange={true}/>\n                \n                \n                <HorizontalNavigatior showBackButton nextFunction={handleSubmit} backFunction={goToPrev}/>\n            </>)}\n            </Formik>\n            \n            </View>\n            {/* <View style={{height:100}}/> */}\n            </ScrollView>\n            \n        </KeyboardAvoidingView>\n    )\n}","import { Tooltip, TooltipProps } from '@rneui/themed';\nimport React from 'react'\nimport {\n    TouchableOpacity,\n    Text,\n    ScrollView,\n    View,\n    Dimensions\n} from 'react-native'\nimport { Entypo } from '@expo/vector-icons'\n  const ControlledTooltip: React.FC<TooltipProps | any> = (props) => {\n    const [open, setOpen] = React.useState(false);\n    return (\n      <Tooltip\n      skipAndroidStatusBar={false}\n        visible={open}\n        onOpen={() => {\n          setOpen(true);\n        }}\n        onClose={() => {\n          setOpen(false);\n        }}\n        {...props}\n        popover={<ToolTipComponent list ={props.list} setSelectedStatus={(value : string)=>{props.setSelectedStatus(value); setOpen(false)}}/>}\n      />\n    );\n  };\n\n  function ToolTipComponent({setSelectedStatus, list} : {setSelectedStatus : any, list : any[]}) {\n    // const MaritalStatuses = ['Islam', 'Hinduism', 'Christianity','Sikhism','Buddhism','Other']\n\n    const ItemComponent = ({item} : {item : string}) =>{\n        return (\n            <TouchableOpacity onPress={()=>setSelectedStatus(item)} style={{height:60, justifyContent:'center', borderBottomColor: '#DFE0EB', borderBottomWidth:0,padding:10}}>\n                <Text style={{fontFamily:'ArialNova', color:'black'}}>\n                    {item}\n                </Text>\n            </TouchableOpacity>\n        )\n    }\n    return (\n        <ScrollView style={{width:'100%',height:'100%'}} showsVerticalScrollIndicator={false}>\n            <View onStartShouldSetResponder={()=>true}>\n            {list.map((item,index) => <ItemComponent item = {item} key={index}/>)}\n            </View>\n        </ScrollView>\n    )\n}\n\nexport default function CustomSelector({selectedValue, setValue, itemList} : {selectedValue : any, setValue : any, itemList : any[]}){\n    return (\n\n            <ControlledTooltip\n            width={Dimensions.get('window').width * 0.85 }\n            height={itemList.length > 5 ? Dimensions.get('window').height * 0.4 : itemList.length * 60}\n            backgroundColor={'white'}\n            closeOnlyOnBackdropPress={false}\n            setSelectedStatus = {setValue}\n            list = {itemList}\n            containerStyle={{\n                padding:0,\n                // overflow:'hidden',\n                shadowColor: \"#000\",\n                shadowOffset: {\n                    width: 0,\n                    height: 2,\n                },\n                shadowOpacity: 0.06,\n                shadowRadius: 3.84,\n                borderRadius:6,\n                elevation: 5,\n                borderWidth:0.5,\n                borderColor:'#ddd'\n            }}\n            pointerStyle = {{\n                padding:0,\n                // overflow:'hidden',\n                shadowColor: \"#000\",\n                shadowOffset: {\n                    width: 0,\n                    height: 2,\n                },\n                shadowOpacity: 0.06,\n                shadowRadius: 3.84,\n\n                elevation: 5,\n            }}\n            // highlightColor={'#ccc'}\n          >\n            \n\n            <View\n            style={{\n                height:64,\n                width:Dimensions.get('window').width * 0.9,\n                borderWidth:1,\n                borderColor:'#ddd',\n                borderRadius:6,\n                marginTop:10,\n                justifyContent:'space-between',\n                alignItems:'center',\n                padding:10,\n                flexDirection:'row',\n                backgroundColor:'white'\n            }}>\n                <Text>\n                    {selectedValue === '' ? 'Select' : selectedValue}\n                </Text>\n                <Entypo name='chevron-down' size={20} color='#A4B3C4'/>\n            </View>\n            </ControlledTooltip>\n    )\n}","import {\n    View,\n    TextInput,\n    Text,\n    Dimensions\n} from 'react-native'\nimport { GlobalStyles } from '../../../../GlobalStyles'\nimport {AntDesign} from '@expo/vector-icons'\nimport { TouchableWithoutFeedback } from 'react-native-gesture-handler'\nexport default function CustomNumericTextInput({\n    reference,\n    touched,\n    errors,\n    handleChange,\n    handleBlur,\n    value,\n    keyboardType,\n    placeholder,\n    editable,\n    selectTextOnFocus,\n    textContentType,\n    secureTextEntry,\n    onFocus,\n    onLayout,\n    disabled,\n} : {\n    reference : any,\n    touched : any,\n    errors : any,\n    value : any\n    handleChange : any,\n    handleBlur : any,\n    keyboardType? : any,\n    placeholder? : any,\n    editable? : boolean,\n    selectTextOnFocus? : any,\n    textContentType? : any,\n    secureTextEntry? : any,\n    onFocus? : any,\n    onLayout? : any,\n    disabled? : any\n\n}) {\n    return (\n    <TouchableWithoutFeedback onPress={() =>reference.current.focus()}>\n    <View style={{\n        // backgroundColor:'#eee',\n        width: '100%', \n        flexDirection:'row',\n        marginTop:20, \n        // borderWidth:1,\n        borderColor: touched ? (errors ? 'red' : '#19C18F' ) : '#DDDDDD',\n        borderRadius: 6,\n    }}>\n    <TextInput \n    ref={reference}\n    style={{\n        width:Dimensions.get('window').width * 0.9,\n        height: 64,\n        // borderWidth: 1,\n        borderColor: '#DDDDDD',\n        fontSize: 16,\n        padding:10,\n        borderRadius: 6,\n        // width:'80%', \n        // borderWidth:0\n    }}\n    placeholder={placeholder}\n    onChangeText={handleChange}\n    onBlur={handleBlur}\n    value={value}\n    autoCapitalize=\"none\"\n    keyboardType={\"numeric\"}\n    editable={editable} \n    selectTextOnFocus={selectTextOnFocus}\n    textContentType={textContentType}\n    secureTextEntry={secureTextEntry}\n    onFocus={onFocus}\n    />\n    <View style={{\n        height: 64,\n        width:'20%',\n        alignItems:'center',\n        justifyContent : 'center'\n    }}>\n        {(touched) ? \n        (errors ? \n            <AntDesign name='close' size={24} color={'red'}/> :\n            <AntDesign name='check' size={24} color={'#19C18F'}/> \n        ) :\n       <></>\n    }\n    </View>\n    </View>\n    <View style={{\n        // backgroundColor:'#eee',\n        position:'absolute',\n        width: '100%', \n        flexDirection:'row',\n        marginTop:20, \n        borderWidth:1,\n        borderColor: touched ? (errors ? 'red' : '#19C18F' ) : '#DDDDDD',\n        borderRadius: 6,\n        height: 64,\n        backgroundColor:'#fff',\n        // paddingLeft:10,\n        alignItems:'center',\n        justifyContent:'space-between'\n    }}>\n        <View style={{width:'20%', backgroundColor:'#eee', alignItems:'center',justifyContent:'center', height:'100%', borderTopStartRadius:6, borderBottomStartRadius:6}}>\n            <Text>\n                USD\n            </Text>\n        </View>\n        <View style={{flex:1, paddingHorizontal:10}}>\n        <Text style={{fontSize:16}} numberOfLines={1} adjustsFontSizeToFit>\n            {value &&  parseFloat(value).toLocaleString(undefined,{maximumFractionDigits:10})}\n        </Text>\n        </View>\n        <View style={{\n        height: 64,\n        width:'20%',\n        alignItems:'center',\n        justifyContent : 'center',\n        // backgroundColor:'#eee'\n    }}>\n        \n        {(touched) ? \n        (errors ? \n            <AntDesign name='close' size={24} color={'red'}/> :\n            <AntDesign name='check' size={24} color={'#19C18F'}/> \n        ) :\n       <></>\n    }\n    </View>\n    </View>\n    </TouchableWithoutFeedback>\n    )\n}","import {\n    View,\n    KeyboardAvoidingView,\n    Text,\n    TouchableOpacity,\n    Dimensions,\n    TextInput,\n    Keyboard,\n    Image,\n    ScrollView\n} from 'react-native'\nimport { AppConstants, humanReadableDate } from '../../../../assets/AppConstants';\nimport { Entypo, Feather } from '@expo/vector-icons'; \nimport {useRef, useState} from 'react'\nimport { GlobalStyles } from '../../../GlobalStyles';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport {AntDesign} from '@expo/vector-icons'\nimport CustomTextInput from './SignupMiscComponents/CustomTextInput';\nimport HorizontalNavigatior from '../../../miscComponents/HorizontalNavigator';\nimport CustomSelector from './SignupMiscComponents/CustomSelector';\nimport CustomNumericTextInput from './SignupMiscComponents/CustomNumericTextInput';\nimport { usePostHog } from 'posthog-react-native';\nconst SignupSchema = Yup.object().shape({\n    annualHouseholdIncome : Yup.string().required().matches(/[0-9]/),\n    investibleAssets : Yup.string().matches(/[0-9]/).required()\n\n  });\n  const fund_source_map = {\n    \"Salary\" : 'employment_income',\n    'Business / self employed' : \"business_income\",\n    \"Spouse / parents\" : \"family\",\n    'Inheritance' :  'inheritance',\n    'Stock / investments' : 'investments',\n    \"Savings\" : \"savings\"\n} \n\nexport default function SignupIncomeDetails({goToNext, goToPrev, userData, setUserData, updateUser} : {goToNext : ()=>void, goToPrev : ()=> void, userData : any, setUserData : any, updateUser : any}){\n    const annualIncomeRef = useRef<any>()\n    const investibleAssetsRef = useRef<any>()\n    const [selectedFundSource, setSelectedFundSource] = useState(userData.sourceOfFunds)\n    const [selectedStatus, setSelectedStatus] = useState<any>(userData.employmentStatus || \"Employed\")\n    const posthog = usePostHog()\n    return(\n        <KeyboardAvoidingView behavior='height' style={{\n            width:Dimensions.get('window').width,\n            height:'100%',\n            justifyContent:'flex-start',\n            alignItems:'flex-start',\n            paddingHorizontal:20\n            }}>\n                <ScrollView style={{width:'100%'}} showsVerticalScrollIndicator={false}>\n                    <View onStartShouldSetResponder={()=>true} style={{width:'100%'}}>\n                \n\n                <Text style={{\n                    width:'100%',\n                    fontFamily:'PlayfairDisplay_700Bold',\n                    fontSize:32,\n                    color:AppConstants.loginHeaderBlue\n\n                }}>\n                    Elphinstone US{'\\n'}Onboarding\n                </Text>\n                \n                <Formik\n                initialValues={{  \n                    annualHouseholdIncome : userData.annualHouseholdIncome,\n                    investibleAssets : userData.investibleAssets\n                \n                }}\n                validationSchema={SignupSchema}\n                onSubmit={values => {\n                    if (selectedFundSource === ''){\n                        return\n                    }\n                    console.log(values)\n                    Keyboard.dismiss()\n                    setUserData({...userData, ...values, sourceOfFunds : selectedFundSource})\n                    posthog?.capture('Onboarding : Next button pressed on Income details screen', {\n                        funding_source : fund_source_map[selectedFundSource],\n                        annual_income_max : values.annualHouseholdIncome,\n                        liquid_net_worth_max : values.investibleAssets,\n                        employment_status: selectedStatus === 'Freelancer' ? 'EMPLOYED' : selectedStatus.toUpperCase(),\n                    })\n                    updateUser({\n                        funding_source : fund_source_map[selectedFundSource],\n                        annual_income_max : values.annualHouseholdIncome,\n                        liquid_net_worth_max : values.investibleAssets,\n                        employment_status: selectedStatus === 'Freelancer' ? 'EMPLOYED' : selectedStatus.toUpperCase(),\n                        meta : {\n                            profile_start_ts : humanReadableDate(userData.profile_start_ts),\n                            profile_completeness : 0.5,\n                            signup_page_location : -8\n                        }\n                    },goToNext)\n                }}\n            >\n                {({ handleChange, handleBlur, handleSubmit, values, errors, touched }) => (\n                    <>\n                \n                <Text\n                style={{\n                    fontFamily:'ArialNova',\n                    fontSize:18,\n                    // lineHeight:32,\n                    paddingTop:20\n                }}\n                >\n                Annual household income\n                </Text>\n                <CustomNumericTextInput\n                reference={annualIncomeRef}\n                touched={touched.annualHouseholdIncome}\n                errors={errors.annualHouseholdIncome}\n                value = {values.annualHouseholdIncome}\n                handleChange={handleChange('annualHouseholdIncome')}\n                handleBlur={handleBlur('annualHouseholdIncome')}\n                placeholder={\"120,000\"}\n                />\n\n                <Text\n                style={{\n                    fontFamily:'ArialNova',\n                    fontSize:18,\n                    // lineHeight:32,\n                    paddingTop:20\n                }}\n                >\n               Investible assets\n                </Text>\n                <CustomNumericTextInput\n                reference={investibleAssetsRef}\n                touched={touched.investibleAssets}\n                errors={errors.investibleAssets}\n                value = {values.investibleAssets}\n                handleChange={handleChange('investibleAssets')}\n                handleBlur={handleBlur('investibleAssets')}\n                placeholder={\"e.g., Rs. 800,000\"}\n                />\n\n                <Text\n                style={{\n                    fontFamily:'ArialNova',\n                    fontSize:18,\n                    // lineHeight:32,\n                    paddingTop:20\n                }}\n                >\n                Source of funds\n                </Text>\n                <CustomSelector selectedValue={selectedFundSource} setValue = {setSelectedFundSource} itemList={['Salary', 'Business / self employed','Spouse / parents','Inheritance','Stock / investments', \"Savings\"]}/>\n                \n                <Text\n                style={{\n                    fontFamily:'ArialNova',\n                    fontSize:18,\n                    // lineHeight:32,\n                    paddingTop:20\n                }}\n                >\n                Employment status\n                </Text>\n                <CustomSelector selectedValue={selectedStatus} setValue={setSelectedStatus} itemList={[\"Employed\", \"Unemployed\",\"Retired\",\"Student\",'Freelancer']}/>\n                \n                \n                <HorizontalNavigatior showBackButton nextFunction={handleSubmit} backFunction={goToPrev}/>\n            </>)}\n            </Formik>\n            \n            </View>\n            <View style={{height:100}}/>\n            </ScrollView>\n            \n        </KeyboardAvoidingView>\n    )\n}","import {\n    View,\n    KeyboardAvoidingView,\n    Text,\n    TouchableOpacity,\n    Dimensions,\n    TextInput,\n    Keyboard,\n    Image,\n    ScrollView\n} from 'react-native'\nimport { AppConstants } from '../../../../assets/AppConstants';\nimport { Entypo, Feather } from '@expo/vector-icons'; \nimport {useRef, useState} from 'react'\nimport { GlobalStyles } from '../../../GlobalStyles';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport {AntDesign} from '@expo/vector-icons'\nimport CustomSelector from './SignupMiscComponents/CustomSelector';\nimport CountrySelector from './SignupMiscComponents/CountrySelector';\nimport HorizontalNavigatior from '../../../miscComponents/HorizontalNavigator';\nimport RiskToleranceSelector from './SignupMiscComponents/RiskToleranceSelector';\nimport { usePostHog } from 'posthog-react-native';\nconst SignupSchema = Yup.object().shape({\n    birthPlace: Yup.string().min(1).required('Required'),\n  });\n\n\nexport default function SignupAffiliationQs({goToNext, goToPrev, userData, setUserData} : {goToNext : ()=>void, goToPrev : ()=> void, userData : any, setUserData : any}){\n    const [isUSBrokerAffiliated, setUSBrokerAffiliated] = useState(userData.isUSBrokerAffiliated)\n    const [isExecutiveOrShareholderPC, setExecutiveOrShareholderPC] = useState(userData.isExecutiveOrShareholderPC)\n    const [isSeniorPoliticalFigure, setSeniorPoliticalFigure] = useState(userData.isSeniorPoliticalFigure)\n    const [isRelatedToPoliticalFigure, setIsRelatedToPoliticalFigure] = useState(userData.isRelatedToPoliticalFigure)\n    const [noneApply, setNoneApply] = useState(false)\n    const posthog = usePostHog()\n    const onSubmit = () =>{\n        posthog?.capture('Onboarding : Next button pressed on Affiliation Questions screen',{\n            isUSBrokerAffiliated : isUSBrokerAffiliated,\n                isExecutiveOrShareholderPC : isExecutiveOrShareholderPC,\n                isSeniorPoliticalFigure : isSeniorPoliticalFigure,\n                isRelatedToPoliticalFigure : isRelatedToPoliticalFigure\n        })\n            setUserData({\n                ...userData,\n                isUSBrokerAffiliated : isUSBrokerAffiliated,\n                isExecutiveOrShareholderPC : isExecutiveOrShareholderPC,\n                isSeniorPoliticalFigure : isSeniorPoliticalFigure,\n                isRelatedToPoliticalFigure : isRelatedToPoliticalFigure\n            })\n            goToNext()    \n    }\n    return(\n        <KeyboardAvoidingView behavior='height' style={{\n            width:Dimensions.get('window').width,\n            height:'100%',\n            justifyContent:'flex-start',\n            alignItems:'flex-start',\n            paddingHorizontal:20\n            }}>\n                <ScrollView style={{width:'100%'}} showsVerticalScrollIndicator={false}>\n                    <View onStartShouldSetResponder={()=>true}>\n                <View style={{\n                    marginBottom:20\n                }}>\n                    <Image source={require('../../../../assets/images/tree.png')} style={{height:36,width:36}}/>\n                </View>\n\n                <Text style={{\n                    width:'100%',\n                    fontFamily:'PlayfairDisplay_700Bold',\n                    fontSize:32,\n                    color:AppConstants.loginHeaderBlue\n\n                }}>\n                    Elphinstone US{'\\n'}Onboarding\n                </Text>\n                <Text\n                style={{\n                    fontFamily:'ArialNova',\n                    fontSize:18,\n                    lineHeight:32,\n                    paddingTop:20\n                }}\n                >\n                Do any of the following apply to you or a member of your immediate family?\n                </Text>\n\n                <Text\n                style={{\n                    // fontFamily:'ArialNova',z\n                    fontSize:18,\n                    lineHeight:32,\n                    paddingTop:20,\n                    fontStyle:'italic',\n                    // fontWeight:'200'\n                }}\n                >\n                Immediate family means: parent, sibling, child, spouse, grandparent, grandchild.\n                </Text>\n\n                <View style={{marginTop: 20, flexDirection: 'row', width:'100%', paddingHorizontal:10}}>\n                <TouchableOpacity activeOpacity={1} \n                style={{\n                    height:32, \n                    width: 32, \n                    borderRadius:16, \n                    backgroundColor: isUSBrokerAffiliated === true ? '#19C18F' : 'transparent',\n                    borderWidth:1,\n                    borderColor: isUSBrokerAffiliated === true ? '#19C18F' : '#ddd',\n                    alignItems:'center',\n                    justifyContent:'center',\n                    marginRight:20\n                    }} onPress = {()=>setUSBrokerAffiliated(!isUSBrokerAffiliated)}>\n                <AntDesign name='check' color={isUSBrokerAffiliated === true ? 'white' : 'transparent'}/>\n                </TouchableOpacity>\n\n                <Text>\n                Affiliated or work with a US registered {'\\n'}broker-dealer or FINRA.\n                </Text>\n                </View>\n\n                <View style={{marginTop: 20, flexDirection: 'row', width:'100%', paddingHorizontal:10}}>\n                <TouchableOpacity activeOpacity={1} \n                style={{\n                    height:32, \n                    width: 32, \n                    borderRadius:16, \n                    backgroundColor: isExecutiveOrShareholderPC === true ? '#19C18F' : 'transparent',\n                    borderWidth:1,\n                    borderColor: isExecutiveOrShareholderPC === true ? '#19C18F' : '#ddd',\n                    alignItems:'center',\n                    justifyContent:'center',\n                    marginRight:20\n                    }} onPress = {()=>setExecutiveOrShareholderPC(!isExecutiveOrShareholderPC)}>\n                <AntDesign name='check' color={isExecutiveOrShareholderPC === true ? 'white' : 'transparent'}/>\n                </TouchableOpacity>\n\n                <Text>\n                Senior executive at or a 10% or greater {'\\n'}shareholder of a publicly traded company.\n                </Text>\n                </View>\n\n                <View style={{marginTop: 20, flexDirection: 'row', width:'100%', paddingHorizontal:10}}>\n                <TouchableOpacity activeOpacity={1} \n                style={{\n                    height:32, \n                    width: 32, \n                    borderRadius:16, \n                    backgroundColor: isSeniorPoliticalFigure === true ? '#19C18F' : 'transparent',\n                    borderWidth:1,\n                    borderColor: isSeniorPoliticalFigure === true ? '#19C18F' : '#ddd',\n                    alignItems:'center',\n                    justifyContent:'center',\n                    marginRight:20\n                    }} onPress = {()=>setSeniorPoliticalFigure(!isSeniorPoliticalFigure)}>\n                <AntDesign name='check' color={isSeniorPoliticalFigure === true ? 'white' : 'transparent'}/>\n                </TouchableOpacity>\n\n                <Text>\n                I am a senior political figure.\n                </Text>\n                </View>\n\n                <View style={{marginTop: 20, flexDirection: 'row', width:'100%', paddingHorizontal:10}}>\n                <TouchableOpacity activeOpacity={1} \n                style={{\n                    height:32, \n                    width: 32, \n                    borderRadius:16, \n                    backgroundColor: isRelatedToPoliticalFigure === true ? '#19C18F' : 'transparent',\n                    borderWidth:1,\n                    borderColor: isRelatedToPoliticalFigure === true ? '#19C18F' : '#ddd',\n                    alignItems:'center',\n                    justifyContent:'center',\n                    marginRight:20\n                    }} onPress = {()=>setIsRelatedToPoliticalFigure(!isRelatedToPoliticalFigure)}>\n                <AntDesign name='check' color={isRelatedToPoliticalFigure === true ? 'white' : 'transparent'}/>\n                </TouchableOpacity>\n\n                <Text>\n                I am a family member or relative of {'\\n'} a senior political figure.\n                </Text>\n                </View>\n\n                <View style={{marginTop: 20, flexDirection: 'row', width:'100%', paddingHorizontal:10}}>\n                <TouchableOpacity activeOpacity={1} \n                style={{\n                    height:32, \n                    width: 32, \n                    borderRadius:16, \n                    backgroundColor: !(isRelatedToPoliticalFigure || isSeniorPoliticalFigure || isExecutiveOrShareholderPC || isUSBrokerAffiliated) === true ? '#19C18F' : 'transparent',\n                    borderWidth:1,\n                    borderColor: !(isRelatedToPoliticalFigure || isSeniorPoliticalFigure || isExecutiveOrShareholderPC || isUSBrokerAffiliated) === true ? '#19C18F' : '#ddd',\n                    alignItems:'center',\n                    justifyContent:'center',\n                    marginRight:20\n                    }} onPress = {()=>  {\n                        setIsRelatedToPoliticalFigure(false)\n                        setSeniorPoliticalFigure(false)\n                        setExecutiveOrShareholderPC(false)\n                        setUSBrokerAffiliated(false)\n\n                    }}>\n                <AntDesign name='check' color={!(isRelatedToPoliticalFigure || isSeniorPoliticalFigure || isExecutiveOrShareholderPC || isUSBrokerAffiliated) === true ? 'white' : 'transparent'}/>\n                </TouchableOpacity>\n\n                <Text>\n                None of the above apply to me or my family.\n                </Text>\n                </View>\n\n               \n               <HorizontalNavigatior showBackButton nextFunction={onSubmit} backFunction={goToPrev}/>\n               </View>\n               </ScrollView>\n        </KeyboardAvoidingView>\n    )\n}","import {\n    View,\n    KeyboardAvoidingView,\n    Text,\n    TouchableOpacity,\n    Dimensions,\n    TextInput,\n    Keyboard\n} from 'react-native'\nimport React,{useState} from 'react'\nimport { AntDesign } from '@expo/vector-icons'\nexport function BooleanSelector({value, setValue} : {value : boolean | null, setValue : (value : boolean)=>void}){\n    return(\n        <View style={{\n            width: '60%', \n            flexDirection:'row',\n            marginTop:10, \n            borderRadius: 6,\n            // height:64,\n            marginLeft:20,\n            justifyContent:'flex-start',\n        }}>\n        <View style={{flexDirection:'row', alignItems:'center', width:'30%', justifyContent:'space-around', marginRight:50}}>\n        <TouchableOpacity activeOpacity={1} \n        style={{\n            height:32, \n            width: 32, \n            borderRadius:16, \n            backgroundColor: value === true ? '#19C18F' : 'transparent',\n            borderWidth:1,\n            borderColor: value === true ? '#19C18F' : '#ddd',\n            alignItems:'center',\n            justifyContent:'center',\n            marginRight:20\n            }} onPress = {()=>setValue(true)}>\n        <AntDesign name='check' color={value === true ? 'white' : 'transparent'}/>\n        </TouchableOpacity>\n        <Text>\n            Yes\n        </Text>\n        </View>\n\n\n        <View style={{flexDirection:'row', alignItems:'center', width:'30%', justifyContent:'space-around'}}>\n        <TouchableOpacity activeOpacity={1} \n        style={{\n            height:32, \n            width: 32, \n            borderRadius:16, \n            backgroundColor: value === false ? '#19C18F' : 'transparent',\n            borderWidth:1,\n            borderColor: value === false ? '#19C18F' : '#ddd',\n            alignItems:'center',\n            justifyContent:'center',\n            }} onPress = {()=>setValue(false)}>\n        <AntDesign name='check' color={value === false ? 'white' : \"transparent\"}/>\n        </TouchableOpacity>\n        <Text>\n            No\n        </Text>\n        </View>\n\n        </View>\n    )\n}","import {\n    View,\n    KeyboardAvoidingView,\n    Text,\n    TouchableOpacity,\n    Dimensions,\n    TextInput,\n    Keyboard,\n    Image\n} from 'react-native'\nimport { AppConstants } from '../../../../assets/AppConstants';\nimport { Entypo, Feather } from '@expo/vector-icons'; \nimport {useRef, useState} from 'react'\nimport { GlobalStyles } from '../../../GlobalStyles';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport {AntDesign} from '@expo/vector-icons'\nimport CustomSelector from './SignupMiscComponents/CustomSelector';\nimport CountrySelector from './SignupMiscComponents/CountrySelector';\nimport HorizontalNavigatior from '../../../miscComponents/HorizontalNavigator';\nimport RiskToleranceSelector from './SignupMiscComponents/RiskToleranceSelector';\nimport { BooleanSelector } from '../../../miscComponents/BooleanSelector';\nimport { usePostHog } from 'posthog-react-native';\nconst SignupSchema = Yup.object().shape({\n    birthPlace: Yup.string().min(1).required('Required'),\n  });\n\n\n\nexport default function SignupPEPQuestion({goToNext, goToPrev, userData, setUserData} : {goToNext : ()=>void, goToPrev : ()=> void, userData : any, setUserData : any}){\n    const [selectedRiskTolerance, setSelectedRiskTolerance] = useState(userData.riskTolerance)\n    const [isPEP, setPEP] = useState(userData.isPEP)\n    const posthog = usePostHog()\n    const onSubmit = () =>{\n        if (isPEP === null){\n            return\n        }\n        posthog?.capture('Onboarding : Next button pressed on isPEP screen',{\n            isPEP : isPEP\n        })\n        setUserData({...userData, isPEP : isPEP})\n        goToNext()    \n    }\n    return(\n        <KeyboardAvoidingView behavior='height' style={{\n            width:Dimensions.get('window').width,\n            height:'100%',\n            justifyContent:'flex-start',\n            alignItems:'flex-start',\n            paddingHorizontal:20\n            }}>\n                <View style={{\n                    marginBottom:20\n                }}>\n                    <Image source={require('../../../../assets/images/tree.png')} style={{height:36,width:36}}/>\n                </View>\n\n                <Text style={{\n                    width:'100%',\n                    fontFamily:'PlayfairDisplay_700Bold',\n                    fontSize:32,\n                    color:AppConstants.loginHeaderBlue\n\n                }}>\n                    Elphinstone US{'\\n'}Onboarding\n                </Text>\n                <Text\n                style={{\n                    fontFamily:'ArialNova',\n                    fontSize:18,\n                    lineHeight:32,\n                    paddingTop:20\n                }}\n                >\n                Are you, or any direct relatives (parents, children, spouse), a political exposed person?\n                </Text>\n               <BooleanSelector value={isPEP} setValue={setPEP}/>\n               <Text style={{fontFamily:'ArialNova', color:'#8C949D', fontSize:11, marginTop:30}}>\n               A politically exposed person is one who is a head of state, head of government, senior government official, senior political party official, senior judicial official, senior military official, senior executive of a state-owned company, senior executive of an international organisation.\n               </Text>\n\n               \n               <HorizontalNavigatior showBackButton nextFunction={onSubmit} backFunction={goToPrev}/>\n        </KeyboardAvoidingView>\n    )\n}","import {\n    View,\n    KeyboardAvoidingView,\n    Text,\n    TouchableOpacity,\n    Dimensions,\n    TextInput,\n    Keyboard,\n    Image,\n    ScrollView\n} from 'react-native'\nimport { AppConstants } from '../../../../assets/AppConstants';\nimport { Entypo, Feather } from '@expo/vector-icons'; \nimport {useRef, useState} from 'react'\nimport { GlobalStyles } from '../../../GlobalStyles';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport {AntDesign} from '@expo/vector-icons'\nimport CustomTextInput from './SignupMiscComponents/CustomTextInput';\nimport HorizontalNavigatior from '../../../miscComponents/HorizontalNavigator';\nimport CountrySelector from './SignupMiscComponents/CountrySelector';\nimport { usePostHog } from 'posthog-react-native';\n\n\n\nexport default function SignupAffiliationDetails({goToNext, goToPrev, userData, setUserData} : {goToNext : ()=>void, goToPrev : ()=> void, userData : any, setUserData : any}){\n\n    const SignupSchema = Yup.object().shape({\n        brokerRegulatorName : userData.isUSBrokerAffiliated ? Yup.string().required() : Yup.string(),\n        brokerRegulatorAddress : userData.isUSBrokerAffiliated ? Yup.string().required() : Yup.string(),\n        brokerRegulatorEmail : userData.isUSBrokerAffiliated ? Yup.string().required() : Yup.string(),\n        publicCompanyName : userData.isExecutiveOrShareholderPC ? Yup.string().required() : Yup.string(),\n        publicCompanyAddress : userData.isExecutiveOrShareholderPC ? Yup.string().required() : Yup.string(),\n        publicCompanyCity : userData.isExecutiveOrShareholderPC ? Yup.string().required() : Yup.string(),\n        publicCompanyState : userData.isExecutiveOrShareholderPC ? Yup.string().required() : Yup.string(),\n        publicCompanyEmail :userData.isExecutiveOrShareholderPC ? Yup.string().required() : Yup.string(),\n        publicCompanyExchange: userData.isExecutiveOrShareholderPC ? Yup.string().required() : Yup.string(),\n        publicCompanyTicker: userData.isExecutiveOrShareholderPC ? Yup.string().required() : Yup.string(),\n    \n      });\n\n    const brokerRegulatorNameInputRef = useRef<any>()\n    const brokerRegulatorAddressInputRef = useRef<any>()\n    const brokerRegulatorEmailInputRef = useRef<any>()\n    const publicCompanyNameInputRef = useRef<any>()\n    const publicCompanyAddressInputRef = useRef<any>()\n    const publicCompanyCityInputRef = useRef<any>()\n    const publicCompanyStateInputRef = useRef<any>()\n    const publicCompanyEmailInputRef = useRef<any>()\n    const publicCompanyExchangeInputRef = useRef<any>()\n    const publicCompanyTickerInputRef = useRef<any>()\n    const posthog = usePostHog()\n    const [publicCompanyCountry, setPublicCompanyCountry] = useState<any>(\"\")\n\n    return(\n        <KeyboardAvoidingView behavior='height' style={{\n            width:Dimensions.get('window').width,\n            height:'100%',\n            justifyContent:'flex-start',\n            alignItems:'flex-start',\n            paddingHorizontal:20,\n            }}>\n                <ScrollView style={{width:'100%'}} showsVerticalScrollIndicator={false}>\n                    <View onStartShouldSetResponder={()=>true} style={{width:'100%',}}>\n                <View style={{\n                    marginBottom:20\n                }}>\n                    <Image source={require('../../../../assets/images/tree.png')} style={{height:36,width:36}}/>\n                </View>\n\n                <Text style={{\n                    width:'100%',\n                    fontFamily:'PlayfairDisplay_700Bold',\n                    fontSize:32,\n                    color:AppConstants.loginHeaderBlue\n\n                }}>\n                    Elphinstone US{'\\n'}Onboarding\n                </Text>\n                \n                <Formik\n                initialValues={{  \n                    brokerRegulatorName : userData.brokerRegulatorName,\n                    brokerRegulatorAddress : userData.brokerRegulatorAddress,\n                    brokerRegulatorEmail : userData.brokerRegulatorEmail,\n                    publicCompanyName : userData.publicCompanyName,\n                    publicCompanyAddress : userData.publicCompanyAddress,\n                    publicCompanyCity : userData.publicCompanyCity,\n                    publicCompanyState : userData.publicCompanyState,\n                    publicCompanyCountry : userData.publicCompanyCountry,\n                    publicCompanyEmail : userData.publicCompanyEmail,\n                    publicCompanyExchange: userData.publicCompanyExchange,\n                    publicCompanyTicker: userData.publicCompanyTicker\n                }}\n                validationSchema={SignupSchema}\n                \n                onSubmit={values => {\n                    posthog?.capture('Onboarding : Next button pressed on Affiliation Details screen',{\n                        ...values, publicCompanyCountry : publicCompanyCountry\n                    })\n                    Keyboard.dismiss()\n                    setUserData({...userData, ...values, publicCompanyCountry : publicCompanyCountry})\n                    goToNext()\n                }}\n                >\n                {({ handleChange, handleBlur, handleSubmit, values, errors, touched }) => (\n                    <>\n                \n                {userData.isUSBrokerAffiliated && <>\n                <Text\n                style={{\n                    fontFamily:'ArialNova',\n                    fontSize:18,\n                    // lineHeight:32,\n                    paddingTop:20\n                }}\n                >\n                Name of US registered broker-dealer/regulatory body\n                </Text>\n                <CustomTextInput\n                reference={brokerRegulatorNameInputRef}\n                touched={touched.brokerRegulatorName}\n                errors={errors.brokerRegulatorName}\n                value = {values.brokerRegulatorName}\n                handleChange={handleChange('brokerRegulatorName')}\n                handleBlur={handleBlur('brokerRegulatorName')}\n                placeholder={\"e.g., Prisma Investment Brokers LLC\"}\n                />\n\n                <Text\n                style={{\n                    fontFamily:'ArialNova',\n                    fontSize:18,\n                    // lineHeight:32,\n                    paddingTop:20\n                }}\n                >\n              Address of company\n                </Text>\n                <CustomTextInput\n                reference={brokerRegulatorAddressInputRef}\n                touched={touched.brokerRegulatorAddress}\n                errors={errors.brokerRegulatorAddress}\n                value = {values.brokerRegulatorAddress}\n                handleChange={handleChange('brokerRegulatorAddress')}\n                handleBlur={handleBlur('brokerRegulatorAddress')}\n                placeholder={\"e.g., 403, Suite 558, Chrysler Building, Bronx, NY\"}\n                />\n\n                <Text\n                style={{\n                    fontFamily:'ArialNova',\n                    fontSize:18,\n                    // lineHeight:32,\n                    paddingTop:20\n                }}\n                >\n               E-mail address of compliance person\n                </Text>\n                <CustomTextInput\n                reference={brokerRegulatorEmailInputRef}\n                touched={touched.brokerRegulatorEmail}\n                errors={errors.brokerRegulatorEmail}\n                value = {values.brokerRegulatorEmail}\n                handleChange={handleChange('brokerRegulatorEmail')}\n                handleBlur={handleBlur('brokerRegulatorEmail')}\n                placeholder={\"email\"}\n                />\n                </>\n                }\n                { (userData.isExecutiveOrShareholderPC && userData.isUSBrokerAffiliated) && <View style={{width:'80%', justifyContent:'space-around', alignItems:'center',alignSelf:'center', flexDirection:'row', marginVertical:30}}>\n                    <View style={{height:1, width : '25%', backgroundColor:'#D1D5DB'}}/>\n                    <Image source={require('../../../../assets/images/tree.png')} style={{height:36,width:36}}/>\n                    <View style={{height:1, width : '25%', backgroundColor:'#D1D5DB'}}/>\n                </View>}\n\n\n                {userData.isExecutiveOrShareholderPC && <>\n                <Text\n                style={{\n                    fontFamily:'ArialNova',\n                    fontSize:18,\n                    // lineHeight:32,\n                    paddingTop:20\n                }}\n                >\n                Name of public company\n                </Text>\n                <CustomTextInput\n                reference={publicCompanyNameInputRef}\n                touched={touched.publicCompanyName}\n                errors={errors.publicCompanyName}\n                value = {values.publicCompanyName}\n                handleChange={handleChange('publicCompanyName')}\n                handleBlur={handleBlur('publicCompanyName')}\n                placeholder={\"e.g., lorem ipsum\"}\n                />\n\n                <Text\n                style={{\n                    fontFamily:'ArialNova',\n                    fontSize:18,\n                    // lineHeight:32,\n                    paddingTop:20\n                }}\n                >\n              Address of company\n                </Text>\n                <CustomTextInput\n                reference={publicCompanyAddressInputRef}\n                touched={touched.publicCompanyAddress}\n                errors={errors.publicCompanyAddress}\n                value = {values.publicCompanyAddress}\n                handleChange={handleChange('publicCompanyAddress')}\n                handleBlur={handleBlur('publicCompanyAddress')}\n                placeholder={\"e.g., 403, Suite 558, Chrysler Building, Bronx, NY\"}\n                />\n\n                <Text\n                style={{\n                    fontFamily:'ArialNova',\n                    fontSize:18,\n                    // lineHeight:32,\n                    paddingTop:20\n                }}\n                >\n              City\n                </Text>\n                <CustomTextInput\n                reference={publicCompanyCityInputRef}\n                touched={touched.publicCompanyCity}\n                errors={errors.publicCompanyCity}\n                value = {values.publicCompanyCity}\n                handleChange={handleChange('publicCompanyCity')}\n                handleBlur={handleBlur('publicCompanyCity')}\n                placeholder={\"New York\"}\n                />\n\n                <Text\n                style={{\n                    fontFamily:'ArialNova',\n                    fontSize:18,\n                    // lineHeight:32,\n                    paddingTop:20\n                }}\n                >\n              State\n                </Text>\n                <CustomTextInput\n                reference={publicCompanyStateInputRef}\n                touched={touched.publicCompanyState}\n                errors={errors.publicCompanyState}\n                value = {values.publicCompanyState}\n                handleChange={handleChange('publicCompanyState')}\n                handleBlur={handleBlur('publicCompanyState')}\n                placeholder={\"New York\"}\n                />\n\n<Text\n                style={{\n                    fontFamily:'ArialNova',\n                    fontSize:18,\n                    // lineHeight:32,\n                    paddingTop:20\n                }}\n                >\n              Country\n                </Text>\n                <CountrySelector selectedValue={publicCompanyCountry} setValue={setPublicCompanyCountry}/>\n\n                <Text\n                style={{\n                    fontFamily:'ArialNova',\n                    fontSize:18,\n                    // lineHeight:32,\n                    paddingTop:20\n                }}\n                >\n               E-mail address of compliance person\n                </Text>\n                <CustomTextInput\n                reference={publicCompanyEmailInputRef}\n                touched={touched.publicCompanyEmail}\n                errors={errors.publicCompanyEmail}\n                value = {values.publicCompanyEmail}\n                handleChange={handleChange('publicCompanyEmail')}\n                handleBlur={handleBlur('publicCompanyEmail')}\n                placeholder={\"email\"}\n                />\n\n                <Text\n                style={{\n                    fontFamily:'ArialNova',\n                    fontSize:18,\n                    // lineHeight:32,\n                    paddingTop:20\n                }}\n                >\n               Exchange on which company is listed\n                </Text>\n\n                <CustomTextInput\n                reference={publicCompanyExchangeInputRef}\n                touched={touched.publicCompanyExchange}\n                errors={errors.publicCompanyExchange}\n                value = {values.publicCompanyExchange}\n                handleChange={handleChange('publicCompanyExchange')}\n                handleBlur={handleBlur('publicCompanyExchange')}\n                placeholder={\"e.g., New York Stock Exchange\"}\n                />\n\n                <Text\n                style={{\n                    fontFamily:'ArialNova',\n                    fontSize:18,\n                    // lineHeight:32,\n                    paddingTop:20\n                }}\n                >\n               Ticker symbol\n                </Text>\n\n                <CustomTextInput\n                reference={publicCompanyTickerInputRef}\n                touched={touched.publicCompanyTicker}\n                errors={errors.publicCompanyTicker}\n                value = {values.publicCompanyTicker}\n                handleChange={handleChange('publicCompanyTicker')}\n                handleBlur={handleBlur('publicCompanyTicker')}\n                placeholder={\"e.g., ELPH\"}\n                />\n                </>\n                }\n\n\n\n\n                <HorizontalNavigatior showBackButton nextFunction={handleSubmit} backFunction={goToPrev}/>\n            </>)}\n            </Formik>\n            \n            </View>\n            </ScrollView>\n            \n        </KeyboardAvoidingView>\n    )\n}","import {\n    View,\n    KeyboardAvoidingView,\n    Text,\n    TouchableOpacity,\n    Dimensions,\n    TextInput,\n    Keyboard,\n    Image,\n    ScrollView\n} from 'react-native'\nimport { AppConstants } from '../../../../assets/AppConstants';\nimport { Entypo, Feather } from '@expo/vector-icons'; \nimport {useRef, useState} from 'react'\nimport { GlobalStyles } from '../../../GlobalStyles';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport {AntDesign} from '@expo/vector-icons'\nimport CustomTextInput from './SignupMiscComponents/CustomTextInput';\nimport HorizontalNavigatior from '../../../miscComponents/HorizontalNavigator';\nimport CustomSelector from './SignupMiscComponents/CustomSelector';\nimport { usePostHog } from 'posthog-react-native';\n\n\n\nexport default function SignupPEPFollowUps({goToNext, goToPrev, userData, setUserData} : {goToNext : ()=>void, goToPrev : ()=> void, userData : any, setUserData : any}){\n\n    \n\n    const pepJobTitleInputRef = useRef<any>()\n    const relatedPEPNameInputRef = useRef<any>()\n    const relatedPEPJobTitleInputRef = useRef<any>()\n\n    const [PEP,setPEP] = useState<string>(userData.isUserPEP)\n    const [isPEPDomesticOrForeign,setPEPDomesticOrForeign] = useState<string>(userData.isPEPDomesticOrForeign)\n    const [pepCategory, setPEPCategory] = useState<string>(userData.pepCategory)\n    const [relatedPEPRelation, setRelatedPEPRelation] = useState(userData.relatedPEPRelation)\n\n    const PEPList = ['Myself', 'Family Member']\n    const posthog = usePostHog()\n\n    const SignupSchema = Yup.object().shape({\n        pepJobTitle : PEP === 'Myself' ? Yup.string().required() : Yup.string(),\n        relatedPEPName : PEP === 'Family Member' ? Yup.string().required() : Yup.string(),\n        relatedPEPJobTitle : PEP === 'Family Member' ? Yup.string().required() : Yup.string(),\n    \n      });\n\n    return(\n        <KeyboardAvoidingView behavior='height' style={{\n            width:Dimensions.get('window').width,\n            height:'100%',\n            justifyContent:'flex-start',\n            alignItems:'flex-start',\n            paddingHorizontal:20\n            }}>\n                <ScrollView style={{width:'100%'}} showsVerticalScrollIndicator={false}>\n                    <View onStartShouldSetResponder={()=>true} style={{width:'100%'}}>\n                <View style={{\n                    marginBottom:20\n                }}>\n                    <Image source={require('../../../../assets/images/tree.png')} style={{height:36,width:36}}/>\n                </View>\n\n                <Text style={{\n                    width:'100%',\n                    fontFamily:'PlayfairDisplay_700Bold',\n                    fontSize:32,\n                    color:AppConstants.loginHeaderBlue\n\n                }}>\n                    Elphinstone US{'\\n'}Onboarding\n                </Text>\n\n                <Text\n                style={{\n                    fontFamily:'ArialNova',\n                    fontSize:18,\n                    lineHeight:32,\n                    paddingTop:20\n                }}\n                >\n                PEP follow-up questions\n                </Text>\n                \n                <Formik\n                initialValues={{  \n                    pepJobTitle : userData.pepJobTitle,\n                    relatedPEPName : userData.relatedPEPName,\n                    relatedPEPJobTitle : userData.relatedPEPJobTitle,\n                }}\n                validationSchema={SignupSchema}\n                onSubmit={values => {\n                    if (isPEPDomesticOrForeign === ''){\n                        return\n                    }\n                    if (pepCategory === ''){\n                        return\n                    }\n                    if (PEP === ''){\n                        return\n                    }\n                    if (PEP === 'Family Member' && relatedPEPRelation === ''){\n                        return\n                    }\n                    console.log(values)\n                    Keyboard.dismiss()\n                    posthog?.capture('Onboarding : Next button pressed on PEP followups screen', {\n                        isUserPEP : PEP, pepCategory : pepCategory, isPEPDomesticOrForeign : isPEPDomesticOrForeign, relatedPEPRelation : relatedPEPRelation\n                    })\n                    setUserData({...userData, ...values, isUserPEP : PEP, pepCategory : pepCategory, isPEPDomesticOrForeign : isPEPDomesticOrForeign, relatedPEPRelation : relatedPEPRelation})\n                    goToNext()\n                }}\n                >\n                {({ handleChange, handleBlur, handleSubmit, values, errors, touched }) => (\n                    <>\n                \n                \n                <Text\n                style={{\n                    fontFamily:'ArialNova',\n                    fontSize:18,\n                    // lineHeight:32,\n                    paddingTop:20\n                }}\n                >\n                {'\\u25CF'} Is the PEP yourself of a family member? {'\\n'}\n                </Text>\n                <CustomSelector\n                itemList={PEPList}\n                selectedValue={PEP}\n                setValue={setPEP}\n                />\n\n                <Text\n                style={{\n                    fontFamily:'ArialNova',\n                    fontSize:18,\n                    // lineHeight:32,\n                    paddingTop:20\n                }}\n                >\n                {'\\u25CF'} Is the relevant politically exposed person domestic or foreign? {'\\n'}\n                </Text>\n                <CustomSelector\n                itemList={['Domestic','Foreign']}\n                selectedValue={isPEPDomesticOrForeign}\n                setValue={setPEPDomesticOrForeign}\n                />\n\n                <Text\n                style={{\n                    fontFamily:'ArialNova',\n                    fontSize:18,\n                    // lineHeight:32,\n                    paddingTop:20\n                }}\n                >\n                {'\\u25CF'} Please select which of the following category the relevant politically exposed person falls under {'\\n'}\n                </Text>\n                <CustomSelector\n                itemList={[\n                    'Head of State',\n                    'Head of Government',\n                    'Senior Government official (grade 21 or above)', \n                    'Senior Political party official',\n                    'Senior Judicial official', \n                    'Senior Military official',\n                    'Senior Executive of state-owned company',\n                    'Senior Executive of international organisation'\n                ]}\n                selectedValue={pepCategory}\n                setValue={setPEPCategory}\n                />\n                {(PEP === 'Myself') && \n                <>\n                <Text\n                style={{\n                    fontFamily:'ArialNova',\n                    fontSize:18,\n                    // lineHeight:32,\n                    paddingTop:20\n                }}\n                >\n                What is you job title?\n                </Text>\n                <CustomTextInput\n                reference={pepJobTitleInputRef}\n                touched={touched.pepJobTitle}\n                errors={errors.pepJobTitle}\n                value = {values.pepJobTitle}\n                handleChange={handleChange('pepJobTitle')}\n                handleBlur={handleBlur('pepJobTitle')}\n                placeholder={\"e.g., Operations Manager\"}\n                />\n\n                </>\n                }\n\n                {(PEP === 'Family Member') && <>\n\n                <Text\n                style={{\n                    fontFamily:'ArialNova',\n                    fontSize:18,\n                    // lineHeight:32,\n                    paddingTop:20\n                }}\n                >\n              What is the name of the politically exposed person?\n                </Text>\n                <CustomTextInput\n                reference={relatedPEPNameInputRef}\n                touched={touched.relatedPEPName}\n                errors={errors.relatedPEPName}\n                value = {values.relatedPEPName}\n                handleChange={handleChange('relatedPEPName')}\n                handleBlur={handleBlur('relatedPEPName')}\n                placeholder={\"e.g., Farhan Paracha\"}\n                />\n\n                <Text\n                style={{\n                    fontFamily:'ArialNova',\n                    fontSize:18,\n                    // lineHeight:32,\n                    paddingTop:20\n                }}\n                >\n               E-mail address of compliance person\n                </Text>\n                <CustomTextInput\n                reference={relatedPEPJobTitleInputRef}\n                touched={touched.relatedPEPJobTitle}\n                errors={errors.relatedPEPJobTitle}\n                value = {values.relatedPEPJobTitle}\n                handleChange={handleChange('relatedPEPJobTitle')}\n                handleBlur={handleBlur('relatedPEPJobTitle')}\n                placeholder={\"e.g., Executive Director\"}\n                />\n\n                <Text\n                style={{\n                    fontFamily:'ArialNova',\n                    fontSize:18,\n                    // lineHeight:32,\n                    paddingTop:20\n                }}\n                >\n               What is your relationship to them?\n                </Text>\n\n                <CustomSelector\n                selectedValue={relatedPEPRelation}\n                setValue = {setRelatedPEPRelation}\n                itemList={[\n                    'Parent',\n                    'Sibling',\n                    'Child',\n                    'Spouse',\n                    'Grandparent',\n                    'Grandchild'\n                ]}\n                />\n                </>\n                }\n                <HorizontalNavigatior showBackButton nextFunction={handleSubmit} backFunction={goToPrev}/>\n            </>)}\n            </Formik>\n            \n            </View>\n            <View style={{height:100}}/>\n            </ScrollView>\n            \n        </KeyboardAvoidingView>\n    )\n}","import {\n    View,\n    KeyboardAvoidingView,\n    Text,\n    TouchableOpacity,\n    Dimensions,\n    TextInput,\n    Keyboard,\n    Image,\n    ScrollView\n} from 'react-native'\nimport { AppConstants } from '../../../../assets/AppConstants';\nimport { Entypo, Feather } from '@expo/vector-icons'; \nimport {useRef, useState} from 'react'\nimport { GlobalStyles } from '../../../GlobalStyles';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport {AntDesign} from '@expo/vector-icons'\nimport CustomTextInput from './SignupMiscComponents/CustomTextInput';\nimport HorizontalNavigatior from '../../../miscComponents/HorizontalNavigator';\nimport CustomSelector from './SignupMiscComponents/CustomSelector';\nimport { BooleanSelector } from '../../../miscComponents/BooleanSelector';\nimport CustomDatePicker from './SignupMiscComponents/CustomDatePicker';\nimport { getISO3FromCountry } from '../../../../assets/countryListISO3';\nimport { usePostHog } from 'posthog-react-native';\n\n\n\nexport default function SignupFATCA({goToNext, goToPrev, userData, setUserData, updateUser} : {goToNext : ()=>void, goToPrev : ()=> void, userData : any, setUserData : any, updateUser : any}){\n\n    \n\n\n    const [PEP,setPEP] = useState<string>(userData.isUserPEP)\n    const [isPEPDomesticOrForeign,setPEPDomesticOrForeign] = useState<string>(userData.isPEPDomesticOrForeign)\n    const [pepCategory, setPEPCategory] = useState<string>(userData.pepCategory)\n    const [relatedPEPRelation, setRelatedPEPRelation] = useState(userData.relatedPEPRelation)\n\n\n    const greenCardNumberInputRef = useRef<any>()\n    const [isUSCitizen, setUSCitizen] = useState(userData.isUSCitizen)\n    const [isUSPR, setUSPR] = useState(userData.isUSPR)\n    const [isUSResident, setUSResident] = useState(userData.isUSResident)\n    const [visaType, setVisaType] = useState(userData.visaType)\n    const [visaExpirationDate, setVisaExpirationDate] = useState(userData.visaExpirationDate)\n\n    const SignupSchema = Yup.object().shape({\n        greenCardNumber : isUSPR === true ? Yup.string().required() : Yup.string()\n    \n      });\n    \n      const posthog = usePostHog()\n\n    return(\n        <KeyboardAvoidingView behavior='height' style={{\n            width:Dimensions.get('window').width,\n            height:'100%',\n            justifyContent:'flex-start',\n            alignItems:'flex-start',\n            paddingHorizontal:20\n            }}>\n                <ScrollView style={{width:'100%'}} showsVerticalScrollIndicator={false}>\n                    <View onStartShouldSetResponder={()=>true} style={{width:'100%'}}>\n                <View style={{\n                    marginBottom:20\n                }}>\n                    <Image source={require('../../../../assets/images/tree.png')} style={{height:36,width:36}}/>\n                </View>\n\n                <Text style={{\n                    width:'100%',\n                    fontFamily:'PlayfairDisplay_700Bold',\n                    fontSize:32,\n                    color:AppConstants.loginHeaderBlue\n\n                }}>\n                    Elphinstone US{'\\n'}Onboarding\n                </Text>\n                \n                <Formik\n                initialValues={{  \n                    greenCardNumber : userData.greenCardNumber\n                }}\n                validationSchema={SignupSchema}\n                onSubmit={values => {\n                    if (isUSCitizen === null){\n                        return\n                    }\n                    if ((isUSCitizen === false) && (isUSPR === null)){\n                        return\n                    }\n                    if ((isUSCitizen === false) && (isUSPR === false) &&  (isUSResident === null)){\n                        return\n                    }\n\n                    if ((isUSCitizen === false) && (isUSPR === false) &&  (isUSResident === true) && (visaType === '') ){\n                        return\n                    }\n                    if ((isUSCitizen === false) && (isUSPR === false) &&  (isUSResident === true) && (visaExpirationDate === '') ){\n                        return\n                    }\n                    Keyboard.dismiss()\n                    setUserData({...userData, ...values, isUSCitizen:isUSCitizen, isUSPR : isUSPR, isUSResident : isUSResident, visaType : visaType, visaExpirationDate : visaExpirationDate,\n                    idType : (isUSCitizen || isUSPR || (userData.taxResidence === 'United Status'))  ? 'USA_SSN' : 'PAK_NIC', citizenship : userData.isUSCitizen ? \"United States\" : userData.citizenship\n                    })\n                    posthog?.capture('Onboarding : Next button pressed on FATCA screen', {\n                        country_of_citizenship : getISO3FromCountry(userData.isUSCitizen ? \"United States\" : userData.citizenship),\n                        tax_id_type : (isUSCitizen || isUSPR || (userData.taxResidence === 'United Status'))  ? 'USA_SSN' : 'PAK_NIC'\n                    })\n                    updateUser({\n                        country_of_citizenship : getISO3FromCountry(userData.isUSCitizen ? \"United States\" : userData.citizenship),\n                        tax_id_type : (isUSCitizen || isUSPR || (userData.taxResidence === 'United Status'))  ? 'USA_SSN' : 'PAK_NIC'\n                    },goToNext)\n    \n                    goToNext()\n                }}\n                >\n                {({ handleChange, handleBlur, handleSubmit, values, errors, touched }) => (\n                    <>\n                \n                \n                <Text\n                style={{\n                    fontFamily:'ArialNova',\n                    fontSize:18,\n                    // lineHeight:32,\n                    paddingTop:20\n                }}\n                >\n                Are you a US citizen? {'\\n'}\n                </Text>\n                <BooleanSelector value={isUSCitizen} setValue={setUSCitizen}/>\n\n                {(isUSCitizen === false) && <>\n\n                \n                <Text\n                style={{\n                    fontFamily:'ArialNova',\n                    fontSize:18,\n                    // lineHeight:32,\n                    paddingTop:20\n                }}\n                >\n                Are you a permanent US resident? {'\\n'}\n                </Text>\n                <BooleanSelector\n                value={isUSPR}\n                setValue={setUSPR}\n                />\n                {\n                isUSPR &&\n                <>\n                <Text\n                style={{\n                    fontFamily:'ArialNova',\n                    fontSize:18,\n                    // lineHeight:32,\n                    paddingTop:20\n                }}\n                >\n                Green card number\n                </Text>\n                <CustomTextInput\n                reference={greenCardNumberInputRef}\n                touched={touched.greenCardNumber}\n                errors={errors.greenCardNumber}\n                value = {values.greenCardNumber}\n                handleChange={handleChange('greenCardNumber')}\n                handleBlur={handleBlur('greenCardNumber')}\n                placeholder={\"e.g., 124578845\"}\n                />\n                </>\n                }\n\n\n                {\n                isUSPR === false &&\n                <>\n                <Text\n                style={{\n                    fontFamily:'ArialNova',\n                    fontSize:18,\n                    // lineHeight:32,\n                    paddingTop:20\n                }}\n                >\n                Do you currently reside in the US on a visa? {'\\n'}\n                </Text>\n                <BooleanSelector\n                value={isUSResident}\n                setValue = {setUSResident}\n                />\n                {\n                    isUSResident && \n                    <>\n\n                <Text\n                style={{\n                    fontFamily:'ArialNova',\n                    fontSize:18,\n                    // lineHeight:32,\n                    paddingTop:20\n                }}\n                >\n                What is the type of your visa? {'\\n'}\n                </Text>\n                <CustomSelector\n                selectedValue={visaType}\n                setValue = {setVisaType}\n                itemList={\n                    ['H1B', 'F1', 'J1', 'L1', 'G4', 'O1', 'TN1', 'E1', 'E2', 'E3']\n                }\n                />\n\n                <Text\n                style={{\n                    fontFamily:'ArialNova',\n                    fontSize:18,\n                    // lineHeight:32,\n                    paddingTop:20\n                }}\n                >\n                Visa expiration date {'\\n'}\n                </Text>\n\n                <CustomDatePicker\n                selectedValue={visaExpirationDate}\n                setValue={setVisaExpirationDate}\n                />\n                    \n                    </>\n                }\n                </>\n                }\n                </>\n                }\n                <HorizontalNavigatior showBackButton nextFunction={handleSubmit} backFunction={goToPrev}/>\n            </>)}\n            </Formik>\n            \n            </View>\n            </ScrollView>\n            \n        </KeyboardAvoidingView>\n    )\n}","import {\n    View,\n    KeyboardAvoidingView,\n    Text,\n    TouchableOpacity,\n    Dimensions,\n    TextInput,\n    Keyboard,\n    Image\n} from 'react-native'\nimport { AppConstants } from '../../../../assets/AppConstants';\nimport { Entypo, Feather } from '@expo/vector-icons'; \nimport {useRef, useState} from 'react'\nimport { GlobalStyles } from '../../../GlobalStyles';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport {AntDesign} from '@expo/vector-icons'\nimport CustomSelector from './SignupMiscComponents/CustomSelector';\nimport CountrySelector from './SignupMiscComponents/CountrySelector';\nimport HorizontalNavigatior from '../../../miscComponents/HorizontalNavigator';\nimport RiskToleranceSelector from './SignupMiscComponents/RiskToleranceSelector';\nimport { BooleanSelector } from '../../../miscComponents/BooleanSelector';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport { usePostHog } from 'posthog-react-native';\nconst SignupSchema = Yup.object().shape({\n    birthPlace: Yup.string().min(1).required('Required'),\n  });\n\n\n\nexport default function SignupNONUSDeclaration({goToNext, goToPrev, userData, setUserData} : {goToNext : ()=>void, goToPrev : ()=> void, userData : any, setUserData : any}){\n\n    const [nonUSDeclaration, setNonUS] = useState(userData.nonUSDeclaration)\n    const posthog = usePostHog()\n    const onSubmit = () =>{\n        if (nonUSDeclaration === null){\n            return\n        }\n        posthog?.capture('Onboarding : Next button pressed on Non US Declaration screen')\n        setUserData({...userData, nonUSDeclaration})\n        goToNext()    \n    }\n    return(\n        <KeyboardAvoidingView behavior='height' style={{\n            width:Dimensions.get('window').width,\n            height:'100%',\n            justifyContent:'flex-start',\n            alignItems:'flex-start',\n            paddingHorizontal:20\n            }}>\n                <ScrollView style={{width:'100%'}} showsVerticalScrollIndicator={false}>\n                <View onStartShouldSetResponder={()=>true}>\n                <View style={{\n                    marginBottom:20\n                }}>\n                    <Image source={require('../../../../assets/images/tree.png')} style={{height:36,width:36}}/>\n                </View>\n\n                <Text style={{\n                    width:'100%',\n                    fontFamily:'PlayfairDisplay_700Bold',\n                    fontSize:32,\n                    color:AppConstants.loginHeaderBlue\n\n                }}>\n                    Elphinstone US{'\\n'}Onboarding\n                </Text>\n\n\n                <Text\n                style={{\n                    fontFamily:'ArialNova-Bold',\n                    fontSize:24,\n                    lineHeight:32,\n                    paddingTop:40\n                }}\n                >\n                Declaration of non-US status\n                </Text>\n\n                <Text\n                style={{\n                    fontFamily:'ArialNova',\n                    fontSize:18,\n                    lineHeight:32,\n                    paddingTop:20\n                }}\n                >\n                I certify that I am not a US citizen, US resident alien or other US person for US tax purposes, and I am submitting the applicable Form W-8 BEN with this form to certify my foreign status and, if applicable, claim tax treaty benefits.\n                </Text>\n                <View style={{marginTop: 30, flexDirection: 'row', alignItems:'center', width:'100%', paddingHorizontal:10}}>\n                <TouchableOpacity activeOpacity={1} \n                style={{\n                    height:32, \n                    width: 32, \n                    borderRadius:16, \n                    backgroundColor: nonUSDeclaration === true ? '#19C18F' : 'transparent',\n                    borderWidth:1,\n                    borderColor: nonUSDeclaration === true ? '#19C18F' : '#ddd',\n                    alignItems:'center',\n                    justifyContent:'center',\n                    marginRight:20\n                    }} onPress = {()=>setNonUS(true)}>\n                <AntDesign name='check' color={nonUSDeclaration === true ? 'white' : 'transparent'}/>\n                </TouchableOpacity>\n\n                <Text>\n                Agree\n                </Text>\n                </View>\n\n               \n               <HorizontalNavigatior showBackButton nextFunction={()=>{nonUSDeclaration && onSubmit()}} backFunction={goToPrev}/>\n               </View>\n               </ScrollView>\n        </KeyboardAvoidingView>\n    )\n}","import {\n    View,\n    KeyboardAvoidingView,\n    Text,\n    TouchableOpacity,\n    Dimensions,\n    TextInput,\n    Keyboard,\n    Image,\n    ScrollView\n} from 'react-native'\nimport { AppConstants } from '../../../../assets/AppConstants';\nimport { Entypo, Feather } from '@expo/vector-icons'; \nimport {useRef, useState} from 'react'\nimport { GlobalStyles } from '../../../GlobalStyles';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport {AntDesign} from '@expo/vector-icons'\nimport CustomSelector from './SignupMiscComponents/CustomSelector';\nimport CountrySelector from './SignupMiscComponents/CountrySelector';\nimport HorizontalNavigatior from '../../../miscComponents/HorizontalNavigator';\nimport RiskToleranceSelector from './SignupMiscComponents/RiskToleranceSelector';\nimport { usePostHog } from 'posthog-react-native';\nconst SignupSchema = Yup.object().shape({\n    birthPlace: Yup.string().min(1).required('Required'),\n  });\n\n\nexport default function SignupW8({goToNext, goToPrev, userData, setUserData} : {goToNext : ()=>void, goToPrev : ()=> void, userData : any, setUserData : any}){\n    \n    const posthog = usePostHog()\n    const onSubmit = () =>{\n        posthog?.capture('Onboarding : Next button pressed on W8 screen')\n            goToNext()    \n    }\n    return(\n        <KeyboardAvoidingView behavior='height' style={{\n            width:Dimensions.get('window').width,\n            height:'100%',\n            justifyContent:'flex-start',\n            alignItems:'flex-start',\n            paddingHorizontal:20\n            }}>\n                <ScrollView style={{width:'100%'}} showsVerticalScrollIndicator={false}>\n                    <View onStartShouldSetResponder={()=>true}>\n                <View style={{\n                    marginBottom:20\n                }}>\n                    <Image source={require('../../../../assets/images/tree.png')} style={{height:36,width:36}}/>\n                </View>\n\n                <Text style={{\n                    width:'100%',\n                    fontFamily:'PlayfairDisplay_700Bold',\n                    fontSize:32,\n                    color:AppConstants.loginHeaderBlue\n\n                }}>\n                    Elphinstone US{'\\n'}Onboarding\n                </Text>\n                \n\n                <Text\n                style={{\n                    fontFamily:'ArialNova-Bold',\n                    fontSize:24,\n                    lineHeight:32,\n                    paddingTop:40\n                }}\n                >\n                Form W-8BEN certification\n                </Text>\n                \n                <Text\n                style={{\n                    fontFamily:'ArialNova',\n                    fontSize:18,\n                    lineHeight:32,\n                    paddingTop:20\n                }}\n                >\n                Under penalties of perjury, I declare that I have examined the information on this form and to the best of my knowledge and belief it is true, correct, and complete. I further certify under penalties of perjury that:\n                </Text>\n\n                <View style={{flexDirection:'row', width:'100%', paddingTop:20,}}>\n\n                <Text style={{width:'10%', fontSize:16,paddingTop:10}}>\n                {'\\u2022'}\n                </Text>\n                <Text\n                style={{\n                    fontFamily:'ArialNova',\n                    fontSize:16,\n                    lineHeight:32,\n                    \n                    width:'90%',\n                }}\n                >Under penalties of perjury, I declare that I have examined the information on this form and to the best of my knowledge and belief it is true, correct, and complete. I further certify under penalties of perjury that:\n                </Text>\n\n                \n                </View>\n\n                <View style={{flexDirection:'row', width:'100%', paddingTop:20,}}>\n\n                <Text style={{width:'10%', fontSize:16,paddingTop:10}}>\n                {'\\u2022'}\n                </Text>\n                <Text\n                style={{\n                    fontFamily:'ArialNova',\n                    fontSize:16,\n                    lineHeight:32,\n                    \n                    width:'90%',\n                }}\n                >The person named on line 1 of this form is not a U.S. person;\n                </Text>\n\n                \n                </View>\n\n                <View style={{flexDirection:'row', width:'100%', paddingTop:20,}}>\n\n                <Text style={{width:'10%', fontSize:16,paddingTop:10}}>\n                {'\\u2022'}\n                </Text>\n                <Text\n                style={{\n                    fontFamily:'ArialNova',\n                    fontSize:16,\n                    lineHeight:32,\n                    \n                    width:'90%',\n                }}\n                >\n                This form relates to: {'\\n'}    \n                <Text style={{fontFamily:'ArialNova-Bold'}}>(a)</Text> income not effectively connected with the conduct of a trade or business in the United States; {'\\n'} \n                <Text style={{fontFamily:'ArialNova-Bold'}}>(b)</Text> income effectively connected with the conduct of a trade or business in the United States but is not subject to tax under an applicable income tax treaty;{'\\n'} \n                <Text style={{fontFamily:'ArialNova-Bold'}}>(c)</Text> the partner’s share of a partnership’s effectively connected taxable income; or{'\\n'} \n                <Text style={{fontFamily:'ArialNova-Bold'}}>(d)</Text> the partner’s amount realized from the transfer of a partnership interest subject to withholding under section 1446(f);{'\\n'} \n                </Text>                \n                </View>\n\n                <View style={{flexDirection:'row', width:'100%', paddingTop:20,}}>\n\n                <Text style={{width:'10%', fontSize:16,paddingTop:10}}>\n                {'\\u2022'}\n                </Text>\n                <Text\n                style={{\n                    fontFamily:'ArialNova',\n                    fontSize:16,\n                    lineHeight:32,\n                    width:'90%',\n                }}\n                >The person named on line 1 of this form is a resident of the treaty country listed on line 9 of the form (if any) within the meaning of the income tax treaty between the United States and that country; and\n                </Text>\n\n                \n                </View>\n\n\n                <View style={{flexDirection:'row', width:'100%', paddingTop:20,}}>\n\n                <Text style={{width:'10%', fontSize:16,paddingTop:10}}>\n                {'\\u2022'}\n                </Text>\n                <Text\n                style={{\n                    fontFamily:'ArialNova',\n                    fontSize:16,\n                    lineHeight:32,\n                    width:'90%',\n                }}\n                >\n                For broker transactions or barter exchanges, the beneficial owner is an exempt foreign person as defined in the instructions.\n                </Text>\n\n                \n                </View>\n\n                <Text\n                style={{\n                    fontFamily:'ArialNova',\n                    fontSize:18,\n                    lineHeight:32,\n                    paddingTop:20\n                }}\n                >\n                Furthermore, I authorize this form to be provided to any withholding agent that has control, receipt, or custody of the income of which I am the beneficial owner or any withholding agent that can disburse or make payments of the income of which I am the beneficial owner. I agree that I will submit a new form within 30 days if any certification made on this form becomes incorrect.\n                </Text>\n\n               \n               <HorizontalNavigatior showBackButton nextFunction={onSubmit} backFunction={goToPrev}/>\n               </View>\n               </ScrollView>\n        </KeyboardAvoidingView>\n    )\n}","import React from 'react'\nimport {\n    View,\n    TouchableWithoutFeedback,\n    Text\n} from 'react-native'\nimport * as DocumentPicker from 'expo-document-picker'\nimport {DocumentResult} from 'expo-document-picker'\n\nexport default function CustomDocumentSelector({selectedValue, setValue, placeholder, mimetype} : {selectedValue : DocumentResult | null | undefined, setValue : any, placeholder:string, mimetype : string}){\n    return (\n        <View style={{height:82, width:'100%', borderWidth:1, borderRadius:6, borderColor:'#ddd',borderStyle:'dashed'}}>\n            <TouchableWithoutFeedback onPress={()=>DocumentPicker.getDocumentAsync({type:mimetype}).then(cb => {\n                if (cb?.type === 'cancel'){\n                    return\n                }\n                setValue(cb)\n            })}>\n                <View style={{height:'100%', width:'100%', alignItems:'center', justifyContent:'center'}}>\n                <Text style={{\n                    fontFamily:'ArialNova',\n                    fontSize:12,\n                    color:'#1E293B'\n                    // lineHeight:18,\n                }}>\n                    {selectedValue ? (selectedValue.name) : placeholder}\n                </Text>\n                </View>\n            </TouchableWithoutFeedback>\n        </View>\n    )\n}","import React from 'react'\nimport {\n    View,\n    TouchableWithoutFeedback,\n    Text\n} from 'react-native'\nimport * as ImagePicker from 'expo-image-picker'\nimport {DocumentResult} from 'expo-document-picker'\n\nexport default function CustomPictureSelector({selectedValue, setValue, placeholder, mimetype} : {selectedValue : DocumentResult | null | undefined, setValue : any, placeholder:string, mimetype : string}){\n    console.log(selectedValue?.uri.split('/').slice(-1)[0])\n    return (\n        <View style={{height:82, width:'100%', borderWidth:1, borderRadius:6, borderColor:'#ddd',borderStyle:'dashed'}}>\n            <TouchableWithoutFeedback onPress={()=>ImagePicker.launchImageLibraryAsync({\n                mediaTypes: ImagePicker.MediaTypeOptions.Images,\n                allowsEditing : false,\n                quality : 1\n            \n            }).then(cb => {\n                if (cb.canceled){\n                    return\n                }\n                console.log(cb.assets)\n                setValue(cb.assets[0])\n            })}>\n                <View style={{height:'100%', width:'100%', alignItems:'center', justifyContent:'center'}}>\n                <Text style={{\n                    fontFamily:'ArialNova',\n                    fontSize:12,\n                    color:'#1E293B'\n                    // lineHeight:18,\n                }}>\n                    {selectedValue ? (selectedValue.fileName || selectedValue?.uri.split('/').slice(-1)[0]) : placeholder}\n                </Text>\n                </View>\n            </TouchableWithoutFeedback>\n        </View>\n    )\n}","import {\n    View,\n    KeyboardAvoidingView,\n    Text,\n    TouchableOpacity,\n    Dimensions,\n    TextInput,\n    Keyboard,\n    Image,\n    ScrollView,\n    Alert\n} from 'react-native'\nimport { AppConstants } from '../../../../assets/AppConstants';\nimport { Entypo, Feather } from '@expo/vector-icons'; \nimport {useRef, useState} from 'react'\nimport { GlobalStyles } from '../../../GlobalStyles';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport {AntDesign} from '@expo/vector-icons'\nimport CustomSelector from './SignupMiscComponents/CustomSelector';\nimport CountrySelector from './SignupMiscComponents/CountrySelector';\nimport HorizontalNavigatior from '../../../miscComponents/HorizontalNavigator';\nimport RiskToleranceSelector from './SignupMiscComponents/RiskToleranceSelector';\nimport CustomDocumentSelector from './SignupMiscComponents/CustomDocumentSelector';\nimport CustomPictureSelector from './SignupMiscComponents/CustomPictureSelector';\n\nimport { usePostHog } from 'posthog-react-native';\nconst SignupSchema = Yup.object().shape({\n    birthPlace: Yup.string().min(1).required('Required'),\n  });\n\n\nexport default function SignupDocumentUpload({goToNext, goToPrev, userData, setUserData} : {goToNext : ()=>void, goToPrev : ()=> void, userData : any, setUserData : any}){\n    const posthog = usePostHog()\n    const [photoIDFront, setPhotoIDFront] = useState(userData.photoIDFront)\n    const [photoIDBack, setPhotoIDBack] = useState(userData.photoIDBack)\n\n    const [bankStatement, setBankStatment] = useState(userData.bankStatement)\n\n    const onSubmit = () =>{\n        if (photoIDFront && photoIDBack && bankStatement){\n            posthog?.capture('Onboarding : Next button pressed on documents screen')\n            setUserData({\n                ...userData,\n                photoIDFront : photoIDFront,\n                photoIDBack : photoIDBack,\n                bankStatement: bankStatement\n            })\n            goToNext()    \n        }\n    }\n    return(\n        <KeyboardAvoidingView behavior='height' style={{\n            width:Dimensions.get('window').width,\n            height:'100%',\n            justifyContent:'flex-start',\n            alignItems:'flex-start',\n            paddingHorizontal:20\n            }}>\n                <ScrollView style={{width:'100%'}} showsVerticalScrollIndicator={false}>\n                    <View onStartShouldSetResponder={()=>true}>\n                <View style={{\n                    marginBottom:20\n                }}>\n                    <Image source={require('../../../../assets/images/tree.png')} style={{height:36,width:36}}/>\n                </View>\n\n                <Text style={{\n                    width:'100%',\n                    fontFamily:'PlayfairDisplay_700Bold',\n                    fontSize:32,\n                    color:AppConstants.loginHeaderBlue\n\n                }}>\n                    Elphinstone US{'\\n'}Onboarding\n                </Text>\n                <Text\n                style={{\n                    fontFamily:'ArialNova',\n                    fontSize:18,\n                    lineHeight:32,\n                    paddingTop:20\n                }}\n                >\n                Almost done, just upload the following\n                </Text>\n\n                <Text\n                style={{\n                    fontFamily:'ArialNova',\n                    fontSize:18,\n                    lineHeight:32,\n                    paddingVertical:20,\n                    // fontStyle:'italic',\n                    // fontWeight:'200'\n                }}\n                >\n                {'\\u25CF'} Copy of your {userData.idType === 'PAK_NIC' ? 'CNIC' : \"Photo ID\"}\n                </Text>\n\n                <CustomPictureSelector\n                placeholder={'Upload a picture of your ' + (userData.idType === 'PAK_NIC' ? 'CNIC' : \"Photo ID\" )+ \" (front side)\"}\n                selectedValue={photoIDFront}\n                setValue={setPhotoIDFront}\n                mimetype={\"image/jpeg\"}\n                />\n                <View style={{height:10}}/>\n                <CustomPictureSelector\n                placeholder={'Upload a picture of your ' + (userData.idType === 'PAK_NIC' ? 'CNIC' : \"Photo ID\" )+ \" (back side)\"}\n                selectedValue={photoIDBack}\n                setValue={setPhotoIDBack}\n                mimetype={\"image/jpeg\"}\n                />\n\n                <Text\n                style={{\n                    fontFamily:'ArialNova',\n                    fontSize:18,\n                    lineHeight:32,\n                    paddingVertical:20,\n                    // fontStyle:'italic',\n                    // fontWeight:'200'\n                }}\n                >\n                {'\\u25CF'} Bank statement <Text style={{fontStyle:'italic', fontSize:12}}>(must contain your name & address) </Text>\n                </Text>\n\n                <CustomDocumentSelector\n                placeholder='Upload a PDF copy of your bank statement'\n                selectedValue={bankStatement}\n                setValue={setBankStatment}\n                mimetype={\"application/pdf\"}\n                />\n                \n               <HorizontalNavigatior showBackButton nextFunction={onSubmit} backFunction={goToPrev}/>\n               </View>\n               </ScrollView>\n        </KeyboardAvoidingView>\n    )\n}","import {\n    View,\n    KeyboardAvoidingView,\n    Text,\n    TouchableOpacity,\n    Dimensions,\n    TextInput,\n    Keyboard,\n    Image,\n    ScrollView,\n    Linking\n} from 'react-native'\nimport { AppConstants } from '../../../../assets/AppConstants';\nimport { Entypo, Feather } from '@expo/vector-icons'; \nimport {useRef, useState} from 'react'\nimport { GlobalStyles } from '../../../GlobalStyles';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport {AntDesign} from '@expo/vector-icons'\nimport CustomSelector from './SignupMiscComponents/CustomSelector';\nimport CountrySelector from './SignupMiscComponents/CountrySelector';\nimport HorizontalNavigatior from '../../../miscComponents/HorizontalNavigator';\nimport RiskToleranceSelector from './SignupMiscComponents/RiskToleranceSelector';\nimport { BooleanSelector } from '../../../miscComponents/BooleanSelector';\nimport { TouchableWithoutFeedback } from 'react-native-gesture-handler';\nimport { usePostHog } from 'posthog-react-native';\nconst SignupSchema = Yup.object().shape({\n    birthPlace: Yup.string().min(1).required('Required'),\n  });\n\n\n\nexport default function SignupAgreementsDisclosures({goToNext, goToPrev, userData, setUserData, disableButton} : {goToNext : ()=>void, goToPrev : ()=> void, userData : any, setUserData : any, disableButton : any}){\n\n    const posthog = usePostHog()\n    const [customerAgreementAck, setCustomerAgreementAck] = useState(userData.customerAgreementAck)\n    const [digitalSignatureAck, setDigitalSignatureAck] = useState(userData.digitalSignatureAck)\n\n    const onSubmit = () =>{\n        if ((customerAgreementAck === null) || (digitalSignatureAck === null)){\n            return\n        }\n        posthog?.capture('Onboarding : Next button pressed on agreements screen')\n        setUserData({...userData, customerAgreementAck, digitalSignatureAck})\n        goToNext()  \n    }\n\n    return(\n        <KeyboardAvoidingView behavior='height' style={{\n            width:Dimensions.get('window').width,\n            height:'100%',\n            justifyContent:'flex-start',\n            alignItems:'flex-start',\n            paddingHorizontal:20\n            }}>\n                <ScrollView style={{width:'100%'}} showsVerticalScrollIndicator={false}>\n                    <View onStartShouldSetResponder={()=>true}>\n                <View style={{\n                    marginBottom:20\n                }}>\n                    <Image source={require('../../../../assets/images/tree.png')} style={{height:36,width:36}}/>\n                </View>\n\n                <Text style={{\n                    width:'100%',\n                    fontFamily:'PlayfairDisplay_700Bold',\n                    fontSize:32,\n                    color:AppConstants.loginHeaderBlue\n\n                }}>\n                    Elphinstone US{'\\n'}Onboarding\n                </Text>\n\n\n                <Text\n                style={{\n                    fontFamily:'ArialNova-Bold',\n                    fontSize:24,\n                    lineHeight:32,\n                    paddingTop:40\n                }}\n                >\n                Agreements & Disclosures\n                </Text>\n\n                <View style={{flexDirection:'row',paddingTop:20}}>\n                <Text\n                style={{\n                    fontFamily:'ArialNova',\n                    fontSize:16,\n                    // lineHeight:32,\n                    \n                }}\n                >\n                Elphinstone, Inc. Customer Agreement {'\\t'}            \n                <TouchableWithoutFeedback onPress={()=>Linking.openURL(\"http://elphinstone.us/wp-content/uploads/2023/12/Elphinstone-Inc.-Client-Account-Agreement-20230214.pdf\")}>  \n                <Feather name='external-link' size={18} color=\"#9097AC\"/>\n                </TouchableWithoutFeedback>\n                </Text>\n                </View>\n\n                <View style={{flexDirection:'row',paddingTop:20}}>\n                <Text\n                style={{\n                    fontFamily:'ArialNova',\n                    fontSize:16,\n                    \n                }}\n                >\n                Alpaca Securities, LLC Customer Agreement {' '}\n                \n                </Text>\n                <TouchableWithoutFeedback onPress={() => Linking.openURL(\"https://files.alpaca.markets/disclosures/library/AcctAppMarginAndCustAgmt.pdf\")}>         \n                <Feather name='external-link' size={18} color=\"#9097AC\"/>\n                </TouchableWithoutFeedback>\n                </View>\n\n                <Text\n                style={{\n                    fontFamily:'ArialNova-Bold',\n                    fontSize:16,\n                    lineHeight:32,\n                    paddingTop:20,\n                    \n                }}\n                >\n                Customer Agreement Acknowledgments             \n                </Text>\n\n                <Text\n                style={{\n                    fontFamily:'ArialNova',\n                    fontSize:16,\n                    lineHeight:32,\n                    paddingTop:20,\n                    \n                }}\n                >\nI have read, understood, and agree to be bound by Elphinstone, Inc. and Alpaca Securities, LLC account terms, and all other terms, disclosures and disclaimers applicable to me, as referenced in the Alpaca Customer Agreement. I also acknowledge that the Alpaca Customer Agreement contains a pre-dispute arbitration clause in Section 43.            \n                </Text>\n\n\n                <View style={{marginTop: 30, flexDirection: 'row', alignItems:'center', width:'100%', paddingHorizontal:10}}>\n                <TouchableOpacity activeOpacity={1} \n                style={{\n                    height:32, \n                    width: 32, \n                    borderRadius:16, \n                    backgroundColor: customerAgreementAck === true ? '#19C18F' : 'transparent',\n                    borderWidth:1,\n                    borderColor: customerAgreementAck === true ? '#19C18F' : '#ddd',\n                    alignItems:'center',\n                    justifyContent:'center',\n                    marginRight:20\n                    }} onPress = {()=>setCustomerAgreementAck(true)}>\n                <AntDesign name='check' color={customerAgreementAck === true ? 'white' : 'transparent'}/>\n                </TouchableOpacity>\n\n                <Text>\n                Agree\n                </Text>\n                </View>\n\n\n                <Text\n                style={{\n                    fontFamily:'ArialNova-Bold',\n                    fontSize:16,\n                    lineHeight:32,\n                    paddingTop:20,\n                    \n                }}\n                >\n                Digital Signature Acknowledgment           \n                </Text>\n\n                <Text\n                style={{\n                    fontFamily:'ArialNova',\n                    fontSize:16,\n                    lineHeight:32,\n                    paddingTop:20,\n                    \n                }}\n                >\n                 I understand I am signing this agreement electronically, and that my electronic signature will have the same effect as physically signing and returning the Application Agreement.           \n                </Text>\n\n                <View style={{marginTop: 30, flexDirection: 'row', alignItems:'center', width:'100%', paddingHorizontal:10}}>\n                <TouchableOpacity activeOpacity={1} \n                style={{\n                    height:32, \n                    width: 32, \n                    borderRadius:16, \n                    backgroundColor: digitalSignatureAck === true ? '#19C18F' : 'transparent',\n                    borderWidth:1,\n                    borderColor: digitalSignatureAck === true ? '#19C18F' : '#ddd',\n                    alignItems:'center',\n                    justifyContent:'center',\n                    marginRight:20\n                    }} onPress = {()=>setDigitalSignatureAck(true)}>\n                <AntDesign name='check' color={digitalSignatureAck === true ? 'white' : 'transparent'}/>\n                </TouchableOpacity>\n\n                <Text>\n                Agree\n                </Text>\n                </View>\n\n               \n               <HorizontalNavigatior showBackButton nextFunction={onSubmit} backFunction={goToPrev} disableNextButton={disableButton}/>\n               </View>\n               </ScrollView>\n        </KeyboardAvoidingView>\n    )\n}","import {\n    View,\n    Text,\n    TouchableOpacity,\n    Dimensions,\n    TextInput,\n    Keyboard,\n    ScrollView,\n    StyleSheet,\n    Image,\n    Animated,ScrollViewComponent\n} from 'react-native'\nimport { AppConstants } from '../../../../assets/AppConstants';\nimport { Entypo, Feather } from '@expo/vector-icons'; \nimport React,{useRef, useState, useEffect} from 'react'\nimport { GlobalStyles } from '../../../GlobalStyles';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport {AntDesign} from '@expo/vector-icons'\nimport { BooleanSelector } from '../../../miscComponents/BooleanSelector';\nimport { Tooltip, TooltipProps } from '@rneui/themed';\nimport { useKeyboard } from '../../../miscComponents/useKeyboard';\nimport CustomTextInput from './SignupMiscComponents/CustomTextInput';\nimport CustomSelector from './SignupMiscComponents/CustomSelector';\nimport { LoremIpsum } from './SignupMiscComponents/LoremIpsum';\n\n\n  \n\nexport default function SignupLastScreen({goToNext, goToPrev, userData, setUserData} : {goToNext : ()=>void, goToPrev : ()=> void, userData? : any, setUserData? : any}){\n    const scrollViewRef = useRef<any>()\n\n    return(\n        <View>\n                <ScrollView \n                ref={scrollViewRef}\n                style={{width:Dimensions.get('window').width, paddingHorizontal:30}}\n                bounces={false}\n                >\n                <View onStartShouldSetResponder={() => true}>\n                <View style={{\n                    marginBottom:20\n                }}>\n                    <Image source={require('../../../../assets/images/tree.png')} style={{height:36,width:36}}/>\n                </View>\n                <View style={{flexDirection:'row', alignItems:'center', justifyContent:'space-between', width:'100%'}}>\n                    <View\n                    style={{\n                        height:54,\n                        width: 54,\n                        borderRadius:27,\n                        backgroundColor:'#19C18F',\n                        marginRight:20,\n                        alignItems:'center',\n                        justifyContent:'center'\n                    }}\n                    >\n                        <AntDesign name='check' size={24} color='white'/>\n                    </View>\n                <Text style={{\n                    width:'100%',\n                    fontFamily:'PlayfairDisplay_700Bold',\n                    fontSize:32,\n                    color:AppConstants.loginHeaderBlue\n\n                }}>\n                    Voilà! {'\\n'}\n                You’re all set ...\n                </Text>\n                </View>\n                <Text\n                style={{\n                    marginTop:20,\n                    fontFamily:'ArialNova',\n                    lineHeight: 32,\n                    fontSize:18\n                }}\n                >\n                    Your account application has been submitted. Once it is approved, you will receive an e-mail and you will be able to begin investing in the United States. In case we need more information to open your account, we will also notify you via e-mail with further instructions.\n                </Text>\n                \n\n                <View\n                style={{\n                    alignItems:'flex-end',\n                    justifyContent:'space-between',\n                    width:'100%', \n                    marginTop:20, \n                    flex:1,\n                    flexDirection:'row',\n                    paddingBottom:20,\n                }}>\n                \n                <TouchableOpacity style={{\n                    width:'100%',\n                    marginTop:10,\n                    height: 54,\n                    backgroundColor:AppConstants.loginHeaderBlue,\n                    marginVertical:10,\n                    borderRadius: 6,\n                    padding:10,\n                    alignItems:'center',\n                    flexDirection:'row',\n                    justifyContent:'space-between',\n                    elevation:5,\n                    shadowColor: \"#000\",\n                    shadowOffset: {\n                        width: 0,\n                        height: 2,\n                    },\n                    shadowOpacity: 0.25,\n                    shadowRadius: 3.84,\n                }} \n                activeOpacity={0.8}\n                onPress = {goToNext}\n                // disabled= {true}\n                >\n                <Text style={{color:'white', fontFamily:'ArialNova', fontSize:18}}>\n                Done\n                </Text>\n                <Feather name=\"arrow-right\" size={24} color=\"white\" />\n            </TouchableOpacity>\n            </View>\n            </View>\n            </ScrollView>\n            </View>\n    )\n}\n\nconst styles = StyleSheet.create({\n    bullets : {\n\n    }\n})","import axios, { AxiosRequestConfig } from \"axios\";\nimport * as SecureStore from \"expo-secure-store\"\n\nconst axiosClient = axios.create({\n    baseURL: \"https://api.elphinstone.us/v1/accounts\"\n    // baseURL: process.env.NODE_ENV === \"production\" ? \"https:///api-business.elphinstone.com.pk/b2c\" : \"https://staging-api-business.elphinstone.com.pk/b2c\"\n})\n\n//check if the call composes of login or register, if not, insert the jwt here\naxiosClient.interceptors.request.use(async (config : AxiosRequestConfig) => {\n    \n    const sessionToken = JSON.parse(await SecureStore.getItemAsync(\"user_session\") as string )\n    config.headers['X-Session-Token'] = sessionToken.session_token\n    config.auth\n    return config\n})\n\n\nexport default axiosClient\n","export default class HttpException extends Error {\n    statusCode?: number;\n    constructor(message: string, statusCode: number) {\n      super(message);\n      this.message = message;\n      this.statusCode = statusCode;\n    }\n    getStatusCode() {\n      return this.statusCode;\n    }\n    getErrorMsg() {\n      return this.message;\n    }\n  }\n  ","import axios, { AxiosError } from \"axios\";\nimport axiosClient from \"../axiosWrapper\";\nimport HttpException from \"../../src/Interfaces//HttpException\";\nexport default class AlpacaService {\n  public static async getAccountId(emailId: any) {\n    const res = await axiosClient.get(\"/v1/accounts/fetchAccountByEmail\", {\n      params: {\n        email_address: emailId,\n      },\n    });\n   \n    return res?.data;\n  }\n  public account_id;\n\n  public static async getOnfidoToken(account_id: string) {\n    const res = await axiosClient.get(`/v1/onfido/getToken`, {\n      params: {\n        account_id: account_id,\n      },\n    });\n    return res?.data;\n  }\n\n  public static async patchOnfidoToken(account_id: string, body: any) {\n    const res = await axiosClient.patch(`/v1/onfido/patchToken`, body, {\n      params: {\n        account_id: account_id,\n      },\n    });\n    return res?.data;\n  }\n\n  constructor(account_id: any) {\n    this.account_id = account_id;\n  }\n\n  async getAllStocks() {\n    const res = await axiosClient.get(\"/v1/assets/getAllAssets\", {\n      params: { status: \"active\" },\n    });\n    return res?.data;\n  }\n  async getAllPositions() {\n    const res = await axiosClient.get(\"/v1/trading/getAllPositions\", {\n      params: {\n        account_id: this.account_id,\n      },\n    });\n    return res?.data;\n  }\n  async placePortfolioSellOrder({\n    sellPercentage,\n  }: {\n    sellPercentage: number;\n  }) {\n    await this.unsubscribeFromPortfolio();\n    try{\n    const res = await axiosClient.post(\n      \"/v1/trading/sellPercentageOfPortfolio\",\n      {},\n      {\n        params: {\n          account_id: this.account_id,\n          percentage: sellPercentage,\n        },\n      }\n    );\n    return res?.data;}catch(e : any){\n      throw new HttpException(\n        e.response.data.message,\n        e.response.status\n      );\n    }\n  }\n\n\n\n  async placeIndividualStockSellOrder({\n    stockTicker,\n    qty,\n  }: {\n    stockTicker: string;\n    qty: string;\n  }) {\n    await this.unsubscribeFromPortfolio();\n    const res = await axiosClient.post(\n      \"/v1/trading/createOrder\",\n      {\n        symbol: stockTicker,\n        qty: qty,\n        side: \"sell\",\n        type: \"market\",\n        time_in_force: \"day\",\n      },\n      {\n        params: {\n          account_id: this.account_id,\n        },\n      }\n    );\n  }\n\n  async placeIndividualStockOrder({\n    side,\n    orderType,\n    stockTicker,\n    qty,\n    limit_price,\n    stop_price,\n    trail_price,\n    trail_percent,\n    time_in_force,\n  }: {\n    orderType: string;\n    side: string;\n    stockTicker: string;\n    qty: string;\n    limit_price?: string;\n    stop_price?: string;\n    trail_price?: string;\n    trail_percent?: string;\n    time_in_force: string;\n  }) {\n    let bodyObject;\n    switch (orderType) {\n      case \"Market\":\n        bodyObject = {\n          symbol: stockTicker,\n          qty: qty,\n          side: side,\n          type: \"market\",\n          time_in_force: time_in_force,\n        };\n        break;\n      case \"Limit Price\":\n        bodyObject = {\n          symbol: stockTicker,\n          qty: qty,\n          side: side,\n          type: \"limit\",\n          time_in_force: time_in_force,\n          limit_price: limit_price,\n        };\n        break;\n      case \"Stop Price\":\n        bodyObject = {\n          symbol: stockTicker,\n          qty: qty,\n          side: side,\n          type: \"stop\",\n          time_in_force: time_in_force,\n          stop_price: stop_price,\n        };\n        break;\n      case \"Stop-Limit Price\":\n        bodyObject = {\n          symbol: stockTicker,\n          qty: qty,\n          side: side,\n          type: \"stop_limit\",\n          time_in_force: time_in_force,\n          limit_price: limit_price,\n          stop_price: stop_price,\n        };\n        break;\n      case \"Trailing Stop\":\n        if (trail_percent) {\n          bodyObject = {\n            symbol: stockTicker,\n            qty: qty,\n            side: side,\n            type: \"trailing_stop\",\n            time_in_force: time_in_force,\n            trail_percent: trail_percent,\n          };\n        } else if (trail_price) {\n          bodyObject = {\n            symbol: stockTicker,\n            qty: qty,\n            side: side,\n            type: \"trailing_stop\",\n            time_in_force: time_in_force,\n            trail_price: trail_price,\n          };\n        }\n\n        break;\n    }\n    \n    await this.unsubscribeFromPortfolio();\n    try{\n      const res=await axiosClient.post(\"/v1/trading/createOrder\", bodyObject, {\n        params: {\n          account_id: this.account_id,\n        },\n      });\n      console.log(res)\n    }catch(e:any){\n      \n      throw new HttpException(\n        e.response.data.message,\n        e.response.status\n      );\n      //throw new Error(e.response.data.message, e.response.status)\n    }\n    \n    \n  }\n\n  async unsubscribeFromPortfolio() {\n    try {\n      const subscription_id = (await this.getSubscriptionDetails())\n        .subscription_id;\n      const res = await axiosClient.delete(\"/v1/portfolio/unsubscribe\", {\n        data: {\n          subscription_id,\n          account_id: this.account_id,\n        },\n      });\n      return res.data\n    } catch (e:any) {\n      \n    //  throw new HttpException(\n    //    e.data,\n    //    e.status\n    //  );\n  }\n  }\n  async placeIndividualStockBuyOrder({\n    stockTicker,\n    qty,\n    type,\n  }: {\n    stockTicker: string;\n    qty: string | undefined;\n    type: string;\n  }) {\n    await this.unsubscribeFromPortfolio();\n    const orderTypes = {\n      Market: \"market\",\n      \"Limit Price\": \"limit\",\n    };\n    const res = await axiosClient.post(\n      \"/v1/trading/createOrder\",\n      {\n        symbol: stockTicker,\n        qty: qty,\n        side: \"buy\",\n        time_in_force: \"day\",\n        type: orderTypes[type],\n      },\n      {\n        params: {\n          account_id: this.account_id,\n        },\n      }\n    );\n    return res?.data;\n  }\n  async subscribePortfolio({ portfolio_id }: { portfolio_id: string }) {\n    try {\n      const res = await axiosClient.post(\"/v1/portfolio/subscribe\", {\n        portfolio_id: portfolio_id,\n        account_id: this.account_id,\n      });\n    } catch (e) {\n      console.log(e.response.data);\n      if (\n        e?.response?.data?.message ===\n        \"cannot create portfolio subscription when you have open orders\"\n      ) {\n        throw new Error(\n          \"Cannot subscribe to portfolio when you have pending orders.\"\n        );\n      } else if (\n        e?.response?.data?.message ===\n        \"Can not change portfolio preference for another 5 days.\"\n      ) {\n        throw new Error(\n          \"Can not change portfolio preference for another 5 days.\"\n        );\n      }\n      throw new Error(\"Some error has occurred\");\n    }\n  }\n  async getSubscriptionDetails() {\n    try {\n      const res = await axiosClient.get(\"/v1/portfolio/subscriptionDetails\", {\n        params: {\n          account_id: this.account_id,\n        },\n      });\n  \n      return res.data;\n    } catch (error:any) {\n      \n      if (error.response) {\n        // The request was made, but the server responded with a non-2xx status code\n        console.error(\"Response Status:\", error.response.status);\n        console.error(\"Response Data:\", error.response.data);\n        throw new Error(`HTTP error: ${error.response.status}`);\n      } else if (error.request) {\n        // The request was made, but no response was received\n        //console.error(\"No response received\");\n        throw new Error(\"No response received\");\n      } else {\n        // Something happened in setting up the request that triggered an Error\n        //console.error(\"Error:\", error.message);\n        throw new Error(error.message);\n      }\n    }\n  }\n  \n\n  async getTransactionHistory() {\n    const res = await axiosClient.get(\"/v1/trading/getOrderHistory\", {\n      params: {\n        account_id: this.account_id,\n      },\n    });\n    return res.data;\n  }\n  async getNews({ limit, symbols }: any) {\n    const data = await axiosClient.get(\"/v1/news/getNews\", {\n      params: {\n        limit: 5,\n        symbols: \"SPY\",\n      },\n    });\n    return data.data;\n  }\n  async getHistoricalStockData({ symbol }: any) {\n    const data = await axiosClient.get(\"/v1/assets/getHistoricDataBySymbol\", {\n      params: {\n        symbol,\n      },\n    });\n    return data.data;\n  }\n\n  async getLatestStockData({ symbol }: any) {\n    const data = await axiosClient.get(\"/v1/assets/getLatestPriceBySymbol\", {\n      params: {\n        symbol,\n      },\n    });\n    return data.data;\n  }\n\n  async getJournalsIn() {\n    const data = await axiosClient.get(\"/v1/funding/fetchJournals\", {\n      params: {\n        to_account: this.account_id,\n      },\n    });\n    return data.data;\n  }\n\n  async getJournalsOuts() {\n    const data = await axiosClient.get(\"/v1/funding/fetchJournals\", {\n      params: {\n        from_account: this.account_id,\n      },\n    });\n    return data.data;\n  }\n  async getPortfolios() {\n    const data = await axiosClient.get(\"/v1/portfolio/\");\n    return data.data;\n  }\n  async withdrawCash(amount: any) {\n    try{\n      \n    const data = await axiosClient.post(`/v1/funding/fundAccount`, {\n      from_account: this.account_id,\n      amount: amount,\n    });}catch(e:any){\n      throw new HttpException(\n        e.response.data.message,\n        e.response.status\n      );\n    }\n  }\n\n  async cancelPendingOrder(order_id: any) {\n    const data = await axiosClient.delete(`/v1/trading/cancelOrder`, {\n      params: {\n        account_id: this.account_id,\n        order_id: order_id,\n      },\n    });\n  }\n\n  async getCorporateActions() {\n    const data = await axiosClient.get(\n      `/v1/corporateActions/getCorporateActionsAccountId?accountId=${this.account_id}`\n    );\n    return data.data;\n  }\n\n  async getAccountActivites() {\n    const res = await axiosClient.get(\"/v1/accounts/getAccountActivities\", {\n      params: {\n        accountId: this.account_id,\n      },\n    });\n    return res.data;\n  }\n\n  async fetchPortfolioName(portfolio_id:string) {\n    try {\n      const res = await axiosClient.post(\"/v1/portfolio/fetchportfolioname\", {\n        portfolio_id: portfolio_id,\n      });\n      return res?.data\n    } catch (e:any) {\n      console.log(e.response.data);\n      \n      throw new Error(\"Some error has occurred\");\n    }\n  }\n}\n\n\n","import React from \"react\";\nimport {\n    View,\n    Text,\n    StyleSheet,\n    Modal,\n    Dimensions,\n    Button,\n    TouchableOpacity,\n    ActivityIndicator\n} from 'react-native'\nimport { BlurView } from 'expo-blur';\nimport LottieView from 'lottie-react-native';\nimport {AntDesign} from '@expo/vector-icons'\nexport default function SpinnerModal({\n    isSuccess,\n    message,\n    subMessage,\n    show,\n    closeModal,\n    onClose\n} : any) {\n    return(\n        <Modal visible={show} transparent={true} animationType='fade' onDismiss={onClose}>\n            <View style={{height:Dimensions.get('window').height, width : Dimensions.get('window').width,backgroundColor:'rgba(127,127,127,0.5)', alignItems:'center',justifyContent:'center'}}>\n                <View style={{height:200, width:200,backgroundColor:'#fff', borderRadius:6, flexDirection:'row', overflow:'hidden', alignItems:'center',justifyContent:'center'}}>\n                    <ActivityIndicator size=\"large\" color={\"#004DBC\"}/>\n                    \n\n                {/* <Button title=\"close\" onPress={closeModal}/> */}\n\n                </View>\n            </View>\n        </Modal>\n    )\n}","\nimport {\n    View,\n    Text,\n    StyleSheet,\n    Image,\n    StatusBar,\n    TextInput,\n    TouchableOpacity,\n    Button,\n    KeyboardAvoidingView,\n    Animated\n} from 'react-native';\nimport Constants from 'expo-constants';\nimport { AuthScreenWrapperStyle } from './AuthScreenWrapper/AuthScreenWrapperStyle';\nimport React,{ useEffect, useRef, useState } from 'react';\nimport { HideKeyboard } from '../miscComponents/HideKeyboard';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport LegalToolTip from './AuthScreenWrapper/LegalToolTip';\nimport { Entypo, Feather, Ionicons, MaterialIcons } from '@expo/vector-icons'; \nimport { AppConstants } from '../../assets/AppConstants';\nimport { NavigationProp } from '@react-navigation/native';\n\n\nexport default function SignupScreenWrapper({children, navigation, showBackButton, backButtonFunction, showLogoutButton, percentageValue} : {children : React.ReactNode, navigation : any, showBackButton: boolean, backButtonFunction? : any, showLogoutButton? : any, percentageValue : number}) {\n    const AnimatorRef = useRef(new Animated.Value(0)).current\n    \n    const animatorFunction = (toValue : number) => {\n        Animated.timing(AnimatorRef,{\n            toValue,\n            useNativeDriver:false,\n            duration: 500,\n        }).start()\n    }\n\n    useEffect(() => {\n        animatorFunction(percentageValue)\n    },[percentageValue])\n\n    const animValue = AnimatorRef.interpolate({\n        inputRange : [0,1],\n        outputRange : ['0%', '100%']\n    })\n\n    return (\n        <HideKeyboard>\n        <View style={AuthScreenWrapperStyle.viewMain}>\n            <StatusBar barStyle = 'dark-content'/>\n            <View style = {{...AuthScreenWrapperStyle.header, flexDirection:'column',justifyContent:'center'}}>\n                {showBackButton && <TouchableOpacity style={{\n                    width:'100%',\n                    paddingHorizontal:20\n                }}>\n                    <Ionicons \n                    name=\"arrow-back-outline\" \n                    size={32} \n                    color=\"#9097AC\" \n                    onPress={backButtonFunction ?  backButtonFunction : ()=>  navigation.goBack() }\n                    />\n                </TouchableOpacity>}\n\n                {showLogoutButton && <TouchableOpacity style={{\n                    width:'100%',\n                    paddingHorizontal:20,\n                    alignItems:'flex-end',\n                    // backgroundColor:'#eee'\n                }}>\n                    <MaterialIcons\n                    name=\"logout\" \n                    size={24} \n                    color=\"#9097AC\" \n                    onPress={backButtonFunction ?  backButtonFunction : ()=>  navigation.goBack() }\n                    />\n                </TouchableOpacity>}\n            </View>\n            <View\n            style = {{ width:'100%', padding:20, flexDirection:'row'}}\n            >\n                <Image source={require('../../assets/images/tree.png')} style={{height:36,width:36}}/>\n                <View style={{marginLeft:30, flex:1}}>\n                    <Text style={{fontFamily:'ArialNova', color:'#A4B3C4'}}>\n                        Your profile is <Text style={{fontFamily:'ArialNova-Bold'}}>{Math.ceil(percentageValue * 100)}% complete</Text>\n                    </Text>\n                    <View style={{width:'100%', height:4, marginTop:6, borderRadius:2, backgroundColor:'#004DBC44'}}>\n                        <Animated.View style={{backgroundColor:'#004DBC', height:'100%', width:animValue}}>\n\n                        </Animated.View>\n                    </View>\n                </View>\n            </View>\n\n            <KeyboardAvoidingView style={{...AuthScreenWrapperStyle.body, height:AuthScreenWrapperStyle.body.height - 60, paddingTop:0}} behavior=\"padding\">\n            {children}\n            </KeyboardAvoidingView>\n            <View style={{...AuthScreenWrapperStyle.footer}}>\n                <Text style={{color:AppConstants.loginHeaderBlue, fontFamily:'ArialNova'}}>\n                {'\\u00A9'} 2023 Elphinstone,  Inc.\n                </Text>\n                <LegalToolTip contactUsRoute = {() => navigation.navigate('ContactUs')}>\n                <Entypo name=\"lock\" size={24} color =\"#A4B3C4\"/>\n                </LegalToolTip>\n            </View>\n        </View>\n        \n        </HideKeyboard>\n    )\n}","import {\n    View,\n    KeyboardAvoidingView,\n    Text,\n    TouchableOpacity,\n    Dimensions,\n    TextInput,\n    Keyboard,\n    Image,\n    ScrollView\n} from 'react-native'\nimport { AppConstants, humanReadableDate } from '../../../../assets/AppConstants';\nimport { Entypo, Feather } from '@expo/vector-icons'; \nimport {useRef, useState} from 'react'\nimport { GlobalStyles } from '../../../GlobalStyles';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport {AntDesign} from '@expo/vector-icons'\nimport CustomTextInput from './SignupMiscComponents/CustomTextInput';\nimport HorizontalNavigatior from '../../../miscComponents/HorizontalNavigator';\nimport CountrySelector from './SignupMiscComponents/CountrySelector';\nimport CustomSelector from './SignupMiscComponents/CustomSelector';\nimport { usePostHog } from 'posthog-react-native';\n\n\nexport default function SignupOptionalDetails({goToNext, goToPrev, userData, setUserData, updateUser} : {goToNext : ()=>void, goToPrev : ()=> void, userData : any, setUserData : any, updateUser: any}){\n\n    const employmentStatusInputRef = useRef<any>()\n    const employerNameInputRef = useRef<any>()\n    const employerAddressInputRef = useRef<any>()\n    const jobTitleInputRef = useRef<any>()\n    const bankNameInputRef = useRef<any>()\n    const bankAccountNumberInputRef = useRef<any>()\n    const routingNumberInputRef = useRef<any>()\n    const trustedContactNameInputRef = useRef<any>()\n    const trustedContactLastNameInputRef = useRef<any>()\n    const trustedContactEmailInputRef = useRef<any>()\n    const trustedContactNumberInputRef = useRef<any>()\n    const posthog = usePostHog()\n\n\n    const [accountType, setAccountType] = useState(userData.accountType || \"\")\n    const [selectedStatus, setSelectedStatus] = useState<any>(userData.employmentStatus || \"Employed\")\n    const [pakistaniBank, setPakistaniBank] = useState(\"\")\n    const SignupSchema = Yup.object().shape({\n        employerName : Yup.string(),\n        employerAddress :  Yup.string(),\n        jobTitle :  Yup.string(),\n        trustedContactName: Yup.string(),\n        trustedContactLastName: Yup.string(),\n        trustedContactEmail : Yup.string(),\n        trustedContactNumber : Yup.string(),\n        bankName : Yup.string(),\n        bankAccountNumber : Yup.string(),\n        routingNumber : Yup.string()    \n      });\n    \n    return(\n        <KeyboardAvoidingView behavior='height' style={{\n            width:Dimensions.get('window').width,\n            height:'100%',\n            justifyContent:'flex-start',\n            alignItems:'flex-start',\n            paddingHorizontal:20\n            }}>\n                <ScrollView style={{width:'100%'}} showsVerticalScrollIndicator={false}>\n                    <View onStartShouldSetResponder={()=>true} style={{width:'100%'}}>\n\n                <View style={{flexDirection:'row'}}>\n                <Text style={{\n                    // width:'100%',\n                    fontFamily:'PlayfairDisplay_700Bold',\n                    fontSize:32,\n                    color:AppConstants.loginHeaderBlue,\n\n                }}>\n                    Elphinstone US{'\\n'}Onboarding\n                </Text>\n                <TouchableOpacity style={{flex:1, alignItems:'flex-end', justifyContent:'center'}} onPress={ () => {\n                    posthog?.capture('Onboarding : Next button pressed on optional details screen (Skipped)')\n                    updateUser({\n                        \n                        meta : {\n                            profile_start_ts : userData.profile_start_ts,\n                            profile_completeness : 0.6,\n                            signup_page_location : -8\n                        }\n                    },goToNext)\n                }}>\n                    <Text style={{color:'#004DBC', fontSize:16, paddingRight:10}}>\n                        Skip\n                    </Text>\n                </TouchableOpacity>\n                </View>\n\n                <Text style={{fontFamily:'ArialNova', color:'#A4B3C4', paddingVertical:10, fontSize:16}}>\n                    You can skip this optional information\n                </Text>\n                \n                <Formik\n                initialValues={{ \n                    employerName : userData.employerName,\n                    employerAddress : userData.employerAddress,\n                    jobTitle : userData.jobTitle,\n                    bankName : userData.bankName,\n                    bankAccountNumber : userData.bankAccountNumber,\n                    routingNumber : userData.routingNumber,\n                    trustedContactName: userData.trustedContactName,\n                    trustedContactLastName: userData.trustedContactLastName,\n                    trustedContactEmail : userData.trustedContactEmail,\n                    trustedContactNumber : userData.trustedContactNumber,\n                }}\n                validationSchema={SignupSchema}\n                onSubmit={values => {\n                    \n                    setUserData({...userData, ...values, employmentStatus: selectedStatus === 'Freelancer' ? 'EMPLOYED' : selectedStatus.toUpperCase()})\n                    posthog?.capture('Onboarding : Next button pressed on optional details screen', {\n                        employer_name : values.employerName,\n                        employer_address : values.employerAddress,\n                        employment_position : values.jobTitle,\n                        bank_details : {\n                            bank_type : accountType,\n                            bank_name : values.bankName,\n                            bank_account_number : values.bankAccountNumber,\n                            routing_number : ['Wise account','Payoneer account','USD bank account in USA'].includes(accountType) ? values.routingNumber : \"\",\n                            swift_code : !['Wise account','Payoneer account','USD bank account in USA'].includes(accountType) ? values.routingNumber : \"\",\n                        },\n                        trusted_contact: {\n                            given_name: values.trustedContactName,\n                            family_name: values.trustedContactLastName,\n                            email_address: values.trustedContactEmail,\n                            phone_number: values.trustedContactNumber\n                        },\n                    })\n                    updateUser({\n                        employer_name : values.employerName,\n                        employer_address : values.employerAddress,\n                        employment_position : values.jobTitle,\n                        bank_details : {\n                            bank_type : accountType,\n                            bank_name : values.bankName,\n                            bank_account_number : values.bankAccountNumber,\n                            routing_number : ['Wise account','Payoneer account','USD bank account in USA'].includes(accountType) ? values.routingNumber : \"\",\n                            swift_code : !['Wise account','Payoneer account','USD bank account in USA'].includes(accountType) ? values.routingNumber : \"\",\n                        },\n                        trusted_contact: (values.trustedContactName != \"\" && values.trustedContactLastName != \"\") ?  {\n                            given_name: values.trustedContactName,\n                            family_name: values.trustedContactLastName,\n                            email_address: values.trustedContactEmail,\n                            phone_number: values.trustedContactNumber\n                        } : undefined,\n                        meta : {\n                            profile_start_ts : humanReadableDate(userData.profile_start_ts),\n                            profile_completeness : 0.6,\n                            signup_page_location : -9\n                        }\n\n                    },goToNext)\n                }}\n                >\n                {({ handleChange, handleBlur, handleSubmit, values, errors, touched }) => (\n                    <>\n                \n                <Text style={{fontFamily:'ArialNova-Bold', color:'#004DBC', paddingTop:30, fontSize:18}}>\n                Employment Information\n                </Text>\n\n                <Text\n                style={{\n                    fontFamily:'ArialNova',\n                    fontSize:18,\n                    // lineHeight:32,\n                    paddingTop:20\n                }}\n                >\n              Employer name \n                </Text>\n                <CustomTextInput\n                reference={employerNameInputRef}\n                touched={touched.employerName}\n                errors={errors.employerName}\n                value = {values.employerName}\n                handleChange={handleChange('employerName')}\n                handleBlur={handleBlur('employerName')}\n                placeholder={\"e.g., Nanotech Solutions Pvt. Ltd.\"}\n                />\n\n                <Text\n                style={{\n                    fontFamily:'ArialNova',\n                    fontSize:18,\n                    // lineHeight:32,\n                    paddingTop:20\n                }}\n                >\n                Employer address \n                </Text>\n                <CustomTextInput\n                reference={employerAddressInputRef}\n                touched={touched.employerAddress}\n                errors={errors.employerAddress}\n                value = {values.employerAddress}\n                handleChange={handleChange('employerAddress')}\n                handleBlur={handleBlur('employerAddress')}\n                placeholder={\"e.g., Suite 404, Fortune Tower, Shahra-e-Faisal, Kar\"}\n                />\n\n                <Text\n                style={{\n                    fontFamily:'ArialNova',\n                    fontSize:18,\n                    // lineHeight:32,\n                    paddingTop:20\n                }}\n                >\n                Occupation/Job title \n                </Text>\n                <CustomTextInput\n                reference={jobTitleInputRef}\n                touched={touched.jobTitle}\n                errors={errors.jobTitle}\n                value = {values.jobTitle}\n                handleChange={handleChange('jobTitle')}\n                handleBlur={handleBlur('jobTitle')}\n                placeholder={\"Operations Manager\"}\n                />\n\n\n                <Text style={{fontFamily:'ArialNova-Bold', color:'#004DBC', paddingTop:30, fontSize:18}}>\n                    Bank Information\n                </Text>\n\n                <Text\n                style={{\n                    fontFamily:'ArialNova',\n                    fontSize:18,\n                    // lineHeight:32,\n                    paddingTop:20\n                }}\n                >\n                Account Type\n                </Text>\n                <CustomSelector\n                selectedValue={accountType}\n                setValue={(value : string) => {\n                    setAccountType(value);\n                    if (value === 'Wise account'){\n                        values.bankName = 'WISE'\n                    }\n                    else if(value === 'Payoneer account'){\n                        values.bankName = 'PAYONEER'\n                    }\n                    else{\n                        values.bankName = ''\n                    }\n                    values.bankAccountNumber = ''\n                    values.routingNumber = ''\n\n                }}\n                itemList={['Wise account','Payoneer account','USD bank account in USA','USD bank account in Pakistan','Non US bank account']}\n                />\n\n                {\n                    !['Wise account','Payoneer account'].includes(accountType) &&\n                    <>\n                        <Text\n                        style={{\n                            fontFamily:'ArialNova',\n                            fontSize:18,\n                            // lineHeight:32,\n                            paddingTop:20\n                        }}\n                        >\n                        Bank Name\n                        </Text>\n                        { accountType === 'USD bank account in Pakistan' ?\n                \n                        <CustomSelector\n                        selectedValue={pakistaniBank}\n                        setValue= {(value : string) => {\n                            values.bankName = value\n                            values.routingNumber = PAKISTAN_BANKS[value]\n                            setPakistaniBank(value)\n                        }}\n                        itemList = {Object.keys(PAKISTAN_BANKS)}\n                        />\n\n                        :\n                            <CustomTextInput\n                        reference={bankNameInputRef}\n                        touched={touched.bankName}\n                        errors={errors.bankName}\n                        value = {values.bankName}\n                        handleChange={handleChange('bankName')}\n                        handleBlur={handleBlur('bankName')}\n                        placeholder={\"e.g., Chase\"}\n                        />\n                        }\n                    </>\n                }\n                <Text\n                style={{\n                    fontFamily:'ArialNova',\n                    fontSize:18,\n                    // lineHeight:32,\n                    paddingTop:20\n                }}\n                >\n              {['Wise account','Payoneer account','USD bank account in USA'].includes(accountType) ? 'Bank account number' : 'IBAN / Account number'}\n                </Text>\n                <CustomTextInput\n                reference={bankAccountNumberInputRef}\n                touched={touched.bankAccountNumber}\n                errors={errors.bankAccountNumber}\n                value = {values.bankAccountNumber}\n                handleChange={handleChange('bankAccountNumber')}\n                handleBlur={handleBlur('bankAccountNumber')}\n                placeholder={\"e.g., 100457845621458\"}\n                />\n\n{\n                accountType != 'USD bank account in Pakistan' &&\n                <>\n                <Text\n                style={{\n                    fontFamily:'ArialNova',\n                    fontSize:18,\n                    // lineHeight:32,\n                    paddingTop:20\n                }}\n                >\n               {['Wise account','Payoneer account','USD bank account in USA'].includes(accountType) ? 'Routing number' : 'SWIFT Code'}\n                </Text>\n                <CustomTextInput\n                reference={routingNumberInputRef}\n                touched={touched.routingNumber}\n                errors={errors.routingNumber}\n                value = {values.routingNumber}\n                handleChange={handleChange('routingNumber')}\n                handleBlur={handleBlur('routingNumber')}\n                placeholder={\"e.g., 5344\"}\n                />\n                </>\n                }\n\n                <Text style={{fontFamily:'ArialNova-Bold', color:'#004DBC', paddingTop:30, fontSize:18}}>\n                Trusted Contact Information\n                </Text>\n                <Text style={{fontFamily:'ArialNova', fontSize:16, lineHeight:32, color:'black', paddingTop:14,}}>\n\n                    A trusted contact is a person you authorize your financial firm to contact in limited circumstances, such as if there is a concern about activity in your account and they have been unable to get in touch with you. \n\n {'\\n\\n'}A trusted contact may be a family member, attorney, accountant or another third-party who you believe would respect your privacy and know how to handle the responsibility. The trusted person should be 18 years old or older.\n                    </Text>\n\n                    <Text\n                style={{\n                    fontFamily:'ArialNova',\n                    fontSize:18,\n                    // lineHeight:32,\n                    paddingTop:20\n                }}\n                >\n                First Name\n                </Text>\n                <CustomTextInput\n                reference={trustedContactNameInputRef}\n                touched={touched.trustedContactName}\n                errors={errors.trustedContactName}\n                value = {values.trustedContactName}\n                handleChange={handleChange('trustedContactName')}\n                handleBlur={handleBlur('trustedContactName')}\n                placeholder={\"e.g., Arsalan\"}\n                />\n\n                <Text\n                style={{\n                    fontFamily:'ArialNova',\n                    fontSize:18,\n                    // lineHeight:32,\n                    paddingTop:20\n                }}\n                >\n              Last name\n                </Text>\n                <CustomTextInput\n                reference={trustedContactLastNameInputRef}\n                touched={touched.trustedContactLastName}\n                errors={errors.trustedContactLastName}\n                value = {values.trustedContactLastName}\n                handleChange={handleChange('trustedContactLastName')}\n                handleBlur={handleBlur('trustedContactLastName')}\n                placeholder={\"e.g., Mirza\"}\n                />\n\n                <Text\n                style={{\n                    fontFamily:'ArialNova',\n                    fontSize:18,\n                    // lineHeight:32,\n                    paddingTop:20\n                }}\n                >\n                Email address\n                </Text>\n                <CustomTextInput\n                reference={trustedContactEmailInputRef}\n                touched={touched.trustedContactEmail}\n                errors={errors.trustedContactEmail}\n                value = {values.trustedContactEmail}\n                handleChange={handleChange('trustedContactEmail')}\n                handleBlur={handleBlur('trustedContactEmail')}\n                placeholder={\"email address\"}\n                \n                />\n\n                <Text\n                style={{\n                    fontFamily:'ArialNova',\n                    fontSize:18,\n                    // lineHeight:32,\n                    paddingTop:20\n                }}\n                >\n                What is their mobile number?\n                </Text>\n                <CustomTextInput\n                reference={trustedContactNumberInputRef}\n                touched={touched.trustedContactNumber}\n                errors={errors.trustedContactNumber}\n                value = {values.trustedContactNumber}\n                handleChange={handleChange('trustedContactNumber')}\n                handleBlur={handleBlur('trustedContactNumber')}\n                placeholder={\"phone number\"}\n                keyboardType=\"phone-pad\"\n                />\n                \n                <HorizontalNavigatior showBackButton nextFunction={handleSubmit} backFunction={goToPrev}/>\n            </>)}\n            </Formik>\n            \n            </View>\n            <View style={{height:100}} />\n            </ScrollView>\n            \n        </KeyboardAvoidingView>\n    )\n}\n\n\nconst PAKISTAN_BANKS = {\n    \"Al Baraka Bank (Pakistan) Limited\": \"AIINPKKA\",\n    \"Allied Bank Limited\": \"ABPAPKKA\",\n    \"Askari Bank\": \"ASCMPKKA\",\n    \"Bank Alfalah Limited\": \"ALFHPKKA\",\n    \"Bank Al-Habib Limited\": \"BAHLPKKA\",\n    \"BankIslami Pakistan Limited\": \"BKIPPKKA\",\n    \"Bank of Punjab\": \"BPUNPKKA\",\n    \"Bank of Khyber\": \"KHYBPKKA\",\n    \"Deutsche Bank A.G\": \"DEUTPKKA\",\n    \"Dubai Islamic Bank Pakistan Limited\": \"DUIBPKKA\",\n    \"Faysal Bank Limited\": \"FAYSPKKA\",\n    \"First Women Bank Limited\": \"FWOMPKKA\",\n    \"Habib Bank Limited\": \"HABBPKKA\",\n    \"Habib Metropolitan Bank Limited\": \"MPBLPKKA\",\n    \"Industrial and Commercial Bank of China\": \"ICBPPKKA\",\n    \"Industrial Development Bank of Pakistan\": \"IDBPPKKA\",\n    \"JS Bank Limited\": \"JSBLPKKA\",\n    \"MCB Bank Limited\": \"MCBMPKKA\",\n    \"MCB Islamic Bank Limited\": \"MUCBPKK1\",\n    \"Meezan Bank Limited\": \"MEZNPKKA\",\n    \"National Bank of Pakistan\": \"NBPAPKKA\",\n    \"Summit Bank Pakistan\": \"SUMBPKKA\",\n    \"Standard Chartered Bank (Pakistan) Limited\": \"SCBLPKKX\",\n    \"Sindh Bank\": \"SINDPKKA\",\n    \"The Bank of Tokyo-Mitsubishi UFJ\": \"BOTKPKKA\",\n    \"United Bank Limited\": \"UNILPKKA\",\n    \"Zarai Taraqiati Bank Limited\": \"ZTBLPKKA\"\n  }","\nimport {\n    View,\n    Text,\n    StyleSheet,\n    Image,\n    StatusBar,\n    TextInput,\n    TouchableOpacity,\n    Button,\n    Animated,\n    ScrollView,\n    KeyboardAvoidingView,\n    Dimensions,\n    Alert,\n    Platform\n} from 'react-native';\nimport React, { useRef, useState, useEffect, useContext } from 'react';\nimport AuthScreenWrapper from '../ScreenWrappers/AuthScreenWrapper'\nimport SignupWelcomeScreen from './SignupScreen/SignupComponents/WelcomeScreen';\nimport { NavigationProp } from '@react-navigation/native';\nimport SignupLegalNames from './SignupScreen/SignupComponents/SignupLegalNames';\nimport SignupTaxResidence from './SignupScreen/SignupComponents/SignupTaxResidence';\nimport SignupCitizenship from './SignupScreen/SignupComponents/SignupCitizenship';\nimport SignupDOB from './SignupScreen/SignupComponents/SignupDOB';\nimport SignupBirthCountry from './SignupScreen/SignupComponents/SignupBirthCountry';\nimport SignupIDDetails from './SignupScreen/SignupComponents/SignupIDDetails';\nimport SignupAddress from './SignupScreen/SignupComponents/SignupAddress';\nimport SignupIncomeDetails from './SignupScreen/SignupComponents/SignupIncomeDetails';\nimport SignupEmploymentDetails from './SignupScreen/SignupComponents/SignupEmploymentDetails';\nimport SignupBankDetails from './SignupScreen/SignupComponents/SignupBankDetails';\nimport SignupFundPreference from './SignupScreen/SignupComponents/SignupFundPreference';\nimport SignupAffiliationQs from './SignupScreen/SignupComponents/SignupAffiliationQs';\nimport SignupPEPQuestion from './SignupScreen/SignupComponents/SignupPEPQuestion';\nimport SignupAffiliationDetails from './SignupScreen/SignupComponents/SignupAffiliationDetails';\nimport SignupPEPFollowUps from './SignupScreen/SignupComponents/SignupPEPFollowups';\nimport SignupFATCA from './SignupScreen/SignupComponents/SignupFATCA';\nimport SignupNONUSDeclaration from './SignupScreen/SignupComponents/SignupNONUSDeclaration';\nimport SignupW8 from './SignupScreen/SignupComponents/SignupW8';\nimport SignupTrustedContact from './SignupScreen/SignupComponents/SignupTrustedContact';\nimport SignupDocumentUpload from './SignupScreen/SignupComponents/SignupDocumentUpload';\nimport SignupAgreementsDisclosures from './SignupScreen/SignupComponents/SignupAgreementsDisclosures';\nimport SignupLastScreen from './SignupScreen/SignupComponents/SignupLastScreen';\nimport { AuthContext } from '../components/authProvider';\nimport UserService from '../../api/lib/UserService';\nimport { getISO3FromCountry, getCountryFromISO3 } from '../../assets/countryListISO3';\nimport ResponseModal from '../components/ResponseModal';\nimport publicIP from 'react-native-public-ip';\nimport AlpacaService from '../../api/lib/AlpacaService';\nimport { AppConstants, humanReadableDate } from '../../assets/AppConstants';\nimport SpinnerModal from '../components/SpinnerModal';\nimport { usePostHog } from 'posthog-react-native';\nimport SignupScreenWrapper from '../ScreenWrappers/SignupScreenWrapper';\nimport SignupOptionalDetails from './SignupScreen/SignupComponents/SignupOptionalDetails';\n\n\nconst fund_source_map_back = {\n    'employment_income' : \"Salary\",\n    \"business_income\" : 'Business / self employed',\n    \"family\" : \"Spouse / parents\",\n    'inheritance' : 'Inheritance' ,\n    'investments' : 'Stock / investments',\n    \"savings\" : \"Savings\"\n} \n\nconst fund_source_map = {\n    \"Salary\" : 'employment_income',\n    'Business / self employed' : \"business_income\",\n    \"Spouse / parents\" : \"family\",\n    'Inheritance' :  'inheritance',\n    'Stock / investments' : 'investments',\n    \"Savings\" : \"savings\"\n} \n\nexport default function SignupScreen({ navigation, IP }: { navigation : any, IP :string }) {\n    const [showResponseModal, setResponseModal] = useState(false)\n    const [responseModalConfig, setResponseModalConfig] = useState({\n        isSuccess : null,\n        message : \"\",\n        subMessage : \"\"\n    })\n    const posthog = usePostHog()\n    const {  setSession, ... session } = useContext(AuthContext)\n    const [percentageCompleted, setPercentageCompleted] = useState(0)\n    const [disableButton, setDisableButton] = useState(false)\n    const [userFetched, setUserFetched] = useState(false)\n    const [userData, setUserData] = useState({\n        legalFirstName: \"\",\n        legalMiddleName: \"\",\n        legalLastName: \"\",\n        taxResidence: \"\",\n        citizenship: \"\",\n        dob: \"\",\n        birthCountry: \"\",\n        idType: \"\",\n        idNumber: \"\",\n        idExpirationData: \"\",\n        homeAddress1: \"\",\n        homeAddress2: \"\",\n        city: \"\",\n        zipCode: \"\",\n        state: \"\",\n        addressCountry: \"\",\n        annualHouseholdIncome: \"\",\n        investibleAssets: \"\",\n        sourceOfFunds: \"\",\n        employmentStatus: \"\",\n        employerName: \"\",\n        employerAddress: \"\",\n        jobTitle: \"\",\n        bankName: \"\",\n        bankAccountNumber: \"\",\n        routingNumber: \"\",\n        fundPreference: \"\",\n        riskTolerance: \"\",\n        isUSBrokerAffiliated: false,\n        isExecutiveOrShareholderPC: false,\n        isSeniorPoliticalFigure: false,\n        isRelatedToPoliticalFigure: false,\n        brokerRegulatorName: \"\",\n        brokerRegulatorAddress: \"\",\n        brokerRegulatorEmail: \"\",\n        publicCompanyName: \"\",\n        publicCompanyAddress: \"\",\n        publicCompanyCity : \"\",\n        publicCompanyState: \"\",\n        publicCompanyCountry : \"\",\n        publicCompanyEmail: \"\",\n        publicCompanyExchange: \"\",\n        publicCompanyTicker: \"\",\n        isPEP: null,\n        isUserPEP: \"\", //uneeded ?\n        isPEPDomesticOrForeign: \"\",\n        pepCategory: \"\",\n        pepJobTitle: \"\",\n        relatedPEPName: \"\",\n        relatedPEPJobTitle: \"\",\n        relatedPEPRelation: \"\",\n        isUSCitizen: null,\n        isUSPR: null,\n        greenCardNumber: \"\",\n        isUSResident: null,\n        visaType: \"\",\n        visaExpirationDate: \"\",\n        nonUSDeclaration: null,\n        trustedContactName: \"\",\n        trustedContactLastName: \"\",\n        trustedContactEmail: \"\",\n        trustedContactNumber: \"\",\n        photoIDFront: null,\n        photoIDBack:null,\n        bankStatement: null,\n        customerAgreementAck: null,\n        digitalSignatureAck: null,\n        paymentGateway: \"\",\n        accountType : \"\",\n        profile_start_ts : Date.now()\n    \n    })\n    const location = useRef(new Animated.Value(0)).current\n    const [locationState, setLocationState] = useState(0)\n    function goToNextScreen(locationState: number) {\n        Animated.timing(location, {\n            toValue: locationState,\n            duration: 500,\n            useNativeDriver: true\n        }).start()\n    }\n    async function handleOnboardingSubmit() {\n        setDisableButton(true)\n        let payload = {\n        permanent_resident : userData.isUSPR,\n        id_number : userData.idNumber,\n            disclosures: {\n                is_control_person: userData.isExecutiveOrShareholderPC,\n                is_affiliated_exchange_or_finra: userData.isUSBrokerAffiliated,\n                is_politically_exposed: userData.isSeniorPoliticalFigure,\n                is_us_resident : userData.isUSResident,\n                is_us_citizen : userData.isUSCitizen,\n                is_uspr : userData.isUSPR,\n                immediate_family_exposed: userData.isRelatedToPoliticalFigure,\n                context: [] as any\n            },\n\n        }\n\n        if (userData.isExecutiveOrShareholderPC) {\n            payload.disclosures.context.push({\n                context_type : \"CONTROLLED_FIRM\",\n                company_name : userData.publicCompanyName,\n                company_street_address : userData.publicCompanyAddress,\n                company_city : userData.publicCompanyCity,\n                company_state : userData.publicCompanyState,\n                company_country : userData.publicCompanyCountry,\n                company_compliance_email : userData.publicCompanyEmail\n            })\n        }\n\n        if(userData.isUSBrokerAffiliated) {\n            payload.disclosures.context.push({\n                context_type : \"AFFILIATE_FIRM\",\n                company_name : userData.brokerRegulatorName,\n                company_street_address : userData.brokerRegulatorAddress,\n                company_city : \"\",//append user object ....\n                company_state : \"\",\n                company_country : \"\",\n                company_compliance_email : userData.brokerRegulatorEmail\n            })\n        }\n\n        if(userData.isPEP) {\n            //TODO\n        }\n\n        if(userData.isRelatedToPoliticalFigure) {\n            payload.disclosures.context.push({\n                context_type : \"IMMEDIATE_FAMILY_EXPOSED\",\n                given_name : userData.relatedPEPName.split(\" \")[0],\n                family_name : userData.relatedPEPName.split(\" \")[1] ? userData.relatedPEPName.split(\" \")[1] : \"\",\n                relation : userData.relatedPEPRelation,\n                employment_position : userData.relatedPEPJobTitle\n            })\n        }\n        // console.log(JSON.stringify(payload, null, 2))\n        // console.log(userData.idType === 'USA_SSN' ? 'identity_verification' : 'tax_id_verification')\n        \n        // console.log(\"file:///\" + userData.photoIDFront.uri.split(\"file:/\").join(\"\"))\n        // console.log(userData.photoIDFront.uri)\n        // return\n\n\n        const res = await UserService.updateUser(session.session?.identity.id,{...payload, \"supress_push\" : \"true\", meta : {\n            profile_start_ts : humanReadableDate(userData.profile_start_ts),\n            profile_completeness : 0.6,\n            signup_page_location : -9,\n            profile_end_ts : humanReadableDate(Date.now())\n        }})\n\n\n        const photoIdFrontUploadBody = new FormData()\n        photoIdFrontUploadBody.append(\"sub_type\",\"photoIdFront\")\n        photoIdFrontUploadBody.append('document', {\n            uri: userData.photoIDFront.uri,\n            type: 'image/jpeg',\n            name: 'pid_front.jpg'\n            });\n        let doc_upload_1 = UserService.uploadSingleDocument(session.session?.identity.id,userData.idType === 'USA_SSN' ? 'identity_verification' : 'tax_id_verification',photoIdFrontUploadBody)\n        \n        const bankStatementBody = new FormData()\n        bankStatementBody.append(\"sub_type\",\"bank-statement\")\n        bankStatementBody.append('document', {\n            uri:  userData.bankStatement.uri,\n            type: 'application/pdf',\n            name: 'document.pdf'\n            });\n        let doc_upload_2 = UserService.uploadSingleDocument(session.session?.identity.id,'address_verification',bankStatementBody)\n        let doc_upload_3;\n        if (userData.photoIDBack){\n            const photoIdBackUploadBody = new FormData()\n            photoIdBackUploadBody.append(\"sub_type\",\"photoIdBack\")\n            photoIdBackUploadBody.append('document', {\n                uri: userData.photoIDBack.uri,\n                type: 'image/jpeg',\n                name: 'pid_back.jpg'\n                });\n            doc_upload_3 = UserService.uploadSingleDocument(session.session?.identity.id,userData.idType === 'USA_SSN' ? 'identity_verification' : 'tax_id_verification',photoIdBackUploadBody)\n        }\n        await doc_upload_1\n        await doc_upload_2\n        await doc_upload_3\n\n\n        await UserService.agreements((session.session?.identity.id as string))\n        let account_details;\n        for (let i = 0; i < 5; i++) {\n            try {\n                account_details = await AlpacaService.getAccountId(session.session?.identity.traits.email)\n                break\n            }catch (e){\n                await new Promise((resolve, reject) => setTimeout(resolve,1000))\n            }\n        }\n        posthog?.capture('Onboarding completed')\n        if (account_details.status === \"ONBOARDING\"){\n            navigation.navigate(\"Onfido Screen\",{\n                account_details\n            })\n        }else{\n            setPercentageCompleted(1)\n            setLocationState(locationState-1)\n        }\n    }\n\n    useEffect(() => {\n        UserService.getUser(session.session?.identity.id).then(cb => {\n            setUserData({\n                ...userData,\n                legalFirstName : cb.given_name,\n                legalLastName : cb.family_name,\n                idType : cb.tax_id_type,\n                citizenship: getCountryFromISO3(cb.country_of_citizenship) || '',\n                birthCountry : getCountryFromISO3(cb.country_of_birth) || '',\n                taxResidence : getCountryFromISO3(cb.country_of_tax_residence) || '',\n                visaType : cb.visa_type,\n                visaExpirationDate : cb.visa_expiration_date ? new Date(cb.visa_expiration_date) : \"\",\n                isUSPR : cb.permanent_resident,\n                dob : cb.dob ? new Date(cb.dob) : \"\",\n                idNumber : cb.id_number,\n                homeAddress1 : cb.street_address_1,\n                homeAddress2 : cb.street_address_2,\n                city : cb.city,\n                state : cb.state,\n                zipCode: cb.postal_code,\n                addressCountry : cb.country,\n                employmentStatus : cb.employment_status,\n                employerName : cb.employer_name,\n                employerAddress : cb.employer_address,\n                jobTitle : cb.employment_position,\n                fundPreference : cb.preference === 'conventional' ? \"Conventional\" : (cb.preference === 'islamic' ? \"Islamic\" : \"\"),\n                riskTolerance : cb.risk_tolerance_level || \"\",\n                bankName : cb.bank_details?.bank_name,\n                bankAccountNumber : cb.bank_details?.bank_account_number,\n                routingNumber : cb.bank_details?.routing_number || cb.bank_details?.swift_code,\n                trustedContactName: cb.trusted_contact?.given_name,\n                trustedContactLastName: cb.trusted_contact?.family_name,\n                trustedContactEmail : cb.trusted_contact?.email_address,\n                trustedContactNumber : cb.trusted_contact?.phone_number,\n                annualHouseholdIncome : cb.annual_income_max,\n                investibleAssets : cb.liquid_net_worth_max,\n                sourceOfFunds : fund_source_map_back[cb.funding_source],\n                accountType : cb.bank_details?.bank_type,\n                isExecutiveOrShareholderPC : cb.disclosures?.is_control_person || false,\n                isUSBrokerAffiliated : cb.disclosures?.is_affiliated_exchange_or_finra || false,\n                isSeniorPoliticalFigure : cb.disclosures?.is_politically_exposed || false,\n                isRelatedToPoliticalFigure : cb.disclosures?.immediate_family_exposed || false,\n                isUSCitizen : cb.disclosures?.is_us_citizen || false,\n                isUSResident: cb.disclosures?.is_us_resident || false,\n                profile_start_ts : (cb.meta && cb.meta[0].profile_start_ts) || humanReadableDate(Date.now())\n            })\n            cb.meta && setPercentageCompleted(cb.meta[0].profile_completeness || 0)\n            cb.meta && setLocationState(cb.meta[0].signup_page_location || 0)\n        }).catch().finally(() => setUserFetched(true))\n        posthog?.identify(session.session?.identity?.id,{\n            email : session.session?.identity?.traits.email,\n          })\n    },[])\n\n    useEffect(() => {\n        goToNextScreen(locationState)\n    }, [locationState])\n\n    const logout = async () => {\n        posthog?.reset()\n        setSession(null)\n      }\n    const showBackButton = true\n\n    function launchResponseModal({message, subMessage, isSuccess} : any) {\n        setResponseModalConfig({\n            message,\n            subMessage,\n            isSuccess\n        })\n        setResponseModal(true)\n    }\n\n    async function updateUser(body : any, cb : () => void) {\n        try {\n            const resp = await UserService.updateUser(session.session?.identity.id as string, {...body, supress_push : \"true\"})\n            // console.log(JSON.stringify(resp,null,2))\n            cb()\n        }catch(e) {\n            // console.log(\"Some error\",JSON.stringify(e,null,2))\n            launchResponseModal(AppConstants.GenericErrorResponse)\n        }\n    }\n\n    return (\n        <SignupScreenWrapper navigation={navigation} showBackButton={false} showLogoutButton={true} backButtonFunction={logout} percentageValue={percentageCompleted}>\n            <SpinnerModal show={disableButton}/>\n            <ResponseModal show={showResponseModal} closeModal={()=>setResponseModal(false)} {...responseModalConfig} />\n            <View style={{\n                width: Dimensions.get('window').width,\n                alignItems: 'flex-start',\n                justifyContent: 'flex-start',\n                height: '100%',\n                overflow: 'hidden',\n            }}>\n                <Animated.View style={{\n                    transform: [{\n                        translateX: Animated.multiply(Dimensions.get('window').width, location)\n                    }],\n                    flexDirection: 'row',\n                    justifyContent: 'flex-start',\n                    alignItems: 'flex-start',\n                    height: '100%',\n                    flex: 1\n                }}>\n                    <SignupWelcomeScreen goToNext={() => setLocationState(locationState - 1)} userFetched={userFetched} userData = {userData} IP ={IP}/>\n                    {\n                    userFetched && \n                    <>\n                    \n                    <SignupLegalNames goToNext={() => {setLocationState(locationState - 1); setPercentageCompleted(Math.max(0.1,percentageCompleted))}} goToPrev={() => setLocationState(locationState + 1)} userData={userData} setUserData={setUserData} updateUser = {updateUser}/>\n                    <SignupTaxResidence goToNext={() => {setLocationState(locationState - 1); setPercentageCompleted(Math.max(0.15,percentageCompleted))}} goToPrev={() => setLocationState(locationState + 1)} userData={userData} setUserData={setUserData} updateUser = {updateUser}/>\n                    <SignupCitizenship goToNext={() => {setLocationState(locationState - 1); setPercentageCompleted(Math.max(0.20,percentageCompleted))}} goToPrev={() => setLocationState(locationState + 1)} userData={userData} setUserData={setUserData} updateUser = {updateUser}/>\n                    <SignupDOB goToNext={() => {setLocationState(locationState - 1); setPercentageCompleted(Math.max(0.25,percentageCompleted))}} goToPrev={() => setLocationState(locationState + 1)} userData={userData} setUserData={setUserData} updateUser = {updateUser}/>\n                    <SignupBirthCountry goToNext={() => {setLocationState(locationState - 1); setPercentageCompleted(Math.max(0.30,percentageCompleted))}} goToPrev={() => setLocationState(locationState + 1)} userData={userData} setUserData={setUserData} updateUser = {updateUser}/>\n                    <SignupAddress goToNext={() => {setLocationState(locationState - 1); setPercentageCompleted(Math.max(0.4,percentageCompleted))}} goToPrev={() => setLocationState(locationState + 1)} userData={userData} setUserData={setUserData} updateUser = {updateUser}/>\n                    <SignupIncomeDetails goToNext={() => {setLocationState(locationState - 1); setPercentageCompleted(Math.max(0.5,percentageCompleted))}} goToPrev={() => setLocationState(locationState + 1)} userData={userData} setUserData={setUserData} updateUser = {updateUser}/>\n                    <SignupOptionalDetails goToNext={() => {setLocationState(locationState - 1); setPercentageCompleted(Math.max(0.6,percentageCompleted))}} goToPrev={() => setLocationState(locationState + 1)} userData={userData} setUserData={setUserData} updateUser = {updateUser}/>\n                    <SignupAffiliationQs goToNext={() => {setLocationState(locationState - 1); setPercentageCompleted(Math.max(0.65,percentageCompleted))}} goToPrev={() => setLocationState(locationState + 1)} userData={userData} setUserData={setUserData} updateUser = {updateUser}/>\n                    \n                    {(userData.isExecutiveOrShareholderPC || userData.isUSBrokerAffiliated) &&\n                        <SignupAffiliationDetails goToNext={() => setLocationState(locationState - 1)}  goToPrev={() => setLocationState(locationState + 1)} userData={userData} setUserData={setUserData} updateUser = {updateUser}/>\n                    }\n                    <SignupPEPQuestion goToNext={() => {setLocationState(locationState - 1); setPercentageCompleted(Math.max(0.70,percentageCompleted))}} goToPrev={() => setLocationState(locationState + 1)} userData={userData} setUserData={setUserData} updateUser = {updateUser}/>\n\n                    {userData.isPEP &&\n                        <SignupPEPFollowUps goToNext={() => setLocationState(locationState - 1)}  goToPrev={() => setLocationState(locationState + 1)} userData={userData} setUserData={setUserData} updateUser = {updateUser}/>\n                    }\n                    <SignupFATCA goToNext={() => {setLocationState(locationState - 1); setPercentageCompleted(Math.max(0.75,percentageCompleted))}} goToPrev={() => setLocationState(locationState + 1)} userData={userData} setUserData={setUserData} updateUser = {updateUser}/>\n\n                    {!(userData.isUSCitizen || userData.isUSPR || userData.isUSResident) &&\n\n                        <>\n                            <SignupNONUSDeclaration goToNext={() => setLocationState(locationState - 1)} goToPrev={() => setLocationState(locationState + 1)} userData={userData} setUserData={setUserData} updateUser = {updateUser}/>\n                            <SignupW8 goToNext={() => setLocationState(locationState - 1)} goToPrev={() => setLocationState(locationState + 1)} userData={userData} setUserData={setUserData} updateUser = {updateUser}/>\n                        </>\n                    }\n                    <SignupIDDetails goToNext={() => {setLocationState(locationState - 1); setPercentageCompleted(Math.max(0.85,percentageCompleted))}} goToPrev={() => setLocationState(locationState + 1)} userData={userData} setUserData={setUserData} updateUser = {updateUser}/>\n                    \n                    <SignupDocumentUpload goToNext={() => {setLocationState(locationState - 1); setPercentageCompleted(Math.max(0.99,percentageCompleted))}} goToPrev={() => setLocationState(locationState + 1)} userData={userData} setUserData={setUserData} updateUser = {updateUser}/>\n                    <SignupAgreementsDisclosures goToNext={()=>handleOnboardingSubmit().catch(err => {console.log(JSON.stringify(err,null,2));\n                        launchResponseModal(AppConstants.GenericErrorResponse);    \n                    }).finally(()=>setDisableButton(false))} goToPrev={() => setLocationState(locationState + 1)} userData={userData} setUserData={setUserData} disableButton = {disableButton} updateUser = {updateUser}/>\n                    {/* <SignupPaymentGateway  goToNext = {()=>setLocationState(locationState-1)} goToPrev = {()=>setLocationState(locationState+1)} userData={userData} setUserData={setUserData}/> */}\n                    <SignupLastScreen goToNext={logout} goToPrev={() => {setLocationState(locationState + 1); console.log(JSON.stringify(userData,null,2))}} userData={userData} setUserData={setUserData} />\n                    </>\n                    }\n                </Animated.View>\n            </View>\n        </SignupScreenWrapper>\n    )\n}","import React from 'react'\nimport {\n    View,\n    Text,\n    StyleSheet,\n    TouchableOpacity\n} from 'react-native'\nimport {Feather, Ionicons, MaterialCommunityIcons} from '@expo/vector-icons'\nimport { AppConstants } from '../../../assets/AppConstants'\n\nexport default function CustomTabBar({ state, descriptors, navigation } : any){\n    return(\n        <View style={{width:'100%', height:95, backgroundColor:'#FFF', flexDirection:'row', alignItems:'center', justifyContent:'space-around', paddingBottom:20, paddingHorizontal:'5%',\n        shadowColor: \"#000\",\n        shadowOffset: {\n            width: 0,\n            height: 2,\n        },\n        shadowOpacity: 0.15,\n        shadowRadius: 20,\n        elevation:10}}>\n            <TouchableOpacity activeOpacity={1} onPress={()=>navigation.navigate('Home')} style={{alignItems:'center'}}>\n            <Feather name=\"home\" size={30} color=\"#8B97A8\" />\n            {(state.index === 0) &&\n            <Text>\n                {'\\u2022'}\n            </Text>\n            }\n            </TouchableOpacity>\n\n            \n\n            <TouchableOpacity activeOpacity={1} onPress={()=>navigation.navigate('Add Funds')} style={{alignItems:'center'}}>\n            <Ionicons name=\"ios-add-circle-outline\" size={30} color=\"#8B97A8\" />\n            {(state.index === 1) &&\n            <Text>\n                {'\\u2022'}\n            </Text>\n            }\n            </TouchableOpacity>\n            \n            \n            <TouchableOpacity onPress={()=>navigation.navigate('Invest')} style={{height:100, width: 100,borderWidth:10, borderColor:'#FEFEFE', borderRadius:50, alignItems:'center',justifyContent:'center', marginTop:-60}}>\n            <View style={{height:80, width: 80, backgroundColor:AppConstants.loginHeaderBlue, borderRadius:40, alignItems:'center', justifyContent:'center'}}>\n             <View style={{height:60, width: 60, backgroundColor:AppConstants.loginHeaderBlue, borderRadius:30, alignItems:'center', justifyContent:'center', borderWidth:0, borderColor:'white'}}>   \n             <Feather name=\"dollar-sign\" size={32} color=\"white\" />\n            </View>\n            </View>\n            </TouchableOpacity>\n\n\n            <TouchableOpacity activeOpacity={1} style={{alignItems:'center'}} onPress={()=>navigation.navigate('Withdraw')}>\n            <Ionicons name=\"ios-remove-circle-outline\" size={30} color=\"#8B97A8\" />\n            {(state.index === 3) &&\n            <Text>\n                {'\\u2022'}\n            </Text>\n            }\n            </TouchableOpacity>\n            \n            \n            \n            <TouchableOpacity activeOpacity={1} style={{alignItems:'center'}} onPress={()=>navigation.navigate('Markets')}>\n            <MaterialCommunityIcons name=\"view-column-outline\" size={30} color=\"#8B97A8\" />\n            {(state.index === 4) &&\n            <Text>\n                {'\\u2022'}\n            </Text>\n            }\n            </TouchableOpacity>\n\n            \n\n        </View>\n    )\n}","import React from 'react'\nimport {\n    View,\n    Text,\n    StyleSheet,\n    Dimensions,\n    Button,\n    TouchableOpacity\n} from 'react-native'\n\nimport {MaterialIcons} from '@expo/vector-icons'\nimport { AppConstants } from '../../../assets/AppConstants'\n\nexport default function BigButtonSquare({title, Icon, text, isInverted, onPress} : any){\n    return(\n    <TouchableOpacity style={{\n        width:Dimensions.get('window').width *0.45, \n        backgroundColor: !isInverted ? '#fff' : '#004DBC',\n        aspectRatio : 175/175,\n        borderRadius:6,\n        marginHorizontal:Dimensions.get('window').width *0.0125,\n        marginVertical:10,\n        paddingHorizontal:15,\n        borderWidth:0,\n        shadowColor: \"#000\",\n        shadowOffset: {\n            width: 0,\n            height: 2,\n        },\n        shadowOpacity: 0.1,\n        shadowRadius: 9,\n        elevation:10\n        }}\n        onPress={onPress}\n        >\n            <View style={{width:'100%', alignItems:'flex-end', marginTop:-4, }}>\n                <MaterialIcons name=\"bookmark\" size={30} color={!isInverted ? \"#3293F6\" : 'white'} />\n                \n            </View>\n            <View style={{flex:1, justifyContent:'space-evenly'}}>\n            <View>\n            <View>\n                    {<Icon color={isInverted ? \"white\" : AppConstants.loginHeaderBlue}/>}\n            </View>\n            <Text style={{\n                fontFamily:'ArialNova-Bold',\n                color: !isInverted ? AppConstants.loginHeaderBlue : 'white',\n                marginTop:10,\n                fontSize: 20\n            }}>\n                {title}\n            </Text>\n            </View>\n            <Text style={{\n                fontFamily:'ArialNova',\n                fontSize:12.5,\n                color: !isInverted ? '#3293F6' : 'white',\n                marginTop:20,\n                paddingBottom:10\n\n                // letterSpacing:-0.75\n            }}>\n                {text}\n            </Text>\n            </View>\n    </TouchableOpacity>\n    \n    )\n\n}","import axios from \"axios\";\n\nexport default class MiscService {\n    public static async getUSDPKR(){\n        var data = 'length=1&id=1&buysell=1';\n        var config = {\n            method: 'post',\n          maxBodyLength: Infinity,\n            url: 'https://www.khistocks.com/ajax/kerb_rates',\n            headers: { \n              'content-type': 'application/x-www-form-urlencoded; charset=UTF-8', \n            },\n            data : data\n          };\n          const res = await axios(config)\n          return res.data\n          \n    }\n}","import React from \"react\";\nimport {\n    View,\n    Text,\n    StyleSheet,\n    Modal,\n    Dimensions,\n    Button,\n    TouchableOpacity,\n    ActivityIndicator,\n    Linking,\n    Platform\n} from 'react-native'\nimport { BlurView } from 'expo-blur';\nimport LottieView from 'lottie-react-native';\nimport {AntDesign} from '@expo/vector-icons'\nexport default function ServiceDownModal({\n    isSuccess,\n    message,\n    subMessage,\n    show,\n    closeModal,\n    onClose\n} : any) {\n    return(\n        <Modal visible={true} transparent={true} animationType='fade' onDismiss={onClose}>\n            <View  style={{height:Dimensions.get('window').height, width : Dimensions.get('window').width,backgroundColor:'rgba(127,127,127,1)', alignItems:'center',justifyContent:'center'}}>\n                <View style={{ width:'95%',backgroundColor:'#fff', borderRadius:6, flexDirection:'row', overflow:'hidden'}}>\n                    <View style={{height:'100%', width:5, backgroundColor: '#004DBC'}}/>\n                    <View style={{flex:1, paddingHorizontal:20, justifyContent:'space-evenly', marginVertical:20}}>\n                        \n                        <TouchableOpacity style={{width:'95%', alignItems:'flex-end'}} onPress={closeModal}>\n                            {/* <AntDesign name=\"close\" color={\"#666\"} size={16}/> */}\n                        </TouchableOpacity>\n                        <View style={{height:80, width:80, borderRadius:50, alignItems:'center', justifyContent : 'center',backgroundColor:'#004DBC'}}>\n                            <AntDesign name=\"warning\" color='white' size={40}/>\n                        </View>\n                        <Text style={{fontFamily:'ArialNova-Bold', fontSize:18, paddingVertical:10}}>\n                        Sorry about that!\n                        </Text>\n                        <Text style={{fontFamily:'ArialNova-Light', fontSize:18, paddingVertical:5}}>\n                        Sorry about that! We don't know what went wrong, but we are working to figure it out. \n                        </Text>\n\n                        <Text style={{fontFamily:'ArialNova-Light', fontSize:14, paddingVertical:20, paddingBottom:10}}>In the meantime, please e-mail help@elphinstone.us with any requests or questions.\n                        </Text>\n\n                        <View style={{flexDirection:'row'}}>\n                        \n\n                        </View>\n                    </View>\n\n                {/* <Button title=\"close\" onPress={closeModal}/> */}\n\n                </View>\n            </View>\n        </Modal>\n    )\n}","import React, { useEffect, useState } from \"react\";\nimport {\n  View,\n  Text,\n  StyleSheet,\n  Dimensions,\n  Button,\n  TouchableOpacity,\n} from \"react-native\";\n\nimport { MaterialIcons } from \"@expo/vector-icons\";\nimport { AppConstants } from \"../../../assets/AppConstants\";\n\nimport MiscService from \"../../../api/lib/MiscService\";\nimport ServiceDownModal from '../../components/ServiceDownModal'\nimport AlpacaBalanceService from \"../../../api/lib/AlpacaBalanceService\";\nimport AlpacaService from \"../../../api/lib/AlpacaService\";\nimport { color } from \"@rneui/themed/dist/config\";\n\nexport default function AssetDataRectangle({\n  alpacaBalanceService,\n  userBalance,\n}: any) {\n  const [miscValues, setMiscValues] = useState({ USDPKR: 272 });\n  const [cash, setCashValue] = useState(0);\n  const [showServiceDownModal, setShowServiceDownModal] = React.useState(false);\n  useEffect(() => {\n    MiscService.getUSDPKR()\n      .then((cb) =>\n        setMiscValues({\n          ...miscValues,\n          USDPKR:\n            (parseFloat(cb?.data[0]?.buying) +\n              parseFloat(cb?.data[0]?.selling)) /\n            2,\n        })\n      )\n      .catch((err) => console.log(\"USDPKR\", err));\n\n    \n\n    alpacaBalanceService.getUserCash().then((cashAmount: any) => {\n      setCashValue(cashAmount.cash);\n\n      // Check if the status is not equal to 200 and show the modal\n      if (cashAmount.statusCode != 200) {\n          setShowServiceDownModal(true);\n      }\n\n      \n  })\n  .catch((err:any) => {\n      console.log('err', err);\n\n      // Handle error and show the modal\n      setShowServiceDownModal(true);\n  });\n\n\n  }, []);\n\n  const styles = StyleSheet.create({\n    row_styles: {\n      padding: 20,\n      borderBottomWidth: 1,\n      borderColor: \"#979797\",\n    },\n    bottom_row_styles: {\n      padding: 20,\n    },\n\n    heading: {\n      fontFamily: \"ArialNova\",\n      fontSize: 11,\n      color: \"#1E293B\",\n      paddingBottom: 7,\n      fontWeight: \"300\",\n    },\n\n    sub_heading: {\n      fontFamily: \"Overpass\",\n      fontWeight: \"700\",\n      fontSize: 24,\n      color: \"#1E293B\",\n    },\n\n    foot_note: {\n      fontFamily: \"ArialNova\",\n      fontWeight: \"400\",\n      fontSize: 8,\n      paddingTop: 5,\n      color: \"#8B97A8 \"\n    },\n  });\n\n  return (\n    <View\n      style={{\n        flexDirection: \"column\",\n        backgroundColor: \"white\",\n        width: Dimensions.get(\"window\").width * 0.9,\n        borderRadius: 3,\n        shadowColor: \"#000\",\n        shadowOffset: {\n          width: 0,\n          height: 2,\n        },\n        shadowOpacity: 0.1,\n        shadowRadius: 9,\n        elevation: 10,\n        marginTop: 20\n      }}\n    >\n      { showServiceDownModal==true ? (<><ServiceDownModal/></>) :(<><View style={styles.row_styles}>\n        <Text style={styles.heading}>Cash</Text>\n        <Text style={styles.sub_heading}>${cash}</Text>\n      </View>\n\n      <View style={styles.bottom_row_styles}>\n        <Text style={styles.heading}>\n          Portfolio value in <Text style={{ fontWeight: \"bold\" }}>PKR</Text>\n        </Text>\n        <Text style={styles.sub_heading}>\n          {(\n            miscValues.USDPKR *\n            (userBalance.portfolio_value\n              ? parseFloat(userBalance?.portfolio_value)\n              : 0)\n          ).toLocaleString(undefined, {\n            currency: \"USD\",\n            maximumFractionDigits: 2,\n            minimumFractionDigits: 2,\n          })}\n        </Text>\n\n        <Text style={styles.foot_note}>\n          USD to PKR @ {miscValues.USDPKR}\n        </Text>\n\n      </View>\n      </>)}\n      \n      \n    </View>\n  );\n}\n","import React from 'react'\nimport {\n    View,\n    Text,\n    StyleSheet,\n    Dimensions,\n    Button,\n    TouchableOpacity\n} from 'react-native'\n\nimport {MaterialIcons} from '@expo/vector-icons'\nimport { AppConstants } from '../../../assets/AppConstants'\n\nexport default function BigButtonRectangle({title, Icon, text, isInverted, onPress} : any){\n    return(\n    <TouchableOpacity style={{\n        width:Dimensions.get('window').width *0.92, \n        height:Dimensions.get('window').width * 0.24,\n        backgroundColor: !isInverted ? '#fff' : '#004DBC',\n        // aspectRatio : 175/147,\n        borderRadius:6,\n        // marginHorizontal:Dimensions.get('window').width *0.0125,\n        marginVertical:10,\n        paddingHorizontal:15,\n        borderWidth:0,\n        shadowColor: \"#000\",\n        shadowOffset: {\n            width: 0,\n            height: 2,\n        },\n        shadowOpacity: 0.1,\n        shadowRadius: 9,\n        elevation:5\n        }}\n        onPress={onPress}\n        >\n            <View style={{width:'100%', alignItems:'flex-start', flexDirection:'row', justifyContent:'space-between', marginTop:-4}}>\n                \n            <View style={{paddingTop:20, flexDirection:'row'}}>\n                    {<Icon color={isInverted ? \"white\" : AppConstants.loginHeaderBlue}/>}\n                    <Text style={{\n                fontFamily:'ArialNova-Bold',\n                color: !isInverted ? AppConstants.loginHeaderBlue : 'white',\n                marginTop:5,\n                fontSize: 20,\n                paddingLeft:20\n            }}>\n                {title}\n            </Text>\n            </View>\n            <View style={{paddingTop:-20}}>\n                <MaterialIcons name=\"bookmark\" size={30} color={!isInverted ? \"#3293F6\" : 'white'} />\n                </View>\n            </View>\n            \n            <View style={{flexDirection:'row',alignItems:'center', justifyContent:'space-between'}}>\n            \n            <Text style={{\n                fontFamily:'ArialNova',\n                fontSize:12.5,\n                color: !isInverted ? '#3293F6' : 'white',\n                marginTop:10,\n            }}>\n                {text}\n            </Text>\n            </View>\n    </TouchableOpacity>\n    \n    )\n\n}","import {\n    View,\n    Dimensions,\n    Text,\n    TouchableOpacity\n} from 'react-native'\nimport {\n    LineChart\n} from 'react-native-chart-kit'\n\nimport {Feather} from '@expo/vector-icons'\nimport { useEffect, useState } from 'react'\nimport AlpacaService from '../../../api/lib/AlpacaService'\n\n\n\nexport default function MarketItem({stockTicker, stockName, data, isLast, onPress, alpacaService} : any) {\n\n    const [historicalData, setHistoricalData] = useState([])\n    const [latestData, setLatestData] = useState<any>({})\n    useEffect(()=>{\n      alpacaService.getHistoricalStockData(\n        {symbol: stockTicker}).then(cb=>setHistoricalData((cb.map((item:any) => item.c)).reverse())).catch(err=>{})\n    },[])\n    useEffect(()=>{\n      alpacaService.getLatestStockData({symbol: stockTicker}).then(cb=>setLatestData(cb))\n    },[])\n\n    const upOrDown = () => {\n      return historicalData[historicalData.length - 1] <= latestData?.bar?.c.toFixed(2)\n  }\n    return(\n        <TouchableOpacity activeOpacity={1} onPress={onPress} style={{width:'95%', height:100, justifyContent:'space-between', alignItems:'center', flexDirection:'row', borderBottomWidth:isLast ? 0 : 1, borderBottomColor:'rgba(151,151,151,0.2)', paddingHorizontal:10, paddingRight:30}}>\n            <View style={{width:'50%'}}>\n            <Text style={{fontFamily:'Overpass_600SemiBold', fontSize: 16}}>\n                {stockTicker}\n            </Text>\n            <Text style={{\n                fontFamily:'ArialNova',\n                fontSize:12,\n                zIndex:2\n            }}>\n                {stockName}\n            </Text>\n            </View>\n            <View style={{width:'20%'}}>\n            <Chart data={latestData.bar ? historicalData.concat([parseFloat(latestData?.bar?.c.toFixed(2))]) : historicalData} positive = {upOrDown()}/>\n            </View>\n            { latestData.bar && historicalData.length>0 &&  <View style={{width:'30%',alignItems:'flex-end'}}>\n                <Text style={{\n                    fontFamily:'Overpass_600SemiBold',\n                    fontSize:16\n                }}>\n\n                <Text style={{color:upOrDown() ? `#44D94C` : 'red'}}>$ </Text>  {latestData?.bar?.c.toFixed(2)}\n                \n                </Text>\n                <Text style={{fontFamily: 'Overpass_600SemiBold', color:upOrDown() ? `#44D94C` : 'red'}}>\n                <Feather name={upOrDown() ? \"arrow-up\" : \"arrow-down\"} size={16} color={upOrDown() ? `#44D94C` : 'red'} />\n                \n                $ { ((latestData?.bar?.c.toFixed(2) - historicalData[historicalData.length - 1]).toFixed(2)).toLocaleString()}\n                </Text>\n            </View>}\n        </TouchableOpacity>\n    )\n}\n\nconst Chart = ({data, positive} : any) => {\nreturn <LineChart\n    data={{\n      labels: [],\n      datasets: [\n        {\n          data: data\n        }\n      ]\n    }}\n    width={Dimensions.get(\"window\").width *0.25} // from react-native\n    height={60}\n    chartConfig={{\n      backgroundGradientFrom: \"white\",\n      backgroundGradientTo: \"white\",\n\n      decimalPlaces: 0, // optional, defaults to 2dp\n      color: (opacity = 1) => positive ? `#44D94C` : 'red',\n      labelColor: (opacity = 1) => `rgba(255, 255, 255, ${opacity})`,\n      style: {\n        borderRadius: 16\n      },\n      propsForDots: {\n        r: 1,\n        strokeWidth: 1,\n        stroke: positive ? `#44D94C` : 'red'\n      },\n      propsForHorizontalLabels : {\n      }\n    }}\n\n    style={{\n      marginVertical: 8,\n      borderRadius: 16,\n      marginLeft:-50,\n      zIndex:-2\n    }}\n    withInnerLines={false}\n    withOuterLines={false}\n    withShadow={false}\n    yAxisInterval={50}\n\n    // formatYLabel={() => {}}\n    \n  />\n}","import React from 'react'\nimport {\n    View,\n    Text,\n    StyleSheet,\n    Dimensions,\n    Button,\n    TouchableOpacity\n} from 'react-native'\n\nimport {MaterialIcons} from '@expo/vector-icons'\nimport { AppConstants } from '../../../assets/AppConstants'\nimport { LinearGradient } from 'expo-linear-gradient'\n\nexport default function RingButtonSquare({title, Icon, text, isInverted, dark, onPress} : any){\n    return(\n    <TouchableOpacity style={{\n        width:Dimensions.get('window').width *0.45, \n        backgroundColor: dark ? '#004DBC' : '#3293F6',\n        aspectRatio : 1/0.7,\n        borderRadius:6,\n        marginHorizontal:Dimensions.get('window').width *0.0125,\n        marginVertical:10,\n        borderWidth:0,\n        shadowColor: \"#000\",\n        shadowOffset: {\n            width: 0,\n            height: 2,\n        },\n        shadowOpacity: 0.1,\n        shadowRadius: 9,\n        elevation:5,\n        // overflow:'hidden'\n        }}\n        onPress={onPress}\n        >\n            <View style={{width:'100%',height:'100%',overflow:'hidden'}}>\n                <LinearGradient style={{height:190, width:190, borderRadius:95, alignItems:'center',justifyContent:'center', marginTop:-60, marginLeft:30}}\n                colors={dark ? ['#0A2A88','#004DBC']  : ['#008BE6','#004DBC'] }\n                >\n                    <View style={{height:110, width:110, borderRadius:55, backgroundColor:dark ? '#004DBC' : '#3293F6'}}/>\n                </LinearGradient>\n                \n            </View>\n            <View style={{position:'absolute', width:'100%',height:'100%',padding:20}}>\n            <View>\n                    {<Icon color={ \"white\" }/>}\n            </View>\n            <Text style={{\n                fontFamily:'Overpass_600SemiBold',\n                color:  'white',\n                marginTop:10,\n                fontSize: 20\n            }}>\n                {title}\n            </Text>\n            </View>\n    </TouchableOpacity>\n    \n    )\n\n}","import React from \"react\";\nimport {\n  View,\n  Text,\n  StyleSheet,\n  ScrollView,\n  Dimensions,\n  Image,\n  Platform,\n} from \"react-native\";\nimport BigButtonSquare from \"./AppDashboardHome/BigButtonSquare\";\nimport AssetDataRectangle from \"./AppDashboardHome/AssetDataRectangle\";\nimport {\n  Octicons,\n  Feather,\n  MaterialIcons,\n  MaterialCommunityIcons,\n  AntDesign,\n} from \"@expo/vector-icons\";\nimport BigButtonRectangle from \"./AppDashboardHome/BigButtonRectangle\";\nimport MarketItem from \"./AppDashboardHome/MarketItem\";\nimport RingButtonSquare from \"./AppDashboardHome/RingButtonSquare\";\nimport ServiceDownModal from \"../components/ServiceDownModal\";\nimport { useEffect } from \"react\";\nexport default function AppDashboardHome({\n  show,\n  navigation,\n  route,\n  userBalances,\n  refreshFunction,\n  alpacaService,\n  alpacaBalanceService\n}: any) {\n  useEffect(() => refreshFunction(), []);\n  // console.log(Constants.statusBarHeight)\n  return (\n    \n    <ScrollView showsVerticalScrollIndicator={false} bounces={false} style={{}}>\n      {/* <ServiceDownModal show={show}/> */}\n      <View\n        style={{\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          backgroundColor: \"transparent\",\n          paddingTop: 100,\n        }}\n      >\n        <View style={{ alignSelf: \"flex-start\", paddingHorizontal: 30 }}>\n          <Text\n            style={{\n              fontFamily: \"Overpass_700Bold\",\n              fontSize: 40,\n              color: \"white\",\n            }}\n          >\n            $\n            {userBalances.portfolio_value &&\n              parseFloat(userBalances?.portfolio_value).toLocaleString(\n                undefined,\n                {\n                  currency: \"USD\",\n                  maximumFractionDigits: 2,\n                  minimumFractionDigits: 2,\n                }\n              )}\n          </Text>\n          <Text\n            style={{ fontFamily: \"ArialNova\", fontSize: 16, color: \"white\" }}\n          >\n            Portfolio Value\n          </Text>\n        </View>\n\n        <View style={{ flexDirection: \"column\", marginTop: 70 }}>\n          <AssetDataRectangle alpacaBalanceService={alpacaBalanceService} userBalance={userBalances}/>\n        </View>\n\n        <View style={{ paddingTop: 50 }}>\n          <View style={{ flexDirection: \"row\" }}>\n            <BigButtonSquare\n              title=\"Portfolio\"\n              Icon={({ color }: any) => {\n                return <Octicons name=\"briefcase\" size={26} color={color} />;\n              }}\n              text=\"Track your current holdings and investment performance\"\n              onPress={() => navigation.navigate(\"My Portfolio\")}\n            />\n\n            <BigButtonSquare\n              title=\"Trade\"\n              Icon={({ color }: any) => {\n                return <Feather name=\"bar-chart\" size={26} color={color} />;\n              }}\n              text=\"Trade individual stocks and ETFs listed on US exchanges\"\n              onPress={() => navigation.navigate(\"Markets\")}\n            />\n          </View>\n\n          <View style={{ flexDirection: \"row\" }}>\n            <BigButtonSquare\n              title=\"Invest\"\n              Icon={({ color }: any) => {\n                return (\n                  <MaterialIcons name=\"show-chart\" size={26} color={color} />\n                );\n              }}\n              text=\"Automatically invest in fully diversified portfolios\"\n              isInverted={true}\n              onPress={() => navigation.navigate(\"Invest\")}\n            />\n\n            <BigButtonSquare\n              title=\"Transactions\"\n              Icon={({ color }: any) => {\n                return (\n                  <MaterialCommunityIcons\n                    name=\"bank-outline\"\n                    size={26}\n                    color={color}\n                  />\n                );\n              }}\n              text=\"History of all cash balance and trade transactions\"\n              onPress={() => navigation.navigate(\"Transactions\")}\n            />\n          </View>\n        \n        </View>\n        <BigButtonRectangle\n          title=\"Market Data\"\n          Icon={({ color }: any) => {\n            return <Octicons name=\"copy\" size={26} color={color} />;\n          }}\n          text=\"Track major indices, stocks, bonds and other data\"\n          onPress={() => navigation.navigate(\"Markets\")}\n        />\n\n        <View style={{ alignItems: \"center\", width: \"100%\" }}>\n          {ChosenCompanies.map((item, index) => (\n            <MarketItem\n              key={index}\n              {...item}\n              isLast={index === ChosenCompanies.length - 1}\n              alpacaService={alpacaService}\n              onPress={() =>\n                navigation.navigate(\"Stock\", { stockTicker: item.stockTicker })\n              }\n            />\n          ))}\n        </View>\n\n        <View style={{ alignSelf: \"center\", marginTop: 30, marginBottom: 50 }}>\n          <Text\n            style={{\n              fontFamily: \"Overpass_300Light\",\n              paddingHorizontal: 10,\n              fontSize: 20,\n            }}\n          >\n            Quick Actions\n          </Text>\n          <View style={{ width: \"100%\" }}>\n            <View style={{ flexDirection: \"row\" }}>\n              <RingButtonSquare\n                title={\"Add \\nFunds\"}\n                Icon={({ color }: any) => {\n                  return (\n                    <AntDesign name=\"pluscircle\" size={24} color={color} />\n                  );\n                }}\n                dark={true}\n                onPress={() => navigation.navigate(\"Add Funds\")}\n              />\n\n              <RingButtonSquare\n                title={\"Withdraw \\nFunds\"}\n                Icon={({ color }: any) => {\n                  return (\n                    <AntDesign name=\"minuscircle\" size={24} color={color} />\n                  );\n                }}\n                onPress={() => navigation.navigate(\"Withdraw\")}\n              />\n            </View>\n          </View>\n        </View>\n      </View>\n      <View style={{ zIndex: -1, position: \"absolute\", width: \"100%\" }}>\n        <Image source={require(\"../../assets/nyse.png\")} style={{}} />\n        <View\n          style={{\n            backgroundColor: \"rgba(0, 23, 139,0.8)\",\n            position: \"absolute\",\n            height: \"100%\",\n            width: \"100%\",\n          }}\n        ></View>\n      </View>\n    </ScrollView>\n  );\n}\nconst ChosenCompanies = [\n  {\n    stockName: \"Apple Inc.\",\n    stockTicker: \"AAPL\",\n  },\n  {\n    stockName: \"The Coca-Cola Company\",\n    stockTicker: \"KO\",\n  },\n  {\n    stockName: \"JPMorgan Chase & Co.\",\n    stockTicker: \"JPM\",\n  },\n  {\n    stockName: \"The Walt Disney Company\",\n    stockTicker: \"DIS\",\n  },\n  {\n    stockName: \"Procter & Gamble Company\",\n    stockTicker: \"PG\",\n  },\n];\n","import React, {useEffect} from 'react'\nimport {\n    View,\n    Text,\n    StyleSheet,\n    ScrollView,\n    Dimensions,\n    Image,\n    Platform\n} from 'react-native'\nimport Constants from 'expo-constants'\n\nexport default function AppDashboardAddFunds({sellValue, userBalances, refreshFunction} : any){\n    useEffect(()=>{\n        refreshFunction()\n    },[])\n    return (\n        <ScrollView bounces={true} scrollEnabled={false} nestedScrollEnabled={true}>\n        <View style={{ justifyContent: 'center', alignItems: 'center',backgroundColor:'transparent',paddingHorizontal:0, paddingTop: 100, width:'100%'}}>\n        <View style={{alignSelf:'flex-start', paddingHorizontal:30}}>\n        <Text style={{fontFamily:'Overpass_700Bold', fontSize:40, color:'white'}}>${userBalances.portfolio_value && parseFloat(userBalances?.portfolio_value).toLocaleString(undefined,{currency:'USD',maximumFractionDigits:2, minimumFractionDigits:2})}</Text>\n\n          <Text style={{fontFamily:'ArialNova', fontSize:16, color:'white'}}>Available Cash Balance</Text>\n          </View>\n\n\n        <View style={{backgroundColor:'#fff', borderRadius:6, marginTop:50,\n                shadowColor: \"#000\",\n                shadowOffset: {\n                    width: 0,\n                    height: 2,\n                },\n                shadowOpacity: 0.1,\n                shadowRadius: 9,\n                elevation:5,\n                width:'95%',\n                // overflow:'hidden',\n                // marginHorizontal:20\n                }}>\n        <View style={{ borderBottomWidth:1, borderBottomColor:'rgba(151,151,151,0.2)', padding:20}}>\n            <Text style={{fontFamily:'Overpass_700Bold', fontSize:24}}>\n            Funding your{'\\n'}\n            account  \n            </Text>\n        </View>\n        <ScrollView showsVerticalScrollIndicator={false} style={{height:Dimensions.get('window').height/2, marginBottom:100}}>\n        <View style={{ padding:20}}>\n            <Text style={{fontFamily:'ArialNova', fontSize:18, lineHeight:24}}>\n            If you currently have a US checking account, a Payoneer account, or a Wise account, you may send funds to the following bank account:\n            </Text>\n            <Text style={{fontFamily:'ArialNova', fontSize:16, lineHeight:30, paddingTop:20}}>\n            Bank name: <Text style={{fontFamily:'ArialNova-Bold'}}> JPMorgan Chase Bank, N.A. </Text> {'\\n'}\n            Account number: 910173209{'\\n'}\n            Routing number: 044000037{'\\n'}\n            Account holder: Elphinstone, Inc.{'\\n'}\n            Currency: USD{'\\n'}\n            Country: United States {'\\n'}\n            Address, Line 1: 405 Lexington Avenue {'\\n'} \n            Address, Line 2: Suite 866 {'\\n'}\n            City: New York {'\\n'}\n            State: New York{'\\n'}\n            Zip code: 10174{'\\n'}\n            E-mail address: payments@elphinstone.us {'\\n'}\n            Account type: Checking {'\\n'}\n            </Text>\n        </View>\n\n        <View style={{width:'100%',backgroundColor:'#F5FAFF', padding:20}}>\n            <Text style= {{fontFamily:'ArialNova', fontSize:14, lineHeight:30, textAlign:'justify'}}>\n            PLEASE REMEMBER TO ADD YOUR MOBILE NUMBER, IN THE FORMAT 3XXXXXXXXX, TO THE PAYMENT REFERENCE FIELD. IF YOU DO NOT REMEMBER TO DO THIS, WE WILL NOT BE ABLE TO TRACK YOUR FUNDS AND IT MAY TAKE SEVERAL DAYS BEFORE WE ARE ABLE TO MANUALLY RECONCILE THE AMOUNTS.\n            </Text>\n        </View>\n\n        <View style={{width:'100%', padding:20, marginBottom:40}}>\n            <Text style= {{fontFamily:'ArialNova', fontSize:14, lineHeight:30,}}>\n            If you need help moving money from your Wise or Payoneer accounts, click here for details on how to move money from those accounts to your Elphinstone account.\n            </Text>\n        </View>\n        <View style={{height:50, width:'100%'}}>\n\n        </View>\n\n        </ScrollView>\n        </View>\n\n        \n\n        </View>\n        <View style={{ zIndex:-1, position:'absolute',width:'100%'}}>\n          <Image source={require('../../assets/nyse.png')} style={{}}/>\n          <View style = {{backgroundColor:'rgba(0, 23, 139,0.8)', position:'absolute',height:'100%',width:'100%'}}>\n\n          </View>\n\n        </View>\n        </ScrollView>\n      );\n}\n","import React, {useState} from 'react'\nimport {\n    View,\n    Text,\n    StyleSheet,\n    ScrollView,\n    Dimensions,\n    TouchableOpacity,\n    Modal,\n    Button,\n    Platform,\n    UIManager,\n    LayoutAnimation\n} from 'react-native'\nimport CustomSelector from '../SignupScreen/SignupComponents/SignupMiscComponents/CustomSelector';\nimport { AntDesign, Feather } from '@expo/vector-icons'\nimport { AppConstants } from '../../../assets/AppConstants';\nimport RiskToleranceSelector from '../SignupScreen/SignupComponents/SignupMiscComponents/RiskToleranceSelector';\nif (\n    Platform.OS === \"android\" &&\n    UIManager.setLayoutAnimationEnabledExperimental\n  ) {\n    UIManager.setLayoutAnimationEnabledExperimental(true);\n  }\n\nexport default function ConfigModal({showConfigModal, setConfigModal, fundPreference, riskTolerance,setUserPreferences, userPreferences} : any){\n\n    const [fundPref, setFundPreference] = useState(userPreferences)\n    // const [riskTol, setRiskTolerance] = useState(userPreferences.riskTolerance)\n\n    return(\n        <Modal visible={showConfigModal} transparent={true} animationType=\"fade\">\n            <View style={{alignItems:'center',justifyContent:'flex-start',flex:1, backgroundColor:'rgba(127,127,127,0.6)', paddingTop:200}}>\n\n\n                <View style={{width:'95%', alignItems:'center', justifyContent:'flex-start', backgroundColor:'#fff', borderRadius:6, paddingHorizontal:20, paddingBottom:20}}>\n                    <TouchableOpacity style={{alignSelf:'flex-end', marginVertical:20}} onPress={()=>setConfigModal(false)}>\n                        <AntDesign name=\"close\" size={16}/>\n                    </TouchableOpacity>\n\n                <Text style={{alignSelf:'flex-start', fontFamily:'ArialNova', fontSize:16, marginVertical:10}}>\n                    Set funds preference\n                </Text>\n                <CustomSelector itemList={['Islamic','Conventional']} selectedValue={fundPref} setValue={setFundPreference}/>\n\n                <Text style={{textAlign:'justify', fontSize:11, fontFamily: 'ArialNova', color:'#8C949D', marginTop:20}}>\n                <Text style={{fontFamily:'ArialNova-Bold'}}>Note: </Text> conventional investments typically offer higher rates of return than Islamic investments, but may not always be in accordance with Islamic principles.\n                </Text>\n\n                {/* <Text style={{alignSelf:'flex-start', fontFamily:'ArialNova', fontSize:16, marginTop: 20}}>\n                    Set funds preference\n                </Text>\n                <RiskToleranceSelector selectedValue={riskTol} setValue={setRiskTolerance}/> */}\n\n                <TouchableOpacity style={{\n                    width:'100%',\n                    marginTop:50,\n                    height: 54,\n                    backgroundColor:AppConstants.loginHeaderBlue,\n                    marginVertical:10,\n                    borderRadius: 6,\n                    padding:10,\n                    alignItems:'center',\n                    flexDirection:'row',\n                    justifyContent:'space-between'\n                }} \n                activeOpacity={0.8}\n                onPress={()=>{ \n                    setUserPreferences(fundPref)\n                    setConfigModal(false)\n                }\n            }\n                >\n                <Text style={{color:'white', fontFamily:'ArialNova', fontSize:18}}>\n                Save funds preferences\n                </Text>\n                <Feather name=\"arrow-right\" size={24} color=\"white\" />\n            </TouchableOpacity>\n\n            </View> \n            </View>\n        </Modal>\n    )\n    \n}","import React from \"react\";\nimport {\n    View,\n    Text,\n    StyleSheet,\n    Modal,\n    Dimensions,\n    Button,\n    TouchableOpacity\n} from 'react-native'\nimport { BlurView } from 'expo-blur';\nimport LottieView from 'lottie-react-native';\nimport {AntDesign} from '@expo/vector-icons'\nexport default function ConfirmationModal({\n    message,\n    subMessage,\n    show,\n    closeModal,\n    onClose,\n    confirmFunction\n} : any) {\n    return(\n        <Modal visible={show} transparent={true} animationType='fade' onDismiss={onClose}>\n            <View  style={{height:Dimensions.get('window').height, width : Dimensions.get('window').width,backgroundColor:'rgba(127,127,127,0.5)', alignItems:'center',justifyContent:'center'}}>\n                <View style={{ width:'95%',backgroundColor:'#fff', borderRadius:6, flexDirection:'row', overflow:'hidden'}}>\n                    <View style={{height:'100%', width:5, backgroundColor: '#004DBC'}}/>\n                    <View style={{flex:1, paddingHorizontal:20, justifyContent:'space-evenly', marginVertical:20}}>\n                        \n                        <TouchableOpacity style={{width:'95%', alignItems:'flex-end'}} onPress={closeModal}>\n                            <AntDesign name=\"close\" color={\"#666\"} size={16}/>\n                        </TouchableOpacity>\n                        <View style={{height:80, width:80, borderRadius:50, alignItems:'center', justifyContent : 'center',backgroundColor:'#004DBC'}}>\n                            <AntDesign name=\"warning\" color='white' size={40}/>\n                        </View>\n\n                        <Text style={{fontFamily:'ArialNova-Light', fontSize:16, paddingVertical:10}}>\n                        {message}\n                        </Text>\n\n                        <Text style={{fontFamily:'ArialNova-Light', fontSize:12}}>{subMessage}\n                        </Text>\n\n                        <View style={{flexDirection:'row'}}>\n                        <TouchableOpacity style={{width:'35%', height:50, borderRadius:6, backgroundColor:'#004dbc',alignItems:'center',justifyContent:'center'}} onPress={confirmFunction}>\n                            <Text style={{color:'white', fontFamily:'ArialNova'}}>\n                                Yes\n                            </Text>\n                        </TouchableOpacity>\n\n                        <TouchableOpacity style={{width:'35%', height:50, borderRadius:6, alignItems:'center', justifyContent:'center', borderWidth: 1, borderColor: '#8C949D', marginHorizontal:10}}\n                        onPress={closeModal}\n                        >\n                            <Text style={{color:'#8C949D', fontFamily:'ArialNova'}}>\n                                Cancel\n                            </Text>\n                        </TouchableOpacity>\n                        </View>\n                    </View>\n\n                {/* <Button title=\"close\" onPress={closeModal}/> */}\n\n                </View>\n            </View>\n        </Modal>\n    )\n}","import React, {useEffect, useState} from 'react'\nimport {\n    View,\n    Text,\n    StyleSheet,\n    ScrollView,\n    Dimensions,\n    TouchableOpacity,\n    Modal,\n    Button,\n    Image\n} from 'react-native'\nimport {Octicons, Feather, MaterialIcons, MaterialCommunityIcons, AntDesign, Ionicons } from '@expo/vector-icons'\nimport { AppConstants } from '../../assets/AppConstants';\nimport BigButtonRectangle from './AppDashboardHome/BigButtonRectangle';\nimport {\n    LineChart\n} from 'react-native-chart-kit'\nimport MarketItem from './AppDashboardHome/MarketItem';\nimport RingButtonSquare from './AppDashboardHome/RingButtonSquare';\nimport ConfigModal from './AppDashboardInvest/ConfigModal';\nimport Constants from 'expo-constants'\nimport ResponseModal from '../components/ResponseModal';\nimport { fundPortfolioMap } from './AppDashboardInvest/portfolio_map';\nimport AlpacaService from '../../api/lib/AlpacaService';\nimport UserService from '../../api/lib/UserService';\nimport Slider from '@react-native-community/slider';\nimport ConfirmationModal from '../components/ConfirmationModal';\n\nconst listOfRisks = [\n    {\n        title : 'The Cash Conserver',\n        returns : \"Low\",\n        risk : \"Low\",\n        text : \"Suitable if you are investing for 0-3 years.\"\n    },\n    {\n        title : 'The Small-Risk Taker',\n        returns : 'Medium-Low',\n        risk : 'Medium-Low',\n        text : \"Suitable if you are investing for 3-5 years.\"\n    },\n    {\n        title : 'The Moderate',\n        returns : \"Medium\",\n        risk : \"Medium\",\n        text : \"Suitable if you are investing for 5-7 years.\"\n    },\n    {\n        title : \"The Growth Seeker\",\n        returns : \"Medium-High\",\n        risk : \"Medium\",\n        text : 'Suitable if you are investing for 7-10 years.'\n    },\n    {\n        title : 'The Fortune Builder',\n        returns : \"High\",\n        risk : \"High\",\n        text : \"Suitable if you are investing for 10+ years\"\n    },\n]\n\nexport default function AppDashboardInvest({navigation, userProfile, userBalances, alpacaService, refreshFunction, session} : any){\n    \n    useEffect(()=>{\n        refreshFunction()\n    },[])\n    \n    const [showConfigModal, setConfigModal] = useState(false)\n    const [showResponseModal, setResponseModal] = useState(false)\n    const [showConfirmationModal, setConfirmationModal] = useState(false)\n\n    const [proportion, setProportion] = useState(\n        userProfile?.risk_tolerance_level === 'The Fortune Builder' ? 4 :\n        userProfile?.risk_tolerance_level === 'The Growth Seeker' ? 3 : \n        userProfile?.risk_tolerance_level === 'The Moderate' ? 2 :\n        userProfile?.risk_tolerance_level === 'The Small-Risk Taker' ? 1 :\n        0\n    )\n    const [responseModalConfig, setResponseModalConfig] = useState({\n        isSuccess : null,\n        message : \"\",\n        subMessage : \"\"\n    })\n\n    const [portfolios, setPortfolios] = useState<any>({})\n\n    useEffect(()=> {\n        alpacaService.getPortfolios().then(cb=>setPortfolios(cb.portfolios))\n    },[])\n\n    const [userPreferences, setUserPreferences] = useState(userProfile?.preference === 'islamic' ? \"Islamic\" : \"Conventional\")\n\n    function launchResponseModal({message, subMessage, isSuccess} : any) {\n        setResponseModalConfig({\n            message,\n            subMessage,\n            isSuccess\n        })\n        setResponseModal(true)\n    }\n\n    function subscribePortfolio() {\n        const riskMap = {\n            \"The Cash Conserver\" : \"the-cash-conserver\",\n            \"The Fortune Builder\" : \"the-fortune-builder\",\n            \"The Growth Seeker\" : \"the-growth-seeker\",\n            \"The Moderate\" : \"the-moderate\",\n            \"The Small-Risk Taker\" : \"the-small-risk-taker\"\n        }\n        let portfolio_id = portfolios[(userPreferences).toLowerCase()][riskMap[listOfRisks[proportion].title]]\n        alpacaService.subscribePortfolio({portfolio_id}).then( (cb : any) => {\n            launchResponseModal({message: 'Your investment request has been submitted succesfully', subMessage:'We’ve sent you a confirmation email. Please check your inbox.', isSuccess: true})\n            UserService.updateUser(session.identity.id, {\n                preference : (userPreferences).toLowerCase(),\n                risk_tolerance_level : listOfRisks[proportion].title\n            })\n        }).catch( (cb : any) => {\n            launchResponseModal({message: cb.message, subMessage:'', isSuccess: false})\n        }\n        )   \n    }\n    \n    const INVEST_MESSAGE = \"You are about to automatically invest your money into a diversified portfolio of stocks and/or bonds/sukuks, in accordance with your preferred risk tolerance and investment objectives. Your money will become fully invested and any other stocks currently in your portfolio would be sold.\\n\\nAre you sure you would like to continue?\"\n\n    return (\n        <ScrollView showsVerticalScrollIndicator={false} bounces={false}>\n\n        <View style={{ justifyContent: 'center', alignItems: 'center',backgroundColor:'transparent', paddingTop:100}}>\n        <ResponseModal show={showResponseModal} closeModal={()=>setResponseModal(false)} {...responseModalConfig} />\n        <ConfirmationModal show={showConfirmationModal} message={INVEST_MESSAGE} closeModal={() => setConfirmationModal(false)} confirmFunction={ () => {setConfirmationModal(false); subscribePortfolio()}}/>\n        <ConfigModal showConfigModal={showConfigModal} setConfigModal={setConfigModal} setUserPreferences={setUserPreferences} userPreferences={userPreferences}/>\n        \n        <View style={{alignSelf:'flex-start', paddingHorizontal:30, height:301}}>\n        <Text style={{fontFamily:'Overpass_700Bold', fontSize:40, color:'white'}}>${userBalances.buying_power && parseFloat(userBalances?.buying_power).toLocaleString(undefined,{currency:'USD',maximumFractionDigits:2, minimumFractionDigits:2})}</Text>\n          <Text style={{fontFamily:'ArialNova', fontSize:16, color:'white'}}>Uninvested cash balance</Text>\n          </View>\n\n        <View style={{backgroundColor:'#fff', borderRadius:6, marginTop:-50,\n                shadowColor: \"#000\",\n                shadowOffset: {\n                    width: 0,\n                    height: 2,\n                },\n                shadowOpacity: 0.1,\n                shadowRadius: 9,\n                elevation:5,\n                width:'95%',\n                }}>\n        <View style={{ borderBottomWidth:1, borderBottomColor:'rgba(151,151,151,0.2)', padding:20, flexDirection:'row',justifyContent:'space-between', alignItems:'center'}}>\n            <View>\n            <Text style={{fontFamily:'ArialNova', fontSize:11, color:'#1E293BCC' }}>\n            Fund Preference\n            </Text>\n            <Text style={{fontFamily:'Overpass_700Bold', fontSize:24, paddingTop:10}}>\n            {userPreferences}\n            </Text>\n            </View>\n            <TouchableOpacity onPress={()=>setConfigModal(true)}>\n            <Ionicons name=\"settings-sharp\" size={24} color=\"#A4B3C4B2\" />\n            </TouchableOpacity>\n        </View>\n\n        {/* <View style={{ borderBottomWidth:1, borderBottomColor:'rgba(151,151,151,0.2)', padding:20, flexDirection:'row',justifyContent:'space-between', alignItems:'center'}}>\n            <View>\n            <Text style={{fontFamily:'ArialNova', fontSize:11, color:'#1E293BCC' }}>\n            Risk Tolerance\n            </Text>\n            <Text style={{fontFamily:'Overpass_700Bold', fontSize:24, paddingTop:10}}>\n            {userPreferences.riskTolerance} \n            </Text>\n            <Text style={{fontFamily:'ArialNova', fontSize:11, color:'#1E293BCC' }}>\n            { toleranceList.filter(cb => cb.name === userPreferences.riskTolerance)[0]?.mix}\n            </Text>\n            </View>\n            <TouchableOpacity onPress={()=>setConfigModal(true)}>\n            <Ionicons name=\"settings-sharp\" size={24} color=\"#A4B3C4B2\" />\n            </TouchableOpacity>\n        </View> */}\n\n        {/* <TouchableOpacity \n        style={{ borderBottomWidth:1, borderBottomColor:'rgba(151,151,151,0.2)', padding:20, flexDirection:'row',justifyContent:'space-between', alignItems:'center', backgroundColor:AppConstants.loginHeaderBlue, borderBottomStartRadius:6, borderBottomEndRadius:6}}\n        onPress={subscribePortfolio}\n        >\n\n            <Text style={{fontFamily:'ArialNova', fontSize:16, color:'white' }}>\n            Invest now\n            </Text>\n            <Ionicons name=\"ios-arrow-forward\" size={24} color=\"white\" />\n        </TouchableOpacity> */}\n        </View>\n\n        <View style={{width:'95%', marginTop:30}}>\n            <Text style={{fontFamily:'ArialNova', color:'#1E293B', fontSize:16}}>\n                Preferred risk tolerance level\n            </Text>\n            <View style={{borderWidth:1, borderColor:'#DDD', borderRadius:9, marginVertical:20, paddingHorizontal:15, paddingVertical:20}}>\n                <Text style={{color : \"#8692A6\", fontFamily: 'ArialNova'}}>\n                    Set your preferences by moving the slider\n                </Text>\n                <View style={{borderWidth: 1, borderColor:'#DDD', paddingVertical:20, paddingHorizontal:15, marginVertical:20, borderRadius: 6}}>\n                    <Text>\n                        {listOfRisks[proportion].title}\n                    </Text>\n                </View>\n\n                <Slider\n                style={{width:'100%', height: 40, alignSelf:'center', marginBottom:20}}\n                minimumValue={0}\n                maximumValue={4}\n                step={1}\n                value={proportion}\n                onValueChange={cb=>setProportion(cb)}\n                minimumTrackTintColor=\"#004DBC\"\n                // maximumTrackTintColor=\"#004DBC\"\n                thumbImage={require('../../assets/images/slider_icon.png')} \n                />\n\n                <View style={{width:'100%', alignItems:'center'}}>\n                    <Text style={{fontFamily:'Overpass_400Regular', color: '#8C949D', marginBottom:20}}>\n                        Details\n                    </Text>\n                    <View style={{flexDirection : \"row\", justifyContent:'space-between', width:'100%'}}>\n                        <View style={{alignItems:'center', flex:1}}>\n                        <Feather name=\"bar-chart\" size={26} color={'#8C949D'}/>\n                        <Text style={{fontFamily:'Overpass_300Light', color: '#8C949D', marginTop:20}}>\n                            Returns\n                        </Text>\n                        <Text style={{fontFamily:'Overpass_400Regular', color: '#8C949D'}}>\n                            {listOfRisks[proportion].returns}\n                        </Text>\n                        </View>\n\n                        <View style={{alignItems:'center', flex:1}}>\n                        <Feather name=\"umbrella\" size={26} color={'#8C949D'}/>\n                        <Text style={{fontFamily:'Overpass_300Light', color: '#8C949D', marginTop:20}}>\n                            Risk\n                        </Text>\n                        <Text style={{fontFamily:'Overpass_400Regular', color: '#8C949D'}}>\n                            {listOfRisks[proportion].risk}\n                        </Text>\n                        </View>\n\n                        <View style={{alignItems:'center', flex:1}}>\n                        <Feather name=\"calendar\" size={26} color={'#8C949D'}/>\n                        <Text style={{fontFamily:'Overpass_300Light', color: '#8C949D', marginTop:20}}>\n                            Investment\n                        </Text>\n                        <Text style={{fontFamily:'Overpass_400Regular', color: '#8C949D'}}>\n                            Period\n                        </Text>\n                        <Text style={{fontFamily:'ArialNova', fontSize:10, color: '#8C949D', width:'66.6%', textAlign:'center'}}>\n                            ({listOfRisks[proportion].text})\n                        </Text>\n                        </View>\n\n                    </View>\n                </View>\n            </View>\n\n            <TouchableOpacity style={{\n                    width:'100%',\n                    // marginTop:50,\n                    height: 54,\n                    backgroundColor:AppConstants.loginHeaderBlue,\n                    marginVertical:10,\n                    borderRadius: 6,\n                    paddingHorizontal:20,\n                    alignItems:'center',\n                    flexDirection:'row',\n                    justifyContent:'space-between',\n                    opacity : userBalances?.buying_power === \"0\" ? 0.5 : 1\n                }} \n                activeOpacity={0.8}\n                onPress={()=>{ \n                    setConfirmationModal(true)\n                    \n                }\n            }\n                disabled = {userBalances?.buying_power === \"0\"}\n                >\n                <Text style={{color:'white', fontFamily:'ArialNova', fontSize:16}}>\n                Invest now\n                </Text>\n                <Feather name=\"arrow-right\" size={24} color=\"white\" />\n            </TouchableOpacity>\n\n\n        </View>\n\n        <View style={{width:'95%', marginTop:30, marginBottom:50, alignSelf:'center'}}>\n            <Text style={{fontFamily:'Overpass_300Light'}}>\n                Quick Actions\n            </Text>\n            <View>\n            <View style={{flexDirection:'row', }}>\n                <RingButtonSquare title = {\"Add \\nFunds\"} Icon={({color} : any)=>{\n                return <AntDesign name=\"pluscircle\" size={24} color={color}/>\n                }} dark = {true} onPress={()=>navigation.navigate('Add Funds')}/>\n\n                <RingButtonSquare title = {\"Withdraw \\nFunds\"} Icon={({color} : any)=>{\n                return <AntDesign name=\"minuscircle\" size={24} color={color}/>\n                }} onPress={()=>navigation.navigate('Withdraw')}/>\n          </View>\n            </View>\n        </View>\n\n        </View>\n\n        <View style={{ zIndex:-1, position:'absolute',width:'100%'}}>\n          <Image source={require('../../assets/nyse.png')} style={{}}/>\n          <View style = {{backgroundColor:'rgba(0, 23, 139,0.8)', position:'absolute',height:'100%',width:'100%'}}>\n\n          </View>\n\n        </View>\n       \n        </ScrollView>\n      );\n}\n\nconst toleranceList = [ \n    {name: 'The Fortune Builder', mix: '(100% stocks, 0% bonds)'}, \n    {name: 'The Growth Seeker', mix: '(75% stocks, 25% bonds)'}, \n    {name: 'The Moderate', mix: '(50% stocks, 50% bonds)'}, \n    {name: 'The Small-Risk Taker', mix: '(25% stocks, 75% bonds)'}, \n    {name: 'The Cash Conserver', mix: '(0% stocks, 100% bonds)'},    \n  ]","import React, { useState } from \"react\";\nimport {\n  View,\n  Text,\n  StyleSheet,\n  ScrollView,\n  Dimensions,\n  TouchableOpacity,\n  Modal,\n  Button,\n  Image,\n} from \"react-native\";\nimport {\n  Octicons,\n  Feather,\n  MaterialIcons,\n  MaterialCommunityIcons,\n  AntDesign,\n  Ionicons,\n} from \"@expo/vector-icons\";\nimport { AppConstants } from \"../../assets/AppConstants\";\nimport BigButtonRectangle from \"./AppDashboardHome/BigButtonRectangle\";\nimport { LineChart } from \"react-native-chart-kit\";\nimport MarketItem from \"./AppDashboardHome/MarketItem\";\nimport RingButtonSquare from \"./AppDashboardHome/RingButtonSquare\";\nimport ConfigModal from \"./AppDashboardInvest/ConfigModal\";\nimport Constants from \"expo-constants\";\nimport ResponseModal from \"../components/ResponseModal\";\nimport messages from \"../components/ory/ui/messages\";\nexport default function AppDashboardWithdraw({\n  navigation,\n  sellValue,\n  userBalances,\n  alpacaService,\n}: any) {\n  const [showResponseModal, setResponseModal] = useState(false);\n  const [sellVal, setSellVal] = useState(sellValue);\n  const [availableForWithdrawal, setCashBalance] = useState(\n    47749 * (sellValue / 100)\n  );\n  const [responseModalConfig, setResponseModalConfig] = useState({\n    isSuccess: null,\n    message: \"\",\n    subMessage: \"\",\n  });\n  function launchResponseModal({ message, subMessage, isSuccess }: any) {\n    setResponseModalConfig({\n      message,\n      subMessage,\n      isSuccess,\n    });\n    setResponseModal(true);\n  }\n  return (\n    <ScrollView bounces={false} showsVerticalScrollIndicator={false}>\n      <View\n        style={{\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          backgroundColor: \"transparent\",\n          paddingTop: 100,\n        }}\n      >\n        <ResponseModal\n          show={showResponseModal}\n          closeModal={() => setResponseModal(false)}\n          {...responseModalConfig}\n        />\n\n        <View style={{ alignSelf: \"flex-start\", paddingHorizontal: 30 }}>\n          <Text\n            style={{\n              fontFamily: \"Overpass_700Bold\",\n              fontSize: 40,\n              color: \"white\",\n            }}\n          >\n            $\n            {userBalances.portfolio_value &&\n              parseFloat(userBalances?.portfolio_value).toLocaleString(\n                undefined,\n                {\n                  currency: \"USD\",\n                  maximumFractionDigits: 2,\n                  minimumFractionDigits: 2,\n                }\n              )}\n          </Text>\n          <Text\n            style={{ fontFamily: \"ArialNova\", fontSize: 16, color: \"white\" }}\n          >\n            Portfolio Value\n          </Text>\n        </View>\n\n        <View\n          style={{\n            backgroundColor: \"#fff\",\n            borderRadius: 6,\n            marginTop: 50,\n            shadowColor: \"#000\",\n            shadowOffset: {\n              width: 0,\n              height: 2,\n            },\n            shadowOpacity: 0.1,\n            shadowRadius: 9,\n            elevation: 5,\n            width: \"95%\",\n          }}\n        >\n          <View\n            style={{\n              borderBottomWidth: 1,\n              borderBottomColor: \"rgba(151,151,151,0.2)\",\n              padding: 20,\n              flexDirection: \"row\",\n              justifyContent: \"space-between\",\n              alignItems: \"center\",\n            }}\n          >\n            <View>\n              <Text\n                style={{\n                  fontFamily: \"ArialNova\",\n                  fontSize: 11,\n                  color: \"#1E293BCC\",\n                }}\n              >\n                Available for withdrawal\n              </Text>\n              <Text\n                style={{\n                  fontFamily: \"Overpass_700Bold\",\n                  fontSize: 24,\n                  paddingTop: 10,\n                }}\n              >\n                $\n                {userBalances.cash_withdrawable &&\n                  parseFloat(userBalances?.cash_withdrawable).toLocaleString(\n                    undefined,\n                    {\n                      currency: \"USD\",\n                      maximumFractionDigits: 2,\n                      minimumFractionDigits: 2,\n                    }\n                  )}\n              </Text>\n            </View>\n          </View>\n\n          <View\n            style={{\n              borderBottomWidth: 1,\n              borderBottomColor: \"rgba(151,151,151,0.2)\",\n              padding: 20,\n              flexDirection: \"row\",\n              justifyContent: \"space-between\",\n              alignItems: \"center\",\n            }}\n          >\n            <View>\n              <Text\n                style={{\n                  fontFamily: \"ArialNova\",\n                  fontSize: 11,\n                  color: \"#8692A6\",\n                }}\n              >\n                The balance available for withdrawal can be less than the total\n                cash balance when trades are awaiting settlement (typically 2\n                business days after the trade is made).\n              </Text>\n            </View>\n          </View>\n\n          <TouchableOpacity\n            style={{\n              borderBottomWidth: 1,\n              borderBottomColor: \"rgba(151,151,151,0.2)\",\n              padding: 20,\n              flexDirection: \"row\",\n              justifyContent: \"space-between\",\n              alignItems: \"center\",\n              backgroundColor: AppConstants.loginHeaderBlue,\n              borderBottomStartRadius: 6,\n              borderBottomEndRadius: 6,\n            }}\n            onPress={() => navigation.navigate(\"Withdrawal\")}\n          >\n            <Text\n              style={{ fontFamily: \"ArialNova\", fontSize: 16, color: \"white\" }}\n            >\n              Withdraw now\n            </Text>\n            <Ionicons name=\"ios-arrow-forward\" size={24} color=\"white\" />\n          </TouchableOpacity>\n        </View>\n\n        <View\n          style={{\n            backgroundColor: \"#fff\",\n            borderRadius: 6,\n            marginTop: 20,\n            shadowColor: \"#000\",\n            shadowOffset: {\n              width: 0,\n              height: 2,\n            },\n            shadowOpacity: 0.1,\n            shadowRadius: 9,\n            elevation: 5,\n            width: \"95%\",\n          }}\n        >\n          <View\n            style={{\n              padding: 20,\n              flexDirection: \"row\",\n              justifyContent: \"space-between\",\n              alignItems: \"center\",\n            }}\n          >\n            <View>\n              <Text\n                style={{\n                  fontFamily: \"ArialNova\",\n                  fontSize: 16,\n                  color: \"#1C1939\",\n                }}\n              >\n                Want to withdraw more?\n              </Text>\n            </View>\n          </View>\n\n          <View\n            style={{\n              borderBottomWidth: 1,\n              borderBottomColor: \"rgba(151,151,151,0.2)\",\n              padding: 20,\n              flexDirection: \"row\",\n              justifyContent: \"space-between\",\n              alignItems: \"center\",\n            }}\n          >\n            <View>\n              <Text\n                style={{\n                  fontFamily: \"ArialNova\",\n                  fontSize: 14,\n                  color: \"#8692A6\",\n                }}\n              >\n                Sell some of your investments/trading positions to be able to\n                withdraw more cash. {\"\\n\\n\"}(Cash will be available for\n                withdrawal after 2 business days)\n              </Text>\n            </View>\n          </View>\n\n          <TouchableOpacity\n            style={{\n              borderBottomWidth: 1,\n              borderBottomColor: \"rgba(151,151,151,0.2)\",\n              padding: 20,\n              flexDirection: \"row\",\n              justifyContent: \"space-between\",\n              alignItems: \"center\",\n              backgroundColor: \"#737A86\",\n              borderBottomStartRadius: 6,\n              borderBottomEndRadius: 6,\n            }}\n            onPress={() => navigation.navigate(\"Sell\")}\n          >\n            <Text\n              style={{ fontFamily: \"ArialNova\", fontSize: 16, color: \"white\" }}\n            >\n              Sell Now\n            </Text>\n            <Ionicons name=\"ios-arrow-forward\" size={24} color=\"white\" />\n          </TouchableOpacity>\n        </View>\n      </View>\n\n      <View style={{ zIndex: -1, position: \"absolute\", width: \"100%\" }}>\n        <Image source={require(\"../../assets/nyse.png\")} style={{}} />\n        <View\n          style={{\n            backgroundColor: \"rgba(0, 23, 139,0.8)\",\n            position: \"absolute\",\n            height: \"100%\",\n            width: \"100%\",\n          }}\n        ></View>\n      </View>\n      <View style={{ height: 100 }} />\n    </ScrollView>\n  );\n}\n","import React, {useState, useRef, useEffect} from 'react'\nimport {\n    View,\n    Text,\n    StyleSheet,\n    ScrollView,\n    Dimensions,\n    TouchableOpacity,\n    Modal,\n    Button,\n    Image,\n    TextInput\n} from 'react-native'\nimport {Octicons, Feather, MaterialIcons, MaterialCommunityIcons, AntDesign, Ionicons, Entypo } from '@expo/vector-icons'\nimport { AppConstants } from '../../assets/AppConstants';\nimport BigButtonRectangle from './AppDashboardHome/BigButtonRectangle';\nimport {\n    LineChart\n} from 'react-native-chart-kit'\nimport RingButtonSquare from './AppDashboardHome/RingButtonSquare';\nimport ConfigModal from './AppDashboardInvest/ConfigModal';\nimport Constants from 'expo-constants'\nimport { companyList, sectorList } from '../../assets/ExampleSNP';\nimport { nasdaq100, snp500, dji30 } from '../../assets/sampleIndices';\nimport MarketItem from './AppDashboardHome/MarketItem';\nimport RenderHtml from 'react-native-render-html';\nimport { alpacaNews } from '../../apis/alpaca';\nimport AlpacaService from '../../api/lib/AlpacaService';\n\nconst indexNames = ['S&P', 'Dow Jones', 'NASDAQ']\n\nexport default function AppDashboardMarkets({navigation, stockDictionary, userBalances, refreshFunction, alpacaService} : any){\n    // useEffect(()=>{\n    //     refreshFunction()\n    // },[])\n    const [userPreferences, setUserPreferences] = useState({\n        fundPreference : 'Islamic',\n        riskTolerance : 'The Growth Seeker'\n    })\n\n    const scrollViewRef = useRef()\n\n    const [selectedCategory, setCategory] = useState<any>('')\n    const [searchText, setSearchText] = useState<string>('')\n    const [news, setNews] = useState<any>([])\n    const [searchItems, setSearchItems] = useState([])\n    useEffect(()=>{\n        alpacaService.getNews({limit: 5, symbols : 'SPY'}).then(cb => \n            {\n                setNews(cb.news)\n            }\n        \n            )\n    },[])\n\n    useEffect(() => {\n        if(searchText.length > 1){\n            matchDictionary(searchText)\n        }else{\n            setSearchItems('')\n        }\n        \n    },[searchText])\n    const matchDictionary = (substr : string) => {\n        setSearchItems(stockDictionary.filter(cb=>((cb.name).toLowerCase()).startsWith(substr.toLowerCase()) || ((cb.symbol).toLowerCase()).startsWith(substr.toLowerCase())).slice(0,5))\n    }\n    const getStocks = () => {\n        return ChosenCompanies.slice(0,5).map(cb => {\n            return {\n                stockName : cb.Company,\n                stockTicker : cb.Symbol\n            }\n        })\n    }\n\n    \n    return (\n        <ScrollView showsVerticalScrollIndicator={false} ref={scrollViewRef} bounces={false}>\n        <View style={{ justifyContent: 'flex-start', alignItems: 'center',backgroundColor:'transparent', paddingTop:100}}>\n\n        <View style={{ borderRadius:6, height:401-100,width:'100%',\n   \n                }}>\n                    <View style={{alignSelf:'flex-start', paddingHorizontal:30}}>\n                    <Text style={{fontFamily:'Overpass_700Bold', fontSize:40, color:'white'}}>${userBalances.portfolio_value && parseFloat(userBalances?.portfolio_value).toLocaleString(undefined,{currency:'USD',maximumFractionDigits:2, minimumFractionDigits:2})}</Text>\n          <Text style={{fontFamily:'ArialNova', fontSize:16, color:'white'}}>Portfolio Value</Text>\n          </View>\n        \n        </View>\n        <View style={{width:'100%',alignItems:'center', height:70}}>\n        <View style={{width:'100%', alignItems:'center', flexDirection:'row',justifyContent:'center',\n            height:70, marginTop:-(35),borderRadius:8,shadowColor: \"#000\",\n            shadowOffset: {\n                width: 0,\n                height: 2,\n            },\n            shadowOpacity: 0.1,\n            shadowRadius: 9,\n        }}>\n            <View style={{flexDirection:'row',width:'90%',height:'100%',justifyContent:'center',elevation:10}}>\n        <TextInput style={{height:'100%', width:'83.33%', padding:20,backgroundColor:'white',borderBottomLeftRadius:8, borderTopLeftRadius:8}} placeholder=\"search stocks here for trade\"\n                onFocus={()=>scrollViewRef.current?.scrollTo({y:368-120})}\n                keyboardType='name-phone-pad'\n                onChangeText={(cb)=>{\n                    setSearchText(cb)\n                }}\n                value={searchText}\n                >\n\n        </TextInput>\n        <View style={{height:'100%', width:'16.67%', padding:20,backgroundColor:'#fff', borderBottomRightRadius:8,borderTopRightRadius:8,alignItems:'center',justifyContent:'center'}}>\n                <TouchableOpacity onPress={()=>setSearchText('')}>\n                    <AntDesign name='close' color=\"#bbb\" size={20}/>\n                </TouchableOpacity>\n        </View>\n        </View>\n        </View>\n        {searchItems.length > 0 && <View style={{\n            // height:100, \n            width:'90%',\n            backgroundColor:'#fff',\n            shadowOffset: {\n                width: 0,\n                height: 2,\n            },\n            shadowOpacity: 0.1,\n            shadowRadius: 9,\n            elevation:5,\n            zIndex:1\n        }}>\n            {searchItems.slice(0,5).map((cb, index) => {\n                return(\n                    <TouchableOpacity key={index} style={{padding:20}} onPress={()=> navigation.navigate('Stock',{\n                        stockTicker: cb.symbol\n                    })}>\n                <Text numberOfLines={1}>\n                    {cb.name}\n                </Text>\n            </TouchableOpacity>\n                )\n            })}\n            \n        </View>}\n\n        </View>\n            \n        \n        <View style={{zIndex:-1, width:'100%', alignItems:'flex-end'}}>\n        \n            {ChosenCompanies.map(cb => <MarketItem key={cb.stockTicker} stockName={cb.stockName} stockTicker={cb.stockTicker} data={cb.data} onPress={() => navigation.navigate('Stock', {\n                stockTicker : cb.stockTicker\n            })} alpacaService={alpacaService}/>)}\n            <View style={{paddingLeft:10, paddingRight:30, paddingTop:40, marginBottom:40, width:'100%'}}>\n            <Text style={{fontFamily:'Overpass_300Light', fontSize:20}}>\n                <Text style={{fontFamily:'Overpass_700Bold'}}> News </Text> Latest & Greatest\n            </Text>\n            \n            {news.map((cb : any, index : any)=><NewsItem news={cb} navigation={navigation} key={index}/>)}\n\n            </View>\n\n            </View>\n        </View>\n\n        <View style={{ zIndex:-1, position:'absolute',width:'100%'}}>\n          <Image source={require('../../assets/nyse.png')} style={{}}/>\n          <View style = {{backgroundColor:'rgba(0, 23, 139,0.8)', position:'absolute',height:'100%',width:'100%'}}>\n                \n          </View>\n\n        </View>\n       \n        </ScrollView>\n      );\n}\n\n\nconst NewsItem = ({news, navigation} : any,) =>{\n    return (\n    <TouchableOpacity style={{paddingLeft:10, height:100, alignItems:'center', justifyContent:'space-between', flexDirection:'row'}} activeOpacity={1} onPress={() => navigation.navigate('News',{\n        news_object : news\n    })}>\n        <View style={{width:'60%'}}>\n        <Text style={{fontFamily:'ArialNova'}} numberOfLines={3}>\n        {news?.headline}\n        </Text>\n        <Text style={{fontFamily:'ArialNova', color:'#8B97A8'}}>\n        {news?.source} {'\\ @ '}\n        {new Date(news?.created_at).getHours()}:{new Date(news?.created_at).getMinutes()} \n        </Text>\n        </View>\n        <Image source={{\n            uri : news?.images[1]?.url\n        }}\n        style={{\n            height:80,\n            width:80\n        }}\n        />\n    </TouchableOpacity>\n    )\n}\n\nconst ChosenCompanies = [\n    {\n        stockName : 'Apple Inc.',\n        stockTicker : 'AAPL'\n    },\n    {\n        stockName : \"The Coca-Cola Company\",\n        stockTicker : 'KO'\n    },\n    {\n        stockName : \"JPMorgan Chase & Co.\",\n        stockTicker : \"JPM\",\n    },\n    {\n        stockName : \"The Walt Disney Company\",\n        stockTicker : \"DIS\"\n    },\n    {\n        stockName : \"Procter & Gamble Company\",\n        stockTicker : \"PG\"\n    }\n\n]","import React, {useState, useRef, useEffect} from 'react'\nimport {\n    View,\n    Text,\n    StyleSheet,\n    ScrollView,\n    Dimensions,\n    TouchableOpacity,\n    Modal,\n    Button,\n    Image,\n    TextInput\n} from 'react-native'\nimport {Octicons, Feather, MaterialIcons, MaterialCommunityIcons, AntDesign, Ionicons, Entypo } from '@expo/vector-icons'\nimport { AppConstants } from '../../assets/AppConstants';\nimport BigButtonRectangle from './AppDashboardHome/BigButtonRectangle';\nimport {\n    LineChart\n} from 'react-native-chart-kit'\nimport RingButtonSquare from './AppDashboardHome/RingButtonSquare';\nimport ConfigModal from './AppDashboardInvest/ConfigModal';\nimport Constants from 'expo-constants'\nimport { companyList, sectorList } from '../../assets/ExampleSNP';\nimport { nasdaq100, snp500, dji30 } from '../../assets/sampleIndices';\nimport MarketItem from './AppDashboardHome/MarketItem';\nimport RenderHtml from 'react-native-render-html';\nimport { alpacaNews } from '../../apis/alpaca';\n\nconst indexNames = ['S&P', 'Dow Jones', 'NASDAQ']\n\n\n\nexport default function AppDashboardNewsScreen({navigation, route} : any){\n    const  {news_object} = route.params\n    const [userPreferences, setUserPreferences] = useState({\n        fundPreference : 'Islamic',\n        riskTolerance : 'The Growth Seeker'\n    })\n\n    const [selectedCategory, setCategory] = useState<any>('')\n\n    return (\n        <ScrollView showsVerticalScrollIndicator={false} bounces={false}>\n        <View style={{ justifyContent: 'flex-start', alignItems: 'center',backgroundColor:'transparent', paddingTop:100}}>\n\n        <View style={{ borderRadius:6, height:401-100,width:'100%'\n   \n                }}>\n                    <View style={{alignSelf:'flex-start', paddingHorizontal:30}}>\n          <Text style={{fontFamily:'Overpass_700Bold', fontSize:40, color:'white'}} numberOfLines={5}>{news_object.headline}</Text>\n          <Text style={{fontFamily:'ArialNova', color:'#FFF', fontSize:16}}>\n                {news_object?.source} {'\\ @ '}\n                {new Date(news_object?.created_at).getHours()}:{new Date(news_object?.created_at).getMinutes()} \n                </Text>\n\n          </View>\n        \n        </View>\n\n        {news_object?.images[0]?.url && <Image source={{uri : news_object.images[0].url}} style={{height:300, width:360, borderRadius:10, marginTop:-10}}/>}\n            <View style={{padding:30}}>\n            <RenderHtml\n            source={{html : news_object.content}}\n            contentWidth = {Dimensions.get('window').width}\n            tagsStyles={{\n                p:{\n                    fontFamily:'ArialNova',\n                    lineHeight:24\n                }\n            }}\n            ignoredDomTags={['caption', 'svg']}\n            />\n            </View>\n\n        </View>\n\n        <View style={{ zIndex:-1, position:'absolute',width:'100%'}}>\n          <Image source={require('../../assets/nyse.png')} style={{}}/>\n          <View style = {{backgroundColor:'rgba(0, 23, 139,0.8)', position:'absolute',height:'100%',width:'100%'}}>\n                \n          </View>\n\n        </View>\n       \n        </ScrollView>\n      );\n}\n","import React, { useState, useRef, useEffect } from \"react\";\nimport {\n  View,\n  Text,\n  StyleSheet,\n  ScrollView,\n  Dimensions,\n  TouchableOpacity,\n  Modal,\n  Button,\n  Image,\n  TextInput,\n  TouchableWithoutFeedback,\n} from \"react-native\";\nimport {\n  Octicons,\n  Feather,\n  MaterialIcons,\n  MaterialCommunityIcons,\n  AntDesign,\n  Ionicons,\n  Entypo,\n} from \"@expo/vector-icons\";\n\nimport { UserPostion } from \"../Interfaces/UserPositionInterface\";\nimport { StockDictionary } from \"../Interfaces/StockDictionaryInterface\";\n\nimport ResponseModal from \"../components/ResponseModal\";\n\nconst indexNames = [\"Equities\", \"Fixed Income\", \"Cash\"];\n\nconst chartConfig = {\n  fillShadowGradientFrom: \"#3293F6\",\n  fillShadowGradientFromOpacity: 1,\n  fillShadowGradientToOpacity: 0,\n  fillShadowGradientTo: \"#FFFFFF00\",\n  //   backgroundColor: \"#e26a00\",\n  backgroundGradientFrom: \"white\",\n  backgroundGradientTo: \"white\",\n  decimalPlaces: 0, // optional, defaults to 2dp\n  color: (opacity = 1) => `#004DBC`,\n  labelColor: (opacity = 1) => `black`,\n  style: {\n    borderRadius: 16,\n  },\n  propsForDots: {\n    r: \"0\",\n    strokeWidth: \"0\",\n    // stroke: \"#ffa726\"\n  },\n  propsForBackgroundLines: {\n    strokeDasharray: \"\",\n    stroke: \"#E3E3E3\",\n  },\n  propsForLabels: {\n    // fontFamily:'ArialNova'\n    fontSize: 10,\n    stroke: \"#ccc\",\n    strokeWidth: 1,\n  },\n};\n\nexport default function AppDashboardMyPortfolioEquities({\n  navigation,\n  userPositions,\n  stockDictionary,\n  resetPositions,\n  userBalances,\n  alpacaService,\n  isSubscribed,\n  portfolioid,\n  miscValues,\n  alpacaBalanceService,\n}: {\n  navigation: any;\n  userPositions: UserPostion[];\n  stockDictionary: StockDictionary[];\n  resetPositions: any;\n  userBalances: any;\n  alpacaService: any;\n  isSubscribed:any;\n  portfolioid:any;\n  miscValues: any;\n  alpacaBalanceService :any;\n}) {\n  const [viewData, setViewData] = useState(false);\n  const [portfolioDetails,setPortfolioDetails]=useState({})\n  const [showResponseModal, setResponseModal] = useState(false)\n  const [responseModalConfig, setResponseModalConfig] = useState({\n    isSuccess : null,\n    message : \"\",\n    subMessage : \"\"\n})\n  useEffect(() => {\n    if(portfolioid!=null){\n      console.log(portfolioid)\n      alpacaService.fetchPortfolioName(portfolioid).then(cb=>setPortfolioDetails(cb.data))\n    }\n    \n   \n    resetPositions();\n  }, []);\n  const [selectedCategory, setCategory] = useState<any>(\"\");\n\n  function getStockFromSymbol(symbol: string) {\n    if (stockDictionary) {\n      return stockDictionary.filter((cb: any) => cb.symbol === symbol)[0]?.name;\n    }\n    return \"\";\n  }\n  const handleUnsubscribe = () => {\n    // Handle unsubscribe logic\n    alpacaService.unsubscribeFromPortfolio().then(cb=>{\n      console.log(cb);\n      if(cb!=undefined){\n        launchResponseModal({message: 'Your unsubscription request has been received successfully', subMessage:'Please reload the app for the changes to reflect. E-mail us at help@elphinstone.us for any queries or concerns', isSuccess: true})\n      }else{\n        launchResponseModal({message: 'Your unsubscription request could not be processed at the moment', subMessage:'Please try again in a few minutes or e-mail us at help@elphinstone.us if the error persists.', isSuccess: false})}\n      \n      })\n    \n    \n  };\n  function launchResponseModal({message, subMessage, isSuccess} : any) {\n    setResponseModalConfig({\n        message,\n        subMessage,\n        isSuccess\n    })\n    setResponseModal(true)\n}\n  setTimeout(() => setViewData(true), 1000);\n\n  return (\n    <ScrollView showsVerticalScrollIndicator={false} bounces={false}>\n      <View\n        style={{\n          justifyContent: \"flex-start\",\n          alignItems: \"center\",\n          backgroundColor: \"transparent\",\n          paddingTop: 100,\n        }}\n      >\n      <ResponseModal show={showResponseModal} closeModal={()=>setResponseModal(false)} {...responseModalConfig} />\n      \n        <View style={{ borderRadius: 6, height: 401 - 100, width: \"100%\" }}>\n          <View style={{ alignSelf: \"flex-start\", paddingHorizontal: 30 }}>\n            <Text\n              style={{\n                fontFamily: \"Overpass_700Bold\",\n                fontSize: 40,\n                color: \"white\",\n              }}\n            >\n              $\n              {userBalances.portfolio_value &&\n                parseFloat(userBalances?.portfolio_value).toLocaleString(\n                  undefined,\n                  {\n                    currency: \"USD\",\n                    maximumFractionDigits: 2,\n                    minimumFractionDigits: 2,\n                  }\n                )}\n            </Text>\n            <Text\n              style={{ fontFamily: \"ArialNova\", fontSize: 16, color: \"white\" }}\n            >\n              Total Portfolio Value\n            </Text>\n          </View>\n        </View>\n\n        <View\n          style={{\n            backgroundColor: \"#fff\",\n            width: Dimensions.get(\"window\").width * 0.8,\n            height: 200,\n            marginTop: -120,\n            shadowColor: \"#000\",\n            shadowOffset: {\n              width: 0,\n              height: 2,\n            },\n            shadowOpacity: 0.1,\n            shadowRadius: 9,\n            elevation: 5,\n            borderRadius: 6,\n          }}\n        >\n          <View\n            style={{\n              width: \"100%\",\n              height: \"100%\",\n              borderBottomColor: \"#97979744\",\n              borderBottomWidth: 0,\n              padding: 20,\n              flexDirection: \"row\",\n              justifyContent: \"space-between\",\n              alignItems: \"center\",\n            }}\n          >\n            <View>\n            {isSubscribed==false ?  <>\n              <Text\n                style={{\n                  fontFamily: \"Overpass_700Bold\",\n                  paddingBottom: 10,\n                }}\n              >\n                You are currently not subscribed to a portfolio!\n              </Text>\n              </>: \n              (<><Text\n                style={{\n                  fontFamily: \"Overpass_700Bold\",\n                  paddingBottom: 10,\n                }}\n              >\n                You are subscribed to a portfolio! {'\\n'} Portfolio Type: {portfolioDetails.portfoliotype}{'\\n'} Portfolio Name: {portfolioDetails.portfolioname}\n              </Text>\n             {/* //<Button style={{color:'#004DBC',paddingBottom:5}} onPress={()=>alpacaService.unsubscribeFromPortfolio()} title=\"Unsubscribe\"/> */}\n             <TouchableOpacity style={{ backgroundColor: \"#004DBC\",padding: 10,borderRadius: 5,marginLeft:20,marginBottom:10,alignItems:'center'}}\n              onPress={handleUnsubscribe}>\n                  <Text style={{fontFamily: \"Overpass_700Bold\",\n                  color: \"white\",\n                  }}>Unsubscribe</Text>\n              </TouchableOpacity></>\n             )}\n            \n              <Text\n                style={{\n                  fontFamily: \"ArialNova\",\n                  color: \"#1E293BCC\",\n                  paddingBottom: 10,\n                }}\n              >\n                Equity portfolio value in PKR\n              </Text>\n              <Text\n                style={{\n                  fontFamily: \"Overpass_700Bold\",\n                  fontSize: 24,\n                }}\n              >\n                {(\n                  miscValues.USDPKR *\n                  (userBalances.portfolio_value\n                    ? parseFloat(userBalances?.portfolio_value)\n                    : 0)\n                ).toLocaleString(undefined, {\n                  currency: \"USD\",\n                  maximumFractionDigits: 2,\n                  minimumFractionDigits: 2,\n                })}\n              </Text>\n            </View>\n          </View>\n        </View>\n\n        <Text\n          style={{\n            fontFamily: \"Overpass_700Bold\",\n            alignSelf: \"flex-start\",\n            paddingLeft: 30,\n            marginTop: 30,\n            fontSize: 16,\n          }}\n        >\n          Stocks & ETFs\n        </Text>\n        {viewData &&\n          userPositions.map((cb) => (\n            <PortfolioItem\n              onPress={() =>\n                navigation.navigate(\"Stock\", {\n                  stockTicker: cb.symbol,\n                })\n              }\n              stockName={getStockFromSymbol(cb.symbol)}\n              stockTicker={cb.symbol}\n              qty={cb.qty}\n              value={(parseFloat(cb.current_price) * parseFloat(cb.qty))\n                .toFixed(2)\n                .toLocaleString()}\n              key={cb.symbol}\n              ldp={parseFloat(cb.current_price) - parseFloat(cb.lastday_price)}\n            />\n          ))}\n\n        <View style={{ height: 100 }} />\n      </View>\n\n      <View style={{ zIndex: -1, position: \"absolute\", width: \"100%\" }}>\n        <Image source={require(\"../../assets/nyse.png\")} style={{}} />\n        <View\n          style={{\n            backgroundColor: \"rgba(0, 23, 139,0.8)\",\n            position: \"absolute\",\n            height: \"100%\",\n            width: \"100%\",\n          }}\n        ></View>\n      </View>\n    </ScrollView>\n  );\n}\n\nfunction PortfolioItem({\n  stockTicker,\n  stockName,\n  data,\n  qty,\n  value,\n  isLast,\n  ldp,\n  onPress,\n}: any) {\n  return (\n    <TouchableWithoutFeedback onPress={onPress}>\n      <View\n        style={{\n          width: \"95%\",\n          height: 100,\n          justifyContent: \"space-between\",\n          alignItems: \"center\",\n          flexDirection: \"row\",\n          borderBottomWidth: isLast ? 0 : 1,\n          borderBottomColor: \"rgba(151,151,151,0.2)\",\n          paddingHorizontal: 10,\n          paddingRight: 30,\n        }}\n      >\n        <View style={{ width: \"50%\" }}>\n          <Text style={{ fontFamily: \"Overpass_600SemiBold\", fontSize: 16 }}>\n            {stockTicker}\n          </Text>\n          <Text\n            style={{\n              fontFamily: \"ArialNova\",\n              fontSize: 12,\n              zIndex: 2,\n            }}\n          >\n            {stockName}\n          </Text>\n        </View>\n        <View style={{ width: \"30%\", alignItems: \"flex-end\" }}>\n          <Text\n            style={{\n              fontFamily: \"Overpass_600SemiBold\",\n              fontSize: 16,\n            }}\n          >\n            <Text style={{ color: ldp > 0 ? `#44D94C` : \"red\" }}>$ </Text>{\" \"}\n            {value}\n          </Text>\n          <Text\n            style={{\n              fontFamily: \"Overpass_600SemiBold\",\n              color: ldp > 0 ? `#44D94C` : \"red\",\n            }}\n          >\n            <Feather\n              name={ldp > 0 ? \"arrow-up\" : \"arrow-down\"}\n              size={16}\n              color={ldp > 0 ? `#44D94C` : \"red\"}\n            />\n\n            {(ldp * parseInt(qty)).toFixed(2)}\n          </Text>\n          <Text\n            style={{\n              fontFamily: \"ArialNova\",\n              zIndex: 2,\n              fontSize: 12,\n              color: \"#888\",\n              marginVertical: 2,\n            }}\n            numberOfLines={1}\n            adjustsFontSizeToFit\n          >\n            No of shares:{\" \"}\n            {parseFloat(qty).toLocaleString(undefined, {\n              maximumFractionDigits: 2,\n              minimumFractionDigits: 2,\n            })}\n          </Text>\n        </View>\n      </View>\n    </TouchableWithoutFeedback>\n  );\n}\n","import React,{ useState, useEffect } from 'react'\nimport {\n    View,\n    StyleSheet,\n    Text,\n    Dimensions,\n    TextInput,\n    TouchableWithoutFeedback,\n    TouchableOpacity\n} from 'react-native'\nimport { AlpacaAccountsError, AppConstants } from '../../../assets/AppConstants'\nimport CustomSelector from '../SignupScreen/SignupComponents/SignupMiscComponents/CustomSelector'\nimport {AntDesign} from '@expo/vector-icons'\n\n\nexport default function TradeBox({navigation, route, alpacaService, launchResponseModal, stock, userBalances, currentHolding} : any){\n    const [amount, setAmount] = useState(\"\")\n    const [orderType, setOrderType] = useState('Market')\n    const [orderSide, setOrderSide] = useState('Buy')\n    const [noOfShares, setNoOfShares] = useState<Number>()\n    const [limitPrice, setLimitPrice] = useState(\"\")\n    const [stopPrice, setStopPrice] = useState(\"\")\n    const [trailPercent, setTrailPercent] = useState<any>(null)\n    const [trailPrice, setTrailPrice] = useState<any>(null)\n    const [timeInForce, setTimeInForce] = useState<string>('Day')\n    const updateNoOfShare = () => {\n        try{\n            \n            const value = parseFloat(amount)/parseFloat(stock?.bar?.c)\n            setNoOfShares(value)\n        }catch(e){\n        }\n    }\n    const resetFields = () => {\n        setAmount(\"\")\n        setAmount(\"\")\n        setLimitPrice(\"\")\n        setNoOfShares()\n    }\n\n    const updateMarket = (val : string) => {\n        try{\n            setAmount(val)\n            const value = parseFloat(val)/parseFloat(stock?.bar?.c)\n            setNoOfShares(value)\n        }catch(e){\n            console.log(e)\n        }\n    }\n\n    const updateMarketSell = (val : string) => {\n        try{\n            setNoOfShares(parseFloat(val))\n            const value = parseFloat(val) * parseFloat(stock?.bar?.c)\n            setAmount(value)\n        }catch(e){\n            console.log(e)\n        }\n    }\n\n    const updateLimitPriceNOS = (nos : string) => {\n        try{\n            setNoOfShares(nos)\n            setAmount((parseFloat(limitPrice) * parseFloat(nos)).toLocaleString())\n        }catch(e){\n            console.log(e)\n        }\n    }\n\n    const updateLimitPriceLP = (lp : string) => {\n        try{\n            setLimitPrice(lp)\n            setAmount((parseFloat(lp) * parseFloat(noOfShares)).toLocaleString())\n        }catch(e){\n            console.log(e)\n        }\n    }\n\n    const updateSpotPriceNOS = (nos : string) => {\n        try{\n            setNoOfShares(nos)\n            setAmount((parseFloat(stopPrice) * parseFloat(nos)).toLocaleString())\n        }catch(e){\n            console.log(e)\n        }\n    }\n\n    const updateSpotPriceSP = (sp : string) => {\n        try{\n            setLimitPrice(sp)\n            setAmount((parseFloat(sp) * parseFloat(noOfShares)).toLocaleString())\n        }catch(e){\n            console.log(e)\n        }\n    }\n\n    useEffect(()=>{\n        resetFields()\n    },[orderType, orderSide])\n    return(\n        <View style={{alignItems:'center'}}>\n            \n            <View style={{backgroundColor:'#F5FAFF', width:Dimensions.get('window').width, paddingHorizontal:0, paddingVertical:20,alignItems:'center', marginTop:20}}>\n            <View style={{flexDirection:'row', width:'100%', paddingLeft:20, marginVertical:20}}>\n                <TouchableWithoutFeedback onPress={()=>setOrderSide('Buy')}>\n                    <View style={{padding:10, paddingHorizontal:20, backgroundColor: orderSide ==='Buy' ? AppConstants.loginHeaderBlue : 'transparent', borderRadius:6, borderWidth:1, borderColor:AppConstants.loginHeaderBlue}}>\n                        <Text style={{color:orderSide ==='Buy' ? 'white' : AppConstants.loginHeaderBlue, fontSize:16, fontFamily:'ArialNova-Bold'}}>\n                            Buy\n                        </Text>\n                    </View>\n                </TouchableWithoutFeedback>\n                <TouchableWithoutFeedback onPress={()=>setOrderSide('Sell')}>\n                    <View style={{padding:10, paddingHorizontal:20, marginLeft:15, backgroundColor: orderSide ==='Sell' ? AppConstants.loginHeaderBlue : 'transparent', borderRadius:6, borderWidth:1, borderColor:AppConstants.loginHeaderBlue}}>\n                        <Text style={{color:orderSide ==='Sell' ? 'white' : AppConstants.loginHeaderBlue, fontSize:16, fontFamily:'ArialNova-Bold'}}>\n                            Sell\n                        </Text>\n                    </View>\n                </TouchableWithoutFeedback>\n            </View>\n                <Text style={{fontFamily:'ArialNova', paddingTop:20, alignSelf:'flex-start', fontSize:18, paddingHorizontal:Dimensions.get('window').width * 0.05}}>\n                    Order type\n                </Text>\n                <CustomSelector\n                itemList={['Market', 'Limit Price', 'Stop Price', 'Stop-Limit Price', 'Trailing Stop']}\n                selectedValue={orderType}\n                setValue={setOrderType}\n                />\n                <Text style={{paddingTop:10, fontFamily:'ArialNova', color:'#8C949D', fontSize:11, paddingHorizontal:Dimensions.get('window').width * 0.05}}>\n                <Text style={{fontFamily:'ArialNova-Bold'}}>Note: </Text> \n                {orderType === 'Market' && \"For market orders, you can set the amount of money you want to transact in a particular stock or ETF, and we will buy or sell it for you at the prevailing market price.\"}\n                {orderType === 'Limit Price' && \"For limit orders, you can set the price and quantity of shares you wish to buy or sell, but note that if no other buyers or sellers wish to transact at that price, your trade may not get executed.\"}\n                {orderType === 'Stop Price' && \"A stop order allows you to buy or sell a stock at the market price once the stock has hit a specified price. Bear in mind that the stop price is not the one you are guaranteed to get.\"}\n                {orderType === 'Stop-Limit Price' && \"A stop-limit order allows you to buy or sell a stock at the market price, but within a limit that you set.\"}\n                {orderType === 'Trailing Stop' && \"A trailing stop order allows you to buy or sell a stock once it has hit a limit that you set, allowing you to limit your losses.\"}\n                \n\n                </Text>\n\n                \n                \n\n\n\n            </View>\n            <View style={{width:'100%', alignItems:'center'}}>\n                {\n                    (orderType === 'Market' && orderSide === 'Buy') &&  \n                    <View style={{width:'90%', marginTop:40, flexDirection:'row', justifyContent:'space-between'}}>\n                        <View style={{width:'50%',}}>\n                        <Text>\n                            Amount\n                        </Text>\n                        <TextInput\n                        style={{height:60, backgroundColor:'white', padding:10, borderRadius:6, marginTop:20,marginRight:10, borderWidth:1, borderColor:'#DDD'}}\n                        placeholder={'e.g., 50'}\n                        keyboardType='numeric'\n                        onChangeText={cb => updateMarket(cb)}\n                        value={amount}\n                        />\n                        </View>\n                        <View style={{width:'50%'}}>\n                        <Text style={{marginLeft:10}}>\n                            No. of Shares\n                        </Text>\n                        <TextInput\n                        style={{height:60, backgroundColor:'white', padding:10, borderRadius:6, marginTop:20, marginLeft:10, borderWidth:1, borderColor:'#DDD'}}\n                        placeholder='e.g., 0.06'\n                        keyboardType='numeric'\n                        value={Number.isNaN(noOfShares) ? '0' : noOfShares && noOfShares.toLocaleString(undefined,{minimumFractionDigits:2, maximumSignificantDigits:2})}\n                        editable={false}\n                        />\n                        </View>\n                    </View>\n                }\n                {\n                    (orderType === 'Market' && orderSide === 'Sell') &&  \n                    <View style={{width:'90%', marginTop:40, flexDirection:'row', justifyContent:'space-between'}}>\n\n                        <View style={{width:'50%'}}>\n                        <Text style={{marginRight:10}}>\n                            No. of Shares\n                        </Text>\n                        <TextInput\n                        style={{height:60, backgroundColor:'white', padding:10, borderRadius:6, marginTop:20, marginRight:10, borderWidth:1, borderColor:'#DDD'}}\n                        placeholder='e.g., 0.06'\n                        keyboardType='numeric'\n                        onChangeText={cb => updateMarketSell(cb)}\n                        value={noOfShares}\n                        \n                        />\n                        <TouchableOpacity style={{marginTop:10}} onPress ={()=>updateMarketSell((currentHolding))}>\n                            <Text style={{color:AppConstants.loginHeaderBlue}}>\n                            Sell All\n                            </Text>\n                        </TouchableOpacity>\n                        </View>\n\n                        <View style={{width:'50%',}}>\n                        <Text style={{marginLeft:10}}>\n                            Amount\n                        </Text>\n                        <TextInput\n                        style={{height:60, backgroundColor:'white', padding:10, borderRadius:6, marginTop:20,marginLeft:10, borderWidth:1, borderColor:'#DDD'}}\n                        placeholder={'e.g., 50'}\n                        keyboardType='numeric'\n                        value={isNaN(amount) ? '0' : amount && parseFloat(amount).toString()}\n                        editable={false}\n                        />\n                        </View>\n                        \n                    </View>\n                }\n                {\n                    orderType === 'Limit Price' && \n                    <View style={{width:'90%', marginTop:40}}>\n                        <View style={{width:'100%', flexDirection:'row', justifyContent:'space-between' }}>\n                        <View style={{width:'50%',}}>\n                        <Text>\n                            No. of shares\n                        </Text>\n                        <TextInput\n                        style={{height:60, backgroundColor:'white', padding:10, borderRadius:6, marginTop:20,marginRight:10, borderWidth:1, borderColor:'#DDD'}}\n                        placeholder={'e.g., 50'}\n                        keyboardType='numeric'\n                        onChangeText={cb => updateLimitPriceNOS(cb)}\n                        value={noOfShares?.toString()}\n                        />\n                        {false && orderSide === 'Sell' && <TouchableOpacity style={{marginTop:10}} onPress ={()=>updateLimitPriceNOS((currentHolding))}>\n                            <Text style={{color:AppConstants.loginHeaderBlue}}>\n                            Sell All\n                            </Text>\n                        </TouchableOpacity>}\n                        </View>\n                        <View style={{width:'50%'}}>\n                        <Text style={{marginLeft:10}}>\n                            Limit Price\n                        </Text>\n                        <TextInput\n                        style={{height:60, backgroundColor:'white', padding:10, borderRadius:6, marginTop:20, marginLeft:10, borderWidth:1, borderColor:'#DDD'}}\n                        placeholder='e.g., 50'\n                        keyboardType='numeric'\n                        onChangeText={cb => updateLimitPriceLP(cb)}\n                        editable={true}\n                        />\n                        </View>\n                        </View>\n\n\n                        <View style={{width:'100%', height:100}}>\n                        <Text style={{marginTop:10}}>\n                            Amount\n                        </Text>\n                        <TextInput\n                        style={{width:Dimensions.get('window').width * 0.9,height:60, backgroundColor:'white', padding:10, borderRadius:6, marginTop:20, borderWidth:1, borderColor:'#DDD'}}\n                        placeholder='e.g., 50'\n                        keyboardType='numeric'\n                        value={isNaN(amount) ? '0' : amount}\n                        editable={false}\n                        />\n                        </View>\n\n                        <View style={{width:'100%', height:100}}>\n                        <Text style={{marginTop:20}}>\n                            Time-In-Force\n                        </Text>\n                        <CustomSelector\n                        selectedValue={timeInForce}\n                        setValue={setTimeInForce}\n                        itemList = {['Day','Good until canceled']}\n                        />\n                        \n                        </View>\n                        \n                    </View>\n                }\n\n{\n                    orderType === 'Stop Price' && \n                    <View style={{width:'90%', marginTop:40}}>\n                        <View style={{width:'100%', flexDirection:'row', justifyContent:'space-between' }}>\n                        <View style={{width:'50%',}}>\n                        <Text>\n                            No. of shares\n                        </Text>\n                        <TextInput\n                        style={{height:60, backgroundColor:'white', padding:10, borderRadius:6, marginTop:20,marginRight:10, borderWidth:1, borderColor:'#DDD'}}\n                        placeholder={'e.g., 50'}\n                        keyboardType='numeric'\n                        onChangeText={cb => updateSpotPriceNOS(cb)}\n                        value = {noOfShares?.toString()}\n                        />\n                        {false && orderSide === 'Sell' && <TouchableOpacity style={{marginTop:10}} onPress ={()=>updateSpotPriceNOS((currentHolding))}>\n                            <Text style={{color:AppConstants.loginHeaderBlue}}>\n                            Sell All\n                            </Text>\n                        </TouchableOpacity>}\n                        </View>\n                        <View style={{width:'50%'}}>\n                        <Text style={{marginLeft:10}}>\n                            Stop Price\n                        </Text>\n                        <TextInput\n                        style={{height:60, backgroundColor:'white', padding:10, borderRadius:6, marginTop:20, marginLeft:10, borderWidth:1, borderColor:'#DDD'}}\n                        placeholder='e.g., 55'\n                        keyboardType='numeric'\n                        onChangeText={cb => updateSpotPriceSP(cb)}\n                        editable={true}\n                        />\n                        </View>\n                        </View>\n\n\n                        <View style={{width:'100%', height:100}}>\n                        <Text style={{marginTop:10}}>\n                            Amount\n                        </Text>\n                        <TextInput\n                        style={{width:Dimensions.get('window').width * 0.9,height:60, backgroundColor:'white', padding:10, borderRadius:6, marginTop:20, borderWidth:1, borderColor:'#DDD'}}\n                        placeholder='e.g., 0.06'\n                        keyboardType='numeric'\n                        value={isNaN(amount) ? '0' : amount}\n                        editable={false}\n                        />\n                        \n                        </View>\n\n                        <View style={{width:'100%', height:100}}>\n                        <Text style={{marginTop:20}}>\n                            Time-In-Force\n                        </Text>\n                        <CustomSelector\n                        selectedValue={timeInForce}\n                        setValue={setTimeInForce}\n                        itemList = {['Day','Good until canceled']}\n                        />\n                        \n                        </View>\n                        \n                        \n                    </View>\n                }\n\n                {\n                    orderType === 'Stop-Limit Price' && \n                    <View style={{width:'90%', marginTop:40}}>\n                        <View style={{width:'100%'}}>\n                        <Text style={{}}>\n                            No. of Shares\n                        </Text>\n                        <TextInput\n                        style={{width:Dimensions.get('window').width * 0.9,height:60, backgroundColor:'white', padding:10, borderRadius:6, marginTop:20, borderWidth:1, borderColor:'#DDD'}}\n                        placeholder='e.g., 50'\n                        keyboardType='numeric'\n                        editable={true}\n                        onChangeText={cb=>setNoOfShares(cb)}\n                        value = {noOfShares?.toString()}\n                        />\n                        {false && orderSide === 'Sell' && <TouchableOpacity style={{marginTop:10}} onPress ={()=>setNoOfShares((currentHolding))}>\n                            <Text style={{color:AppConstants.loginHeaderBlue}}>\n                            Sell All\n                            </Text>\n                        </TouchableOpacity>}\n                        </View>\n                        <View style={{width:'100%', flexDirection:'row', justifyContent:'space-between' ,marginTop:20}}>\n                        <View style={{width:'50%',}}>\n                        <Text>\n                            Limit Price\n                        </Text>\n                        <TextInput\n                        style={{height:60, backgroundColor:'white', padding:10, borderRadius:6, marginTop:20,marginRight:10, borderWidth:1, borderColor:'#DDD'}}\n                        placeholder={'e.g., 50'}\n                        keyboardType='numeric'\n                        onChangeText={cb => setLimitPrice(cb)}\n                        />\n                        </View>\n                        <View style={{width:'50%'}}>\n                        <Text style={{marginLeft:10}}>\n                            Stop Price\n                        </Text>\n                        <TextInput\n                        style={{height:60, backgroundColor:'white', padding:10, borderRadius:6, marginTop:20, marginLeft:10, borderWidth:1, borderColor:'#DDD'}}\n                        placeholder='e.g., 55'\n                        keyboardType='numeric'\n                        onChangeText={cb => setStopPrice(cb)}\n                        editable={true}\n                        />\n                        </View>\n                        </View>\n\n                        <View style={{width:'100%', height:100}}>\n                        <Text style={{marginTop:20}}>\n                            Time-In-Force\n                        </Text>\n                        <CustomSelector\n                        selectedValue={timeInForce}\n                        setValue={setTimeInForce}\n                        itemList = {['Day','Good until canceled']}\n                        />\n                        \n                        </View>\n\n\n                        \n                        \n                    </View>\n                }\n\n                {\n                    orderType === 'Trailing Stop' && \n                    <View style={{width:'90%', marginTop:40}}>\n                        <View style={{width:'100%'}}>\n                        <Text style={{}}>\n                            No. of Shares\n                        </Text>\n                        <TextInput\n                        style={{width:Dimensions.get('window').width * 0.9,height:60, backgroundColor:'white', padding:10, borderRadius:6, marginTop:20, borderWidth:1, borderColor:'#DDD'}}\n                        placeholder='e.g., 50'\n                        keyboardType='numeric'\n                        editable={true}\n                        onChangeText={cb=>setNoOfShares(cb)}\n                        value = {noOfShares?.toString()}\n                        />\n                        {false && orderSide === 'Sell' && <TouchableOpacity style={{marginTop:10}} onPress ={()=>setNoOfShares((currentHolding))}>\n                            <Text style={{color:AppConstants.loginHeaderBlue}}>\n                            Sell All\n                            </Text>\n                        </TouchableOpacity>}\n                        </View>\n                        <View style={{width:'100%', flexDirection:'row', justifyContent:'space-between' ,marginTop:20}}>\n                        <View style={{width:'50%',}}>\n                        <Text>\n                            Trail Percent\n                        </Text>\n                        <TextInput\n                        style={{height:60, backgroundColor:'white', padding:10, borderRadius:6, marginTop:20,marginRight:10, borderWidth:1, borderColor:'#DDD'}}\n                        placeholder={'e.g., 50'}\n                        keyboardType='numeric'\n                        onChangeText={cb => {setTrailPercent(cb); setTrailPrice(null)}}\n                        value={trailPercent}\n                        />\n                        </View>\n                        <View style={{width:'50%'}}>\n                        <Text style={{marginLeft:10}}>\n                            Trail Price\n                        </Text>\n                        <TextInput\n                        style={{height:60, backgroundColor:'white', padding:10, borderRadius:6, marginTop:20, marginLeft:10, borderWidth:1, borderColor:'#DDD'}}\n                        placeholder='e.g., 55'\n                        keyboardType='numeric'\n                        onChangeText={cb => {setTrailPrice(cb); setTrailPercent(null)}}\n                        editable={true}\n                        value={trailPrice}\n                        />\n                        </View>\n                        </View>\n\n\n                        <View style={{width:'100%', height:100}}>\n                        <Text style={{marginTop:20}}>\n                            Time-In-Force\n                        </Text>\n                        <CustomSelector\n                        selectedValue={timeInForce}\n                        setValue={setTimeInForce}\n                        itemList = {['Day','Good until canceled']}\n                        />\n                        \n                        </View>\n\n\n                        \n                        \n                    </View>\n                }\n            </View>\n                \n            <View style={{backgroundColor:'#fff', width:Dimensions.get('window').width *0.9 , height:100,shadowColor: \"#000\", justifyContent:'space-around',\n                shadowOffset: {\n                    width: 0,\n                    height: 2,\n                },\n                shadowOpacity: 0.1,\n                shadowRadius: 9,\n                elevation:5,\n                borderRadius:6,\n                marginTop:30,\n                flexDirection:'row'\n                }}>\n                    <View style={{height:'100%', padding:20,flex:1}}>\n                    <Text style={{fontFamily:'ArialNova'}}>\n                    Funds Available\n                </Text>\n                <Text style={{fontFamily:'Overpass_700Bold', fontSize:24}}>\n                ${userBalances && parseFloat(userBalances?.buying_power).toFixed(2)}\n                </Text>\n                </View>\n                <TouchableOpacity style={{width:'40%', height:'100%', backgroundColor:'#F1F5F9', flexDirection:'row',alignItems:'center',justifyContent:'center'}} onPress={()=>navigation.navigate('Add Funds')}>\n                    <AntDesign\n                    name='pluscircleo'\n                    color='#8B97A8'\n\n                    />\n                    <Text style={{fontFamily:'Overpass_400Regular', color:'#8B97A8', paddingLeft:10}}>\n                        Add Funds\n                    </Text>\n                </TouchableOpacity>\n\n                \n                </View>\n                <TouchableOpacity style={{width:Dimensions.get('window').width * 0.9, height:54, borderWidth:0, borderColor: '#3293F6', borderRadius:6, backgroundColor:'#004DBC', flexDirection:'row', paddingHorizontal:20, justifyContent:'space-between', alignItems:'center', marginTop:30}} \n                onPress={()=> noOfShares && alpacaService.placeIndividualStockOrder({\n                    stockTicker : route.params.stockTicker,\n                    qty : noOfShares?.toString(),\n                    orderType : orderType,\n                    side : orderSide.toLowerCase(),\n                    limit_price : limitPrice,\n                    stop_price : stopPrice,\n                    trail_price : trailPrice,\n                    trail_percent : trailPercent,\n                    time_in_force : timeInForce.toLowerCase()\n\n                }).then( cb => {\n                    console.log(cb)\n                    launchResponseModal({message: `Your ${orderSide.toLowerCase()} order has been placed successfully`, subMessage:'We’ve sent you a confirmation email. Please check your inbox.', isSuccess: true})\n                }).catch( cb => {\n                   \n                    launchResponseModal(AlpacaAccountsError(cb.getErrorMsg(),cb.getStatusCode(),orderSide.toLowerCase()).GenericErrorResponse)\n                }\n                )\n            \n            }\n                disabled={!noOfShares}\n                >\n                        <Text style={{color:'white', fontFamily:'ArialNova'}}>\n                            {orderSide} {route.params.stockTicker}\n                        </Text>\n                        <AntDesign name='arrowright' color={'white'} size={24}/>\n                    </TouchableOpacity>\n        </View>        \n    )\n}","import React, {useState, useRef, useEffect} from 'react'\nimport {\n    View,\n    Text,\n    StyleSheet,\n    ScrollView,\n    Dimensions,\n    TouchableOpacity,\n    Modal,\n    Button,\n    Image,\n    TextInput,\n    TouchableWithoutFeedback\n} from 'react-native'\nimport {Octicons, Feather, MaterialIcons, MaterialCommunityIcons, AntDesign, Ionicons, Entypo } from '@expo/vector-icons'\nimport Constants from 'expo-constants';\nimport { nasdaq100, snp500, dji30 } from '../../assets/sampleIndices';\nimport MarketItem from './AppDashboardHome/MarketItem';\nimport { getLatestStockData } from '../../apis/alpaca';\nimport {\n    LineChart, PieChart\n} from 'react-native-chart-kit'\nimport { AAPL } from './AppDashboardStockSample';\nimport CustomSelector from './SignupScreen/SignupComponents/SignupMiscComponents/CustomSelector';\nimport AlpacaService from '../../api/lib/AlpacaService';\nimport ResponseModal from '../components/ResponseModal';\nimport TradeBox from './AppDashboardIndivdualStock/TradeBox';\n\n\n\nfunction compressNumber(num : number) {\n    // Dictionary of suffixes\n    const suffixes = {\n      0: '',\n      3: 'K',\n      6: 'M',\n      9: 'B',\n      12: 'T',\n      15: 'Q',\n    };\n  \n    // If the number is 0, return 0\n    if (num === 0) {\n      return '0';\n    }\n  \n    // Find the magnitude of the number\n    const magnitude = Math.floor(Math.log10(num) / 3);\n    let suffix = '';\n    if (suffixes[magnitude * 3]) {\n      suffix = suffixes[magnitude * 3];\n    }\n  \n    // Return the number with the suffix\n    return `${(num / (10 ** (magnitude * 3))).toFixed(1)}${suffix}`;\n  }\n\n  \n\nexport default function AppDashboardIndividualStock({route, navigation, userPositions, resetPositions, userBalances,alpacaService} : any){\n\n    useEffect(()=>{\n        resetPositions()\n    },[])\n\n\n    const [showResponseModal, setResponseModal] = useState(false)\n    const [responseModalConfig, setResponseModalConfig] = useState({\n        isSuccess : null,\n        message : \"\",\n        subMessage : \"\"\n    })\n    function launchResponseModal({message, subMessage, isSuccess} : any) {\n        setResponseModalConfig({\n            message,\n            subMessage,\n            isSuccess\n        })\n        setResponseModal(true)\n    }\n\n\n    const [stock, setStock] = useState<any>({})\n    const [position, setPosition] = useState(userPositions.filter(cb => cb.symbol === route.params.stockTicker)[0])\n    useEffect(() => {\n         alpacaService.getLatestStockData({symbol : route.params.stockTicker}).then(cb=>setStock(cb))\n    },[route.params.stockTicker])\n\n\n    return (\n        <ScrollView showsVerticalScrollIndicator={false} bounces={false}>\n        <View style={{ justifyContent: 'flex-start', alignItems: 'center',backgroundColor:'transparent', paddingTop:100}}>\n        <ResponseModal show={showResponseModal} closeModal={()=>setResponseModal(false)} {...responseModalConfig}/>\n        <View style={{ borderRadius:6, height:401-100,width:'100%',\n   \n                }}>\n                    <View style={{alignSelf:'flex-start', paddingHorizontal:30}}>\n          <Text style={{fontFamily:'Overpass_700Bold', fontSize:40, color:'white'}}>\n            ${stock?.bar && (stock?.bar?.c)?.toLocaleString(undefined,{currency:'USD',maximumFractionDigits:2, minimumFractionDigits:2})}\n            </Text>\n          <Text style={{fontFamily:'ArialNova', fontSize:16, color:'white'}}>Stock Price</Text>\n          </View>\n        \n        </View>\n\n        <View style={{backgroundColor:'#fff', width:Dimensions.get('window').width * 0.8, height:180, marginTop:-120,shadowColor: \"#000\",\n                shadowOffset: {\n                    width: 0,\n                    height: 2,\n                },\n                shadowOpacity: 0.1,\n                shadowRadius: 9,\n                elevation:5,\n                borderRadius:6\n                }}>\n                    <View style={{width:'100%', height:'50%', borderBottomColor:'#97979744', borderBottomWidth:1, overflow:'hidden', flexDirection:'row', justifyContent:'space-between',alignItems:'center',borderRadius:6}}>\n                        <View style={{height:'100%', width:'50%', padding:20}}>\n                            <Text style={{fontFamily:'ArialNova', fontSize:11, color:'#1E293BCC'}}>\n                                Open\n                            </Text>\n                            <Text style={{fontFamily:'Overpass_700Bold', fontSize:24}} adjustsFontSizeToFit={true} numberOfLines={1}>\n                                {stock.bar && (stock?.bar?.o)?.toLocaleString(undefined, {minimumFractionDigits : 2, maximumFractionDigits:2})}\n                            </Text>\n\n                        </View>\n                        <View style={{height:'100%', width:'50%', padding:20}}>\n                            <Text style={{fontFamily:'ArialNova', fontSize:11, color:'#1E293BCC'}}>\n                                Volume\n                            </Text>\n                            <Text style={{fontFamily:'Overpass_700Bold', fontSize:24}} adjustsFontSizeToFit={true} numberOfLines={1}>\n                                {stock.bar && compressNumber(stock?.bar?.v)}\n                            </Text>\n\n                        </View>\n                    </View>\n\n                    <View style={{width:'100%', height:'50%', borderBottomColor:'#97979744', borderBottomWidth:1, overflow:'hidden', flexDirection:'row', justifyContent:'space-between',alignItems:'center',borderRadius:6}}>\n                        <View style={{height:'100%', width:'50%', padding:20}}>\n                            <Text style={{fontFamily:'ArialNova', fontSize:11, color:'#1E293BCC'}}>\n                                Day Low\n                            </Text>\n                            <Text style={{fontFamily:'Overpass_700Bold', fontSize:24}} adjustsFontSizeToFit={true} numberOfLines={1}>\n                                {stock.bar && (stock?.bar?.l)?.toLocaleString(undefined, {minimumFractionDigits : 2, maximumFractionDigits:2})}\n                            </Text>\n\n                        </View>\n                        <View style={{height:'100%', width:'50%', padding:20}}>\n                            <Text style={{fontFamily:'ArialNova', fontSize:11, color:'#1E293BCC'}}>\n                                Day High\n                            </Text>\n                            <Text style={{fontFamily:'Overpass_700Bold', fontSize:24}} adjustsFontSizeToFit={true} numberOfLines={1}>\n                                {stock.bar && (stock?.bar?.h)?.toLocaleString(undefined, {minimumFractionDigits : 2, maximumFractionDigits:2})}\n                            </Text>\n\n                        </View>\n                    </View>\n\n        </View>\n\n\n        <View style={{backgroundColor:'#fff', width:Dimensions.get('window').width * 0.8,shadowColor: \"#000\", justifyContent:'space-around',paddingVertical:20,\n                shadowOffset: {\n                    width: 0,\n                    height: 2,\n                },\n                shadowOpacity: 0.1,\n                shadowRadius: 9,\n                elevation:5,\n                borderRadius:6,\n                marginTop:30\n                }}>\n                    <View style={{width:'100%', borderBottomColor:'#97979744', borderBottomWidth:0, paddingHorizontal:20, paddingBottom:0}}>\n                    <Text style={{fontFamily:'ArialNova', fontSize:16}}>\n                    My Existing Holding\n                </Text>\n                </View>\n                <View style={{flexDirection:'row', justifyContent:'space-between', marginTop:20, paddingHorizontal:20}}>\n                <View style={{marginVertical:10}}>\n                    <Text style={{fontFamily: 'ArialNova', fontSize:11, color:'#1E293BCC', marginHorizontal:25}}>\n                        Market Value\n                    </Text>\n                \n                <View style={{flexDirection:'row', alignItems:'center', marginVertical:10}}>\n\n                <View style={{height:10, width:10, borderRadius:5, backgroundColor:'#004DBC', marginHorizontal:5, marginRight:10 }}/>\n                \n                <Text style={{fontFamily:'Overpass_700Bold', fontSize:20}} numberOfLines={1} adjustsFontSizeToFit>\n                $ {position ? parseFloat(position.market_value).toLocaleString(undefined, {minimumFractionDigits : 2, maximumFractionDigits:2}) : (0).toLocaleString(undefined, {minimumFractionDigits : 2, maximumFractionDigits:2})} \n                 {/* {position?.qty && <Text style={{fontSize:12, fontFamily:'ArialNova', color:'#888'}}>(No. of Shares : {parseFloat(position.qty).toLocaleString(undefined,{minimumFractionDigits:2, maximumFractionDigits:2})})</Text>} */}\n                </Text>\n                </View>\n\n\n                </View>\n\n\n                <View style={{marginVertical:10}}>\n                    <Text style={{fontFamily: 'ArialNova', fontSize:11, color:'#1E293BCC', marginHorizontal:20,}}>\n                        No. of Shares\n                    </Text>\n                \n                <View style={{flexDirection:'row', alignItems:'center', marginVertical:10}}>\n\n                <View style={{height:10, width:10, borderRadius:5, backgroundColor:'#3293F6', marginHorizontal:5, marginRight:10 }}/>\n                \n                <Text style={{fontFamily:'Overpass_700Bold', fontSize:20}} numberOfLines={1} adjustsFontSizeToFit>\n                {position?.qty ? parseFloat(position.qty).toLocaleString(undefined, {minimumFractionDigits : 2, maximumFractionDigits:2}) : (0).toLocaleString(undefined, {minimumFractionDigits : 2, maximumFractionDigits:2})} \n                 {/* {position?.qty && <Text style={{fontSize:12, fontFamily:'ArialNova', color:'#888'}}>(No. of Shares : {parseFloat(position.qty).toLocaleString(undefined,{minimumFractionDigits:2, maximumFractionDigits:2})})</Text>} */}\n                </Text>\n                </View>\n\n\n                </View>\n\n                </View>\n                </View>\n            \n        \n            <TradeBox navigation={navigation} alpacaService = {alpacaService} route={route} launchResponseModal={launchResponseModal} userBalances={userBalances} stock={stock} currentHolding={position?.qty}/>\n            \n            <View style={{height:100}}/>\n                \n        </View>\n\n        <View style={{ zIndex:-1, position:'absolute',width:'100%'}}>\n          <Image source={require('../../assets/nyse.png')} style={{}}/>\n          <View style = {{backgroundColor:'rgba(0, 23, 139,0.8)', position:'absolute',height:'100%',width:'100%'}}>\n                \n          </View>\n\n        </View>\n       \n        </ScrollView>\n      );\n}\n","import React from 'react';\nimport { TouchableOpacity, Image, ToastAndroid, Alert, Platform } from 'react-native';\nimport Clipboard from '@react-native-clipboard/clipboard';\n\nconst CopyToClipboard = ({ referralCode }) => {\n  const copyToClipboard = () => {\n    Clipboard.setString(\n      `Sign up for Elphinstone and invest your money in the United States! Use my referral code ${referralCode} and we both will receive a $5 bonus when you fund your account with $500 or more!`\n    );\n\n    if (Platform.OS === 'android') {\n      ToastAndroid.show('Text copied to clipboard', ToastAndroid.SHORT);\n    } else {\n      Alert.alert('Copied to clipboard', 'Text copied to clipboard');\n    }\n  };\n\n  return (\n    <TouchableOpacity onPress={copyToClipboard}>\n      <Image source={require('../../assets/images/clipboard.png')} style={{ width: 24, height: 24, marginRight:'60%',marginBottom:8}} />\n    </TouchableOpacity>\n  );\n};\n\nexport default CopyToClipboard;\n","import React, {useState, useRef, useEffect, useContext} from 'react'\nimport {\n    View,\n    Text,\n    StyleSheet,\n    ScrollView,\n    Dimensions,\n    TouchableOpacity,\n    Modal,\n    Button,\n    Image,\n    TextInput,\n    Linking\n} from 'react-native'\nimport {Octicons, Feather, MaterialIcons, MaterialCommunityIcons, AntDesign, Ionicons, Entypo } from '@expo/vector-icons'\nimport Constants from 'expo-constants'\nimport { AuthContext } from '../components/authProvider'\nimport { getCountryFromISO3 } from '../../assets/countryListISO3'\nimport { TouchableWithoutFeedback } from 'react-native-gesture-handler'\nimport { usePostHog } from 'posthog-react-native'\nimport CopyToClipboard from '../components/CopyToClipboard'\nexport default function AppDashboardUserProfile({navigation, userObject,refreshFunction, reward} : any){\n    const posthog = usePostHog()\n    useEffect(refreshFunction,[])\n    const scrollViewRef = useRef()\n\n    const [selectedCategory, setCategory] = useState<any>('Personal')\n\n    const { setSession, syncSession } = useContext(AuthContext)\n  const { isAuthenticated, session, sessionToken } = useContext(AuthContext)\n    const logout = async () => {\n        posthog.reset()\n        setSession(null)\n    }\n    return (\n        <ScrollView showsVerticalScrollIndicator={false} ref={scrollViewRef} bounces={false}>\n        <View style={{ justifyContent: 'flex-start', alignItems: 'center',backgroundColor:'transparent', paddingTop:100}}>\n\n        <View style={{ borderRadius:6, height:401-100,width:'100%',\n   \n                }}>\n                    <View style={{alignSelf:'flex-start', paddingHorizontal:30}}>\n          <Text style={{fontFamily:'Overpass_700Bold', fontSize:40, color:'white'}}>{userObject?.given_name}</Text>\n          {/* <Text style={{fontFamily:'ArialNova', fontSize:16, color:'white'}}>Joined June 5th, 2021</Text> */}\n          </View>\n        \n        </View>\n        \n        <View style={{width:'100%', flexDirection:'row', justifyContent:'space-between'}}>\n        <Image source = {require('../../assets/avatar.png')} style={{height:140, width:140, marginTop:-90, alignSelf:'flex-start', marginLeft:30}}/>\n\n        { <TouchableOpacity style={{width:'45%', height:50, backgroundColor:'white', borderRadius:8, marginTop:-30, marginRight:30, shadowColor: \"#000\",\n                shadowOffset: {\n                    width: 0,\n                    height: 2,\n                },\n                shadowOpacity: 0.1,\n                shadowRadius: 9,\n                elevation:5,\n                alignItems:'center',\n                justifyContent:'center'}} \n                activeOpacity={0.8}\n                onPress={()=> navigation.navigate('Account Statements')}\n                >\n                    <Text style={{fontFamily:'ArialNova', color:'#004DBC'}}>\n                        Statement of account\n                    </Text>\n        </TouchableOpacity>}\n        </View>\n\n            <View style={{paddingLeft:10, paddingRight:30, paddingTop:40, marginBottom:40, width:'100%'}}>\n                <ScrollView horizontal={true} showsHorizontalScrollIndicator={false} bounces={false} bouncesZoom={false}>\n                    <View style={{flexDirection:'row'}}>\n\n                    <TouchableOpacity activeOpacity={1} onPress={()=>setCategory('Personal')} style = {{borderBottomColor:'#004DBC', borderBottomWidth: selectedCategory === 'Personal' ? 2 : 0, paddingBottom:5, marginHorizontal:10}}>\n                        <Text style={{fontFamily:selectedCategory === 'Personal' ? 'ArialNova-Bold' : 'ArialNova'}}>\n                            Personal\n                        </Text>\n                    </TouchableOpacity>\n\n                    <TouchableOpacity activeOpacity={1} onPress={()=>setCategory('Financial')} style = {{borderBottomColor:'#004DBC', borderBottomWidth: selectedCategory === 'Financial' ? 2 : 0, paddingBottom:5, marginHorizontal:10}}>\n                        <Text style={{fontFamily:selectedCategory === 'Financial' ? 'ArialNova-Bold' : 'ArialNova'}}>\n                            Financial\n                        </Text>\n                    </TouchableOpacity>\n                    \n\n                    <TouchableOpacity activeOpacity={1} onPress={()=>setCategory('Employment')} style = {{borderBottomColor:'#004DBC', borderBottomWidth: selectedCategory === 'Employment' ? 2 : 0, paddingBottom:5, marginHorizontal:10}}>\n                        <Text style={{fontFamily:selectedCategory === 'Employment' ? 'ArialNova-Bold' : 'ArialNova'}}>\n                            Employment\n                        </Text>\n                    </TouchableOpacity>\n\n                    <TouchableOpacity activeOpacity={1} onPress={()=>setCategory('Bank')} style = {{borderBottomColor:'#004DBC', borderBottomWidth: selectedCategory === 'Bank' ? 2 : 0, paddingBottom:5, marginHorizontal:10}}>\n                        <Text style={{fontFamily:selectedCategory === 'Bank' ? 'ArialNova-Bold' : 'ArialNova'}}>\n                            Bank\n                        </Text>\n                    </TouchableOpacity>\n\n                    <TouchableOpacity activeOpacity={1} onPress={()=>setCategory('Other')} style = {{borderBottomColor:'#004DBC', borderBottomWidth: selectedCategory === 'Other' ? 2 : 0, paddingBottom:5, marginHorizontal:10}}>\n                        <Text style={{fontFamily:selectedCategory === 'Other' ? 'ArialNova-Bold' : 'ArialNova'}}>\n                            Trusted Contact\n                        </Text>\n                    </TouchableOpacity>\n                   \n                    </View>\n                </ScrollView>\n\n            </View>\n\n            {selectedCategory === 'Personal' && <PersonalView userObject = {userObject} session={session} reward={reward}/>}\n            {selectedCategory === 'Financial' && <FinancialView userObject={userObject}/>}\n            {selectedCategory === 'Employment' && <EmploymentView userObject={userObject}/>}\n            {selectedCategory === 'Bank' && <BankView userObject={userObject}/>}\n            {selectedCategory === 'Other' && <OtherView userObject={userObject}/>}\n            \n\n            <View style={{ width:'100%',padding:20,flexDirection:'row',}}>\n\n            <TouchableOpacity style={{flexDirection:'row',alignItems:'center',justifyContent:'center', borderRadius:6, backgroundColor:\"#FF000011\", width:'40%',height:60}} onPress={logout}>\n                <AntDesign name='logout' color={'red'} size={24}/>\n            <Text style={{fontFamily:'ArialNova',color:'red',paddingHorizontal:20}}>\n                Log out\n            </Text>\n\n            </TouchableOpacity>\n            \n            </View>\n\n            <TouchableWithoutFeedback onPress={()=> navigation.navigate('ContactUs',{\n                email : session?.identity.traits.email,\n                phone : session?.identity.traits.phone,\n                name : userObject?.given_name\n            })}>\n            <View style={{width:'100%', padding:20, marginBottom:40}}>\n            <Text style={{fontFamily:'ArialNova', color:'#004DBC'}}>\n                Contact us \n            </Text>\n        </View>\n        </TouchableWithoutFeedback>\n        </View>\n\n        <View style={{ zIndex:-1, position:'absolute',width:'100%'}}>\n          <Image source={require('../../assets/nyse.png')} style={{}}/>\n          <View style = {{backgroundColor:'rgba(0, 23, 139,0.8)', position:'absolute',height:'100%',width:'100%'}}>\n                \n          </View>\n\n        </View>\n\n        \n       \n        </ScrollView>\n      );\n}\n\n\nconst DetailItem = ({title, value} : any) => {\n    return(\n        <View style={{flex:1, paddingVertical:10}}>\n            <Text style={{fontFamily:'ArialNova', fontSize:12, color:'#8692A6'}}>\n                {title}\n            </Text>\n            <Text style={{fontFamily:'ArialNova', fontSize:16, color:'black',paddingTop:10}}>\n                {value}\n            </Text>\n        </View>\n    )\n}\nconst BoldItem = ({ subtext,value} : any) => {\n    \n    return(\n        <View style={{flex:1, paddingVertical:10}}>\n            \n            <Text style={{fontFamily:'ArialNova', fontSize:14, color:'black'}}>\n                {value}\n            </Text>\n            <Text style={{fontFamily:'ArialNova', fontSize:12, color:'#8692A6',paddingTop:10}}>\n                Note: {subtext}\n            </Text>\n        </View>\n    )\n}\n\nconst PersonalView = ({userObject, session,reward} : any) => {\n    \n    return (<>    \n    <View style={{ width:'100%'}}>\n        <View style={{backgroundColor:'#F5FAFF',width:'100%', padding:20}}>\n            <View style={{flexDirection:'row',alignItems:'flex-end'}}>\n            <DetailItem title= \"Referral Code\" value = {session?.identity?.traits.phone}/>\n            <CopyToClipboard referralCode={session?.identity?.traits.phone} />\n        \n            </View>\n            <BoldItem subtext={reward.subtext} value={reward.msg}/>\n            \n        </View>\n                <View style={{flexDirection:'row', padding:20}}>\n                    \n                <DetailItem title=\"Given Name\" value={userObject?.given_name}/>\n                <DetailItem title=\"Family Name\" value={userObject?.family_name}/>\n                </View>\n                <View style={{flexDirection:'row', padding:20}}>\n                <DetailItem title=\"Date of Birth\" value={formatDate(new Date(userObject?.dob))}/>\n                <DetailItem title=\"Place of Birth\" value={getCountryFromISO3(userObject?.country_of_birth)}/>\n                </View>\n            </View>\n\n            <View style={{backgroundColor:'#F5FAFF',width:'100%', padding:20}}>\n            <View style={{flexDirection:'row', alignItems:'center',}}>\n            <Feather name=\"mail\" size={24} color=\"#8692A6\" style={{paddingRight:20}}/>\n            <DetailItem title=\"Email Address\" value={session?.identity?.traits.email}/>\n            </View>\n            \n            <View style={{flexDirection:'row', alignItems:'center',}}>\n            <Feather name=\"phone\" size={24} color=\"#8692A6\" style={{paddingRight:20}}/>\n            <DetailItem title=\"Phone number\" value={session?.identity?.traits.phone}/>\n            </View>\n            <View style={{flexDirection:'row', alignItems:'center',}}>\n            <Feather name=\"map-pin\" size={24} color=\"#8692A6\" style={{paddingRight:20}}/>\n            <DetailItem title=\"Home Address Line 1\" value={userObject?.street_address_1}/>\n            </View>\n            <View style={{flexDirection:'row', alignItems:'center',}}>\n            <Feather name=\"map-pin\" size={24} color=\"#8692A6\" style={{paddingRight:20}}/>\n            <DetailItem title=\"Home Address Line 2\" value={userObject?.street_address_2}/>\n            </View>\n\n            </View>\n\n            <View style={{ width:'100%'}}>\n                <View style={{flexDirection:'row', padding:20}}>\n                <DetailItem title=\"ID Type\" value=\"CNIC\"/>\n                <DetailItem title=\"CNIC or Passport Number\" value={userObject?.id_number}/>\n                </View>\n                {/* <View style={{flexDirection:'row', padding:20}}>\n                <DetailItem title=\"CNIC or Passport Issue Date\" value=\"26 Sep 2020\"/>\n                <DetailItem title=\"CNIC or Passport Expiry Date\" value=\"26 Sep 2029\"/>\n                </View> */}\n                {/* <View style={{flexDirection:'row', padding:20}}>\n                <DetailItem title=\"Gender\" value=\"Male\"/>\n                <DetailItem title=\"Marital Status\" value=\"Married\"/>\n                </View> */}\n                <View style={{flexDirection:'row', padding:20}}>\n                <DetailItem title=\"Nationality\" value={getCountryFromISO3(userObject?.country_of_citizenship)}/>\n                {/* <DetailItem title=\"Religion\" value=\"Islam\"/> */}\n                </View>\n            </View>\n            </>\n    )\n}\n\nconst fund_source_map = {\n    'employment_income' : \"Salary\",\n    \"business_income\" : 'Business / self employed',\n    \"family\" : \"Spouse / parents\",\n    'inheritance' : 'Inheritance' ,\n    'investments' : 'Stock / investments',\n    \"savings\" : \"Savings\"\n} \nconst FinancialView = ({userObject} : any) => {\n    return (<>    \n    <View style={{ width:'100%'}}>\n                <View style={{flexDirection:'row', padding:20}}>\n                <DetailItem title=\"Annual Household Income\" value={userObject?.annual_income_max && parseFloat(userObject?.annual_income_max).toLocaleString(undefined,{currency:'PKR',minimumFractionDigits:2, maximumFractionDigits:2})}/>\n                <DetailItem title=\"Investible Assets\" value={userObject?.liquid_net_worth_max && parseFloat(userObject?.liquid_net_worth_max).toLocaleString(undefined,{currency:'PKR',minimumFractionDigits:2, maximumFractionDigits:2})}/>\n                </View>\n                <View style={{flexDirection:'row', padding:20}}>\n                <DetailItem title=\"Source of Funds\" value={fund_source_map[userObject?.funding_source]}/>\n                </View>\n            </View>\n\n            \n\n            </>\n    )\n}\n\nconst EmploymentView = ({userObject} : any) => {\n    return (<>    \n    <View style={{ width:'100%'}}>\n                <View style={{flexDirection:'row', padding:20}}>\n                <DetailItem title=\"Employment Status\" value={userObject?.employment_status}/>\n                <DetailItem title=\"Employer Name\" value={userObject?.employer_name}/>\n                </View>\n                <View style={{flexDirection:'row', padding:20}}>\n                <DetailItem title=\"Employer Address\" value={userObject?.employer_address}/>\n                <DetailItem title=\"Employment Position\" value={userObject?.employment_position}/>\n                </View>\n            </View>\n            </>\n    )\n}\n\nconst BankView = ({userObject} : any) => {\n    return (<>    \n    <View style={{ width:'100%'}}>\n                <View style={{flexDirection:'row', padding:20}}>\n                <DetailItem title=\"Bank Name\" value={userObject?.bank_details?.bank_name}/>\n                <DetailItem title=\"Bank Account Number\" value={userObject?.bank_details?.bank_account_number}/>\n                </View>\n                <View style={{flexDirection:'row', padding:20}}>\n                <DetailItem title=\"Routing Number\" value={userObject?.bank_details?.routing_number}/>\n                </View>\n            </View>\n\n            \n            </>\n    )\n}\n\nconst OtherView = ({userObject} : any ) => {\n    return (<>    \n    <View style={{ width:'100%'}}>\n                <View style={{flexDirection:'row', padding:20}}>\n                <DetailItem title=\"Given Name\" value={userObject?.trusted_contact?.given_name}/>\n                <DetailItem title=\"Family Name\" value={userObject?.trusted_contact?.family_name}/>\n                </View>\n                <View style={{flexDirection:'row', padding:20}}>\n                <DetailItem title=\"Email\" value={userObject?.trusted_contact?.email_address}/>\n                <DetailItem title=\"Phone\" value={userObject?.trusted_contact?.phone_number}/>\n                </View>\n            </View>\n\n\n            </>\n    )\n}\n\nfunction formatDate(date : Date) {\n    const months = [\n      'Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul',\n      'Aug', 'Sep', 'Oct', 'Nov', 'Dec'\n    ];\n    const day = date.getDate();\n    const monthIndex = date.getMonth();\n    const year = date.getFullYear();\n    const monthName = months[monthIndex];\n    const formattedDate = `${day} ${monthName} ${year}`;\n    return formattedDate;\n  }\n  ","import React, {useState, useRef, useEffect} from 'react'\nimport {\n    View,\n    Text,\n    StyleSheet,\n    ScrollView,\n    Dimensions,\n    TouchableOpacity,\n    Modal,\n    Button,\n    Image,\n    TextInput,\n    Linking\n} from 'react-native'\nimport {Feather, FontAwesome, AntDesign } from '@expo/vector-icons'\nimport Constants from 'expo-constants'\nimport AlpacaDocumentService from '../../api/lib/AlpacaDocumentsService'\n\nfunction getMonthYear(dateString : string) {\n    const date = new Date(dateString);\n    const month = date.toLocaleString('default', { month: 'long' });\n    const year = date.getFullYear();\n    return `${month} ${year}`;\n  }\n\nexport default function AppDashboardAccountStatements({navigation, userBalances, alpacaDocumentService} : {navigation : any, userBalances: any, alpacaDocumentService :AlpacaDocumentService}){\n\n    const [userPreferences, setUserPreferences] = useState({\n        fundPreference : 'Islamic',\n        riskTolerance : 'The Growth Seeker'\n    })\n\n    const scrollViewRef = useRef()\n\n    const [docList, setDocList] = useState([])\n\n    useEffect(()=>{\n        alpacaDocumentService.getAllDocuments().then(cb=>setDocList(cb.data))\n    },[])\n\n    const getReport = (date : string) => {\n        alpacaDocumentService.getDocument(date).then((cb) => Linking.openURL(cb.URL))\n    }\n    return (\n        <ScrollView showsVerticalScrollIndicator={false} ref={scrollViewRef} bounces={false}>\n        <View style={{ justifyContent: 'flex-start', alignItems: 'center',backgroundColor:'transparent', paddingTop:Constants.statusBarHeight  + 50}}>\n\n        <View style={{ borderRadius:6, height:401-100,width:'100%',\n   \n                }}>\n                    <View style={{alignSelf:'flex-start', paddingHorizontal:30}}>\n          <Text style={{fontFamily:'Overpass_700Bold', fontSize:40, color:'white'}}>${userBalances.portfolio_value && parseFloat(userBalances?.portfolio_value).toLocaleString(undefined,{currency:'USD',maximumFractionDigits:2, minimumFractionDigits:2})}</Text>\n          <Text style={{fontFamily:'ArialNova', fontSize:16, color:'white'}}>Total Portfolio Value</Text>\n          </View>\n        \n        </View>\n\n        {/* <Image source = {require('../../assets/avatar.png')} style={{height:140, width:140, marginTop:-90, alignSelf:'flex-start', marginLeft:30}}/> */}\n\n\n            <View style={{ paddingHorizontal:20, marginVertical:20, width:'100%', alignItems:'center'}}>\n                {docList.map((item, index)=> <AccountStatementItem title={getMonthYear(item?.date)}  date={item?.date} getReport={() => getReport(item?.date)} key={index}/>)}\n            </View>\n\n        \n            \n\n            <View style={{height:100}}/>\n\n\n        </View>\n\n        <View style={{ zIndex:-1, position:'absolute',width:'100%'}}>\n          <Image source={require('../../assets/nyse.png')} style={{}}/>\n          <View style = {{backgroundColor:'rgba(0, 23, 139,0.8)', position:'absolute',height:'100%',width:'100%'}}>\n                \n          </View>\n\n        </View>\n       \n        </ScrollView>\n      );\n}\n\n\nconst AccountStatementItem = ({title, getReport} : any) => {\n\n\n    return (\n        <View style={{flexDirection:'row',justifyContent:'space-between', paddingHorizontal:30, shadowColor: \"#000\",borderRadius:6,\n        shadowOffset: {\n            width: 0,\n            height: 2,\n        },\n        shadowOpacity: 0.1,\n        shadowRadius: 9,\n        elevation:5,\n        backgroundColor:'#fff',\n        paddingVertical:30,\n        width:'100%'\n        }}>\n            <View style={{flexDirection:'row'}}>\n            <FontAwesome name=\"file-pdf-o\" size={32} color=\"red\" />\n            <View style={{paddingLeft:20}}>\n                <Text style={{fontFamily: 'ArialNova', fontSize:16}}>\n                    {title}\n                </Text>\n                <Text style={{fontFamily: 'ArialNova', fontSize:12, color:'#777'}}>\n                    Statement of Account\n                </Text>\n            </View>\n            </View>\n            <View style={{flexDirection:'row'}}>\n                {/* <View style={{alignItems:'center', paddingHorizontal:2}}>\n            <Feather name=\"mail\" size={14} color=\"#6C757D\" style={{}}/>\n            <Text style={{color:'#6C757D', fontFamily:'ArialNova'}}>\n                Email\n            </Text>\n            </View> */}\n\n            <TouchableOpacity style={{alignItems:'center' , paddingHorizontal:2, justifyContent:'center'}} onPress={getReport}>\n            <AntDesign name=\"download\" size={14} color=\"#6C757D\" style={{}}/>\n            <Text style={{color:'#6C757D', fontFamily:'ArialNova'}}>\n                Download\n            </Text>\n            </TouchableOpacity>\n            </View>\n        </View>\n    )\n}","import {\n    View,\n    TouchableOpacity,\n    Text\n} from 'react-native'\nimport {Feather} from '@expo/vector-icons'\nimport { AppConstants } from '../../../assets/AppConstants'\n\n\nexport default function HorizontalNavigatior({backFunction, nextFunction, showBackButton, mainButtonText} : {backFunction : () => void, nextFunction : ()=>void, showBackButton : boolean, mainButtonText : string}){\n    return(\n        <View\n                style={{\n                    alignItems:'flex-end',\n                    justifyContent:'space-between',\n                    width:'100%', \n                    marginTop:20, \n                    flex:1,\n                    flexDirection:'row',\n                    paddingBottom:20,\n                    // backgroundColor:'#eee'\n                }}>\n                {showBackButton && <TouchableOpacity style={{\n                    width:'17.5%',\n                    marginTop:10,\n                    height: 54,\n                    marginVertical:10,\n                    borderRadius: 6,\n                    padding:10,\n                    alignItems:'center',\n                    flexDirection:'row',\n                    justifyContent:'center',\n                    borderWidth: 1,\n                    borderColor:'#DDD',\n                    opacity : showBackButton ? 1 : 0\n                }} \n                onPress={backFunction}\n                disabled = {!showBackButton}\n                >\n                    <Feather name=\"arrow-left\" size={24} color=\"#8692A6\" />\n                </TouchableOpacity>}\n                <TouchableOpacity style={{\n                    width:showBackButton  ? '80%' : '100%',\n                    marginTop:10,\n                    height: 54,\n                    backgroundColor:AppConstants.loginHeaderBlue,\n                    marginVertical:10,\n                    borderRadius: 6,\n                    padding:10,\n                    alignItems:'center',\n                    flexDirection:'row',\n                    justifyContent:'space-between',\n                    elevation:5,\n                    shadowColor: \"#000\",\n                    shadowOffset: {\n                        width: 0,\n                        height: 2,\n                    },\n                    shadowOpacity: 0.25,\n                    shadowRadius: 3.84,\n                }} \n                activeOpacity={0.8}\n                onPress = {nextFunction}\n                disabled= {false}\n                >\n                <Text style={{color:'white', fontFamily:'ArialNova', fontSize:16, paddingLeft:20}}>\n                    {mainButtonText || \"Save Changes\"}\n                </Text>\n                <Feather name=\"arrow-right\" size={24} color=\"white\" />\n            </TouchableOpacity>\n            </View>\n    )\n}","import React,{useState, useEffect, useRef} from 'react';\nimport {\n    View,\n    Text,\n    StyleSheet,\n    Keyboard,\n    Image,\n    TextInput\n} from 'react-native';\nimport CustomTextInput from '../SignupScreen/SignupComponents/SignupMiscComponents/CustomTextInput';\nimport {AntDesign} from '@expo/vector-icons'\nimport { GlobalStyles } from '../../GlobalStyles';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport CountrySelector from '../SignupScreen/SignupComponents/SignupMiscComponents/CountrySelector';\nimport CountryFlag from 'react-native-country-flag';\nimport HorizontalNavigatior from './HorizontalNavigator';\nimport { ISO3, getCountryFromISO3 } from '../../../assets/countryListISO3';\nimport UserService from '../../../api/lib/UserService';\nimport { AppConstants } from '../../../assets/AppConstants';\nconst FormSchema = Yup.object().shape({\n    // email : Yup.string().email().required(),\n    // phone: Yup.string().min(10).max(10).matches(/^[0-9]+$/),\n    homeAddress1 : Yup.string().min(1).required('Required'),\n    homeAddress2 : Yup.string(),\n    city : Yup.string().min(1).required('Required'),\n    zipCode : Yup.string(),\n    state : Yup.string().min(1).required('Required'),\n  });\n\n\n\nexport default function PersonalDetailForm({userData, session, launchResponseModal} : any){\n    const emailInputRef = useRef<any>()\n    const phoneInputRef = useRef<any>()\n    const homeAddress1InputRef = useRef<any>()\n    const homeAddress2InputRef = useRef<any>()\n    const cityInputRef = useRef<any>()\n    const zipInputRef = useRef<any>()\n    const stateInputRef = useRef<any>()\n\n    const [selectedTaxResidence, setSelectedTaxResidence] = useState(getCountryFromISO3(userData.country_of_tax_residence))\n    const [selectedCitizenship, setSelectedCitizenship] = useState(getCountryFromISO3(userData.country_of_citizenship))\n    return(\n    <View style={{paddingHorizontal:20, width:'100%'}}>\n        <Formik\n                initialValues={{  \n                    email: session?.identity?.traits?.email,\n                    phone : session?.identity?.traits?.phone,\n                    homeAddress1 : userData.street_address_1,\n                    homeAddress2 : userData.street_address_2,\n                    city : userData.city,\n                    zipCode: userData.postal_code,\n                    state : userData.state\n                }}\n                validationSchema={FormSchema}\n                onSubmit={values => {\n                    Keyboard.dismiss()\n                    // setUserData({...userData, ...values})\n                    UserService.updateUser(session.identity.id, {\n                        street_address_1 : values.homeAddress1,\n                        street_address_2 : values.homeAddress2,\n                        city : values.city,\n                        postal_code : values.zipCode,\n                        state: values.state,\n                        province : values.state\n                    }).then( cb => {\n                        launchResponseModal({message: 'Your profile has been updated.', subMessage:'', isSuccess: true})\n                    }).catch( cb => {\n                        console.log(cb.message)\n                        launchResponseModal(AppConstants.GenericErrorResponse)\n                    }\n                    )\n\n                }}\n                >\n                {({ handleChange, handleBlur, handleSubmit, values, errors, touched }) => (\n                    <>\n\n                    <Text\n                style={{\n                    fontFamily:'ArialNova',\n                    fontSize:18,\n                    lineHeight:32,\n                    paddingTop:20\n                }}\n                >\n                Email address\n                </Text>\n                    <CustomTextInput\n                    reference={emailInputRef}\n                    touched={touched.email}\n                    errors = {errors.email}\n                    value={values.email}\n                    // onFocus={()=> setShowPassView(true)}\n                    handleChange = {handleChange('email')}\n                    handleBlur = {handleBlur('email')}\n                    keyboardType=\"email-address\"\n                    placeholder={\"email address\"}\n                    editable={false}\n                    textContentType={\"email\"}\n                    />\n                    <>\n                    \n<Text\n                style={{\n                    fontFamily:'ArialNova',\n                    fontSize:18,\n                    lineHeight:32,\n                    paddingTop:20\n                }}\n                >\n                Mobile number\n                </Text>\n                    \n\n                <View style={{\n                    width: '100%', \n                    flexDirection:'row',\n                    marginTop:20, \n                    borderWidth:1,\n                    borderColor: touched.phone ? (errors.phone ? 'red' : '#19C18F' ) : '#DDDDDD',\n                    borderRadius: 6,\n                }}>\n                <View style={{\n                    height: 64,\n                    // width:'25%',\n                    alignItems:'center',\n                    justifyContent : 'space-around',\n                    flexDirection:'row',\n                    paddingHorizontal:20,\n                    // backgroundColor:'#888'\n                }}>\n                    <CountryFlag isoCode={'PK'} size={18} />\n                    \n                </View>\n                <TextInput \n                ref={phoneInputRef}\n                style={{...GlobalStyles.textInputStyle, width:'55%', borderWidth:0, paddingHorizontal:0}}\n                placeholder=\"\"\n                onChangeText={handleChange('phone')}\n                onBlur={handleBlur('phone')}\n                value={values.phone}\n                autoCapitalize=\"none\"\n                keyboardType='phone-pad'\n                editable={false}\n                />\n                <View style={{\n                    height: 64,\n                    width:'20%',\n                    alignItems:'center',\n                    justifyContent : 'center'\n                }}>\n                    {(touched.phone) ? \n                    (errors.phone ? \n                        <AntDesign name='close' size={24} color={'red'}/> :\n                        <AntDesign name='check' size={24} color={'#19C18F'}/> \n                    ) :\n                   <></>\n                }\n                </View>\n                </View></>\n\n                <Text\n                style={{\n                    fontFamily:'ArialNova',\n                    fontSize:18,\n                    lineHeight:32,\n                    paddingTop:20\n                }}\n                >\n                Country of Tax Residence\n                </Text>\n               <CountrySelector selectedValue={selectedTaxResidence} setValue={setSelectedTaxResidence} disableChange={true}/>\n\n               <Text\n                style={{\n                    fontFamily:'ArialNova',\n                    fontSize:18,\n                    lineHeight:32,\n                    paddingTop:20\n                }}\n                >\n                Country of citizenship\n                </Text>\n               <CountrySelector selectedValue={selectedCitizenship} setValue={setSelectedCitizenship} disableChange={true}/>\n               <Text\n                style={{\n                    fontFamily:'ArialNova',\n                    fontSize:18,\n                    lineHeight:32,\n                    paddingTop:20\n                }}\n                >\n                Home address line 1\n                </Text>\n                    <CustomTextInput\n                    reference={homeAddress1InputRef}\n                    touched={touched.homeAddress1}\n                    errors = {errors.homeAddress1}\n                    value={values.homeAddress1}\n                    // onFocus={()=> setShowPassView(true)}\n                    handleChange = {handleChange('homeAddress1')}\n                    handleBlur = {handleBlur('homeAddress1')}\n                    keyboardType=\"email-address\"\n                    placeholder={\"e.g., House No. 365, Street 16,\"}\n                    editable={true}\n                    // textContentType={\"email\"}\n                    />\n\n                <Text\n                style={{\n                    fontFamily:'ArialNova',\n                    fontSize:18,\n                    lineHeight:32,\n                    paddingTop:20\n                }}\n                >\n                Home address line 2\n                </Text>\n                    <CustomTextInput\n                    reference={homeAddress2InputRef}\n                    touched={touched.homeAddress2}\n                    errors = {errors.homeAddress2}\n                    value={values.homeAddress2}\n                    // onFocus={()=> setShowPassView(true)}\n                    handleChange = {handleChange('homeAddress2')}\n                    handleBlur = {handleBlur('homeAddress2')}\n                    keyboardType=\"email-address\"\n                    placeholder={\"e.g., F-8/3\"}\n                    editable={true}\n                    // textContentType={\"email\"}\n                    />\n\n                <Text\n                style={{\n                    fontFamily:'ArialNova',\n                    fontSize:18,\n                    lineHeight:32,\n                    paddingTop:20\n                }}\n                >\n                City\n                </Text>\n                    <CustomTextInput\n                    reference={cityInputRef}\n                    touched={touched.city}\n                    errors = {errors.city}\n                    value={values.city}\n                    // onFocus={()=> setShowPassView(true)}\n                    handleChange = {handleChange('city')}\n                    handleBlur = {handleBlur('city')}\n                    keyboardType=\"email-address\"\n                    placeholder={\"e.g., Islamabad\"}\n                    editable={true}\n                    // textContentType={\"email\"}\n                    />\n\n                <Text\n                style={{\n                    fontFamily:'ArialNova',\n                    fontSize:18,\n                    lineHeight:32,\n                    paddingTop:20\n                }}\n                >\n                Zip/postal code (optional)\n                </Text>\n                    <CustomTextInput\n                    reference={zipInputRef}\n                    touched={touched.zipCode}\n                    errors = {errors.zipCode}\n                    value={values.zipCode}\n                    // onFocus={()=> setShowPassView(true)}\n                    handleChange = {handleChange('zipCode')}\n                    handleBlur = {handleBlur('zipCode')}\n                    keyboardType=\"email-address\"\n                    placeholder={\"e.g., 41120\"}\n                    editable={true}\n                    // textContentType={\"email\"}\n                    />\n\n                <Text\n                style={{\n                    fontFamily:'ArialNova',\n                    fontSize:18,\n                    lineHeight:32,\n                    paddingTop:20\n                }}\n                >\n                Province / State\n                </Text>\n                    <CustomTextInput\n                    reference={stateInputRef}\n                    touched={touched.state}\n                    errors = {errors.state}\n                    value={values.state}\n                    // onFocus={()=> setShowPassView(true)}\n                    handleChange = {handleChange('state')}\n                    handleBlur = {handleBlur('state')}\n                    keyboardType=\"email-address\"\n                    placeholder={\"e.g., Federal Capital\"}\n                    editable={true}\n                    // textContentType={\"email\"}\n                    />\n\n                    <HorizontalNavigatior nextFunction={handleSubmit} backFunction={()=>{}} showBackButton={false}/>\n                    </>\n                )}\n                \n        </Formik>\n    </View>\n    )\n}","import React,{useState, useEffect, useRef} from 'react';\nimport {\n    View,\n    Text,\n    StyleSheet,\n    Keyboard,\n    Image,\n    TextInput\n} from 'react-native';\nimport CustomTextInput from '../SignupScreen/SignupComponents/SignupMiscComponents/CustomTextInput';\nimport {AntDesign} from '@expo/vector-icons'\nimport { GlobalStyles } from '../../GlobalStyles';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport CountrySelector from '../SignupScreen/SignupComponents/SignupMiscComponents/CountrySelector';\nimport CountryFlag from 'react-native-country-flag';\nimport HorizontalNavigatior from './HorizontalNavigator';\nimport CustomSelector from '../SignupScreen/SignupComponents/SignupMiscComponents/CustomSelector';\nimport UserService from '../../../api/lib/UserService';\nimport { AppConstants } from '../../../assets/AppConstants';\nconst FormSchema = Yup.object().shape({\n    annualHouseholdIncome : Yup.string().matches(/^[0-9]*$/).min(1),\n    investibleAssets : Yup.string().matches(/^[0-9]*$/).min(1)\n    \n\n  });\n\n  const fund_source_map_back = {\n    'employment_income' : \"Salary\",\n    \"business_income\" : 'Business / self employed',\n    \"family\" : \"Spouse / parents\",\n    'inheritance' : 'Inheritance' ,\n    'investments' : 'Stock / investments',\n    \"savings\" : \"Savings\"\n} \nconst fund_source_map = {\n    \"Salary\" : 'employment_income',\n    'Business / self employed' : \"business_income\",\n    \"Spouse / parents\" : \"family\",\n    'Inheritance' :  'inheritance',\n    'Stock / investments' : 'investments',\n    \"Savings\" : \"savings\"\n} \n\n\nexport default function FinancialDetailForm({userData, session, launchResponseModal} : any){\n    const annualIncomeRef = useRef<any>()\n    const investibleAssetsRef = useRef<any>()\n    const [selectedFundSource, setSelectedFundSource] = useState(fund_source_map_back[userData.funding_source])\n    return(\n    <View style={{paddingHorizontal:20, width:'100%'}}>\n        <Formik\n                initialValues={{  \n                    annualHouseholdIncome : userData.annual_income_max,\n                    investibleAssets : userData.liquid_net_worth_max\n                }}\n                validationSchema={FormSchema}\n                onSubmit={values => {\n                    Keyboard.dismiss()\n                    // setUserData({...userData, ...values})\n                    UserService.updateUser(session.identity.id, {\n                        annual_income_max : values.annualHouseholdIncome,\n                        liquid_net_worth_max : values.investibleAssets,\n                        funding_source : fund_source_map[selectedFundSource]\n                    }).then( cb => {\n                        launchResponseModal({message: 'Your profile has been updated.', subMessage:'', isSuccess: true})\n                    }).catch( cb => {\n                        console.log(cb.response)\n                        launchResponseModal(AppConstants.GenericErrorResponse)\n                    }\n                    )\n                }}\n                >\n                {({ handleChange, handleBlur, handleSubmit, values, errors, touched }) => (\n                    <>\n\n                    \n               <Text\n                style={{\n                    fontFamily:'ArialNova',\n                    fontSize:18,\n                    lineHeight:32,\n                    paddingTop:20\n                }}\n                >\n                Annual household income\n                </Text>\n                    <CustomTextInput\n                    reference={annualIncomeRef}\n                    touched={touched.annualHouseholdIncome}\n                    errors = {errors.annualHouseholdIncome}\n                    value={values.annualHouseholdIncome}\n                    // onFocus={()=> setShowPassView(true)}\n                    handleChange = {handleChange('annualHouseholdIncome')}\n                    handleBlur = {handleBlur('annualHouseholdIncome')}\n                    keyboardType=\"numeric\"\n                    placeholder={\"e.g., Rs. 2,400,000\"}\n                    editable={true}\n                    // textContentType={\"email\"}\n                    />\n\n                <Text\n                style={{\n                    fontFamily:'ArialNova',\n                    fontSize:18,\n                    lineHeight:32,\n                    paddingTop:20\n                }}\n                >\n                Investible assets\n                </Text>\n                    <CustomTextInput\n                    reference={investibleAssetsRef}\n                    touched={touched.investibleAssets}\n                    errors = {errors.investibleAssets}\n                    value={values.investibleAssets}\n                    // onFocus={()=> setShowPassView(true)}\n                    handleChange = {handleChange('investibleAssets')}\n                    handleBlur = {handleBlur('investibleAssets')}\n                    keyboardType=\"numeric\"\n                    placeholder={\"e.g., Rs. 800,000\"}\n                    editable={true}\n                    // textContentType={\"email\"}\n                    />\n\n                <Text\n                style={{\n                    fontFamily:'ArialNova',\n                    fontSize:18,\n                    lineHeight:32,\n                    paddingTop:20\n                }}\n                >\n                Source of funds\n                </Text>\n                    <CustomSelector selectedValue={selectedFundSource} setValue={setSelectedFundSource} itemList={['Salary', 'Business / self employed','Spouse / parents','Inheritance','Stock / investments', \"Savings\"]}/>\n\n               \n\n                    <HorizontalNavigatior nextFunction={handleSubmit} backFunction={()=>{}} showBackButton={false} />\n                    </>\n                )}\n                \n        </Formik>\n    </View>\n    )\n}","import React,{useState, useEffect, useRef} from 'react';\nimport {\n    View,\n    Text,\n    StyleSheet,\n    Keyboard,\n    Image,\n    TextInput\n} from 'react-native';\nimport CustomTextInput from '../SignupScreen/SignupComponents/SignupMiscComponents/CustomTextInput';\nimport {AntDesign} from '@expo/vector-icons'\nimport { GlobalStyles } from '../../GlobalStyles';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport CountrySelector from '../SignupScreen/SignupComponents/SignupMiscComponents/CountrySelector';\nimport CountryFlag from 'react-native-country-flag';\nimport HorizontalNavigatior from './HorizontalNavigator';\nimport CustomSelector from '../SignupScreen/SignupComponents/SignupMiscComponents/CustomSelector';\nimport UserService from '../../../api/lib/UserService';\nconst FormSchema = Yup.object().shape({\n    employmentStatus : Yup.string().required().min(1),\n    employerName : Yup.string().required().min(1),\n    employerAddress : Yup.string().required().min(1),\n    jobTitle : Yup.string().required().min(1),\n\n  });\n\nexport default function EmploymentDetailForm({userData, session, launchResponseModal} : any){\n    const employmentStatusInputRef = useRef<any>()\n    const employerNameInputRef = useRef<any>()\n    const employerAddressInputRef = useRef<any>()\n    const jobTitleInputRef = useRef<any>()\n    const [selectedStatus, setSelectedStatus] = useState(userData.employment_status)\n    return(\n    <View style={{paddingHorizontal:20, width:'100%'}}>\n        <Formik\n                initialValues={{\n                    employerName : userData.employer_name,\n                    employerAddress : userData.employer_address,\n                    jobTitle : userData.employment_position\n                }}\n                validationSchema={FormSchema}\n                onSubmit={values => {\n                    console.log(values)\n                    Keyboard.dismiss()\n                    // setUserData({...userData, ...values})\n                    UserService.updateUser(session.identity.id, {\n                        employment_status : (selectedStatus).toUpperCase(),\n                        employer_name: values.employerName,\n                        employer_address : values.employerAddress,\n                        employment_position : values.jobTitle\n                    }).then( cb => {\n                        launchResponseModal({message: 'Your profile has been updated.', subMessage:'', isSuccess: true})\n                    }).catch( cb => {\n                        console.log(cb.response)\n                        launchResponseModal({message: \"Some error occurred\", subMessage:'Email us if this error persists', isSuccess: false})\n                    }\n                    )\n                }}\n                >\n                {({ handleChange, handleBlur, handleSubmit, values, errors, touched }) => (\n                    <>\n                    \n               <Text\n                style={{\n                    fontFamily:'ArialNova',\n                    fontSize:18,\n                    lineHeight:32,\n                    paddingTop:20\n                }}\n                >\n                Employment status\n                </Text>\n                <CustomSelector selectedValue={selectedStatus} setValue={setSelectedStatus} itemList={[\"Employed\", \"Unemployed\",\"Retired\",\"Student\"]}/>\n\n                <Text\n                style={{\n                    fontFamily:'ArialNova',\n                    fontSize:18,\n                    lineHeight:32,\n                    paddingTop:20\n                }}\n                >\n                Employer name\n                </Text>\n                    <CustomTextInput\n                    reference={employerNameInputRef}\n                    touched={touched.employerName}\n                    errors = {errors.employerName}\n                    value={values.employerName}\n                    // onFocus={()=> setShowPassView(true)}\n                    handleChange = {handleChange('employerName')}\n                    handleBlur = {handleBlur('employerName')}\n                    keyboardType=\"default\"\n                    placeholder={\"e.g., Nanotech Solutions Pvt. Ltd.\"}\n                    editable={true}\n                    // textContentType={\"email\"}\n                    />               \n\n                <Text\n                style={{\n                    fontFamily:'ArialNova',\n                    fontSize:18,\n                    lineHeight:32,\n                    paddingTop:20\n                }}\n                >\n                Employer address\n                </Text>\n                    <CustomTextInput\n                    reference={employerAddressInputRef}\n                    touched={touched.employerAddress}\n                    errors = {errors.employerAddress}\n                    value={values.employerAddress}\n                    // onFocus={()=> setShowPassView(true)}\n                    handleChange = {handleChange('employerAddress')}\n                    handleBlur = {handleBlur('employerAddress')}\n                    keyboardType=\"default\"\n                    placeholder={\"e.g., Suite 404, Fortune Tower, Shahra-e-Faisal, Kar\"}\n                    editable={true}\n                    // textContentType={\"email\"}\n                    />               \n\n<Text\n                style={{\n                    fontFamily:'ArialNova',\n                    fontSize:18,\n                    lineHeight:32,\n                    paddingTop:20\n                }}\n                >\n                Occupation/Job title\n                </Text>\n                    <CustomTextInput\n                    reference={jobTitleInputRef}\n                    touched={touched.jobTitle}\n                    errors = {errors.jobTitle}\n                    value={values.jobTitle}\n                    // onFocus={()=> setShowPassView(true)}\n                    handleChange = {handleChange('jobTitle')}\n                    handleBlur = {handleBlur('jobTitle')}\n                    keyboardType=\"default\"\n                    placeholder={\"Operations Manager\"}\n                    editable={true}\n                    // textContentType={\"email\"}\n                    />               \n\n                    <HorizontalNavigatior nextFunction={handleSubmit} backFunction={()=>{}} showBackButton={false}/>\n                    </>\n                )}\n                \n        </Formik>\n    </View>\n    )\n}","import React,{useState, useEffect, useRef} from 'react';\nimport {\n    View,\n    Text,\n    StyleSheet,\n    Keyboard,\n    Image,\n    TextInput\n} from 'react-native';\nimport CustomTextInput from '../SignupScreen/SignupComponents/SignupMiscComponents/CustomTextInput';\nimport {AntDesign} from '@expo/vector-icons'\nimport { GlobalStyles } from '../../GlobalStyles';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport CountrySelector from '../SignupScreen/SignupComponents/SignupMiscComponents/CountrySelector';\nimport CountryFlag from 'react-native-country-flag';\nimport HorizontalNavigatior from './HorizontalNavigator';\nimport CustomSelector from '../SignupScreen/SignupComponents/SignupMiscComponents/CustomSelector';\nimport UserService from '../../../api/lib/UserService';\nconst FormSchema = Yup.object().shape({\n    bankName : Yup.string().required().min(1),\n    bankAccountNumber : Yup.string().required().min(1),\n    routingNumber : Yup.string().required().min(1)\n\n  });\n\nexport default function BankDetailForm({userData, session, launchResponseModal} : any){\n    const bankNameInputRef = useRef<any>()\n    const bankAccountNumberInputRef = useRef<any>()\n    const routingNumberInputRef = useRef<any>()\n    return(\n    <View style={{paddingHorizontal:20, width:'100%'}}>\n        <Formik\n                initialValues={{  \n                    bankName : userData?.bank_details?.bank_name,\n                    bankAccountNumber : userData?.bank_details?.bank_account_number,\n                    routingNumber : userData?.bank_details?.routing_number\n                }}\n                validationSchema={FormSchema}\n                onSubmit={values => {\n                    console.log(values)\n                    Keyboard.dismiss()\n                    UserService.updateUser(session.identity.id, {\n                        bank_detail : {\n                            bank_name : values.bankName,\n                            bank_account_number: values.bankAccountNumber,\n                            routing_number : values.routingNumber\n                        }\n                    }).then( cb => {\n                        launchResponseModal({message: 'Your profile has been updated.', subMessage:'', isSuccess: true})\n                    }).catch( cb => {\n                        console.log(cb.response)\n                        launchResponseModal({message: \"Some error occurred\", subMessage:'Email us if this error persists', isSuccess: false})\n                    }\n                    )\n                }}\n                >\n                {({ handleChange, handleBlur, handleSubmit, values, errors, touched }) => (\n                    <>\n\n                    \n               <Text\n                style={{\n                    fontFamily:'ArialNova',\n                    fontSize:18,\n                    lineHeight:32,\n                    paddingTop:20\n                }}\n                >\n                Bank name\n                </Text>\n                    <CustomTextInput\n                    reference={bankNameInputRef}\n                    touched={touched.bankName}\n                    errors = {errors.bankName}\n                    value={values.bankName}\n                    // onFocus={()=> setShowPassView(true)}\n                    handleChange = {handleChange('bankName')}\n                    handleBlur = {handleBlur('bankName')}\n                    keyboardType=\"default\"\n                    placeholder={\"e.g., Bank Al Falah\"}\n                    editable={false}\n                    // textContentType={\"email\"}\n                    />\n\n                <Text\n                style={{\n                    fontFamily:'ArialNova',\n                    fontSize:18,\n                    lineHeight:32,\n                    paddingTop:20\n                }}\n                >\n                Bank account number\n                </Text>\n                    <CustomTextInput\n                    reference={bankAccountNumberInputRef}\n                    touched={touched.bankAccountNumber}\n                    errors = {errors.bankAccountNumber}\n                    value={values.bankAccountNumber}\n                    // onFocus={()=> setShowPassView(true)}\n                    handleChange = {handleChange('bankAccountNumber')}\n                    handleBlur = {handleBlur('bankAccountNumber')}\n                    keyboardType=\"default\"\n                    placeholder={\"e.g., 100457845621458\"}\n                    editable={false}\n                    // textContentType={\"email\"}\n                    />               \n\n                <Text\n                style={{\n                    fontFamily:'ArialNova',\n                    fontSize:18,\n                    lineHeight:32,\n                    paddingTop:20\n                }}\n                >\n                Routing number\n                </Text>\n                    <CustomTextInput\n                    reference={routingNumberInputRef}\n                    touched={touched.routingNumber}\n                    errors = {errors.routingNumber}\n                    value={values.routingNumber}\n                    // onFocus={()=> setShowPassView(true)}\n                    handleChange = {handleChange('routingNumber')}\n                    handleBlur = {handleBlur('routingNumber')}\n                    keyboardType=\"default\"\n                    placeholder={\"e.g., 5344\"}\n                    editable={false}\n                    // textContentType={\"email\"}\n                    />               \n\n  \n\n                    <HorizontalNavigatior nextFunction={handleSubmit} backFunction={()=>{}} showBackButton={false}/>\n                    </>\n                )}\n                \n        </Formik>\n    </View>\n    )\n}","import React,{useState, useEffect, useRef} from 'react';\nimport {\n    View,\n    Text,\n    StyleSheet,\n    Keyboard,\n    Image,\n    TextInput\n} from 'react-native';\nimport CustomTextInput from '../SignupScreen/SignupComponents/SignupMiscComponents/CustomTextInput';\nimport {AntDesign} from '@expo/vector-icons'\nimport { GlobalStyles } from '../../GlobalStyles';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport CountrySelector from '../SignupScreen/SignupComponents/SignupMiscComponents/CountrySelector';\nimport CountryFlag from 'react-native-country-flag';\nimport HorizontalNavigatior from './HorizontalNavigator';\nimport CustomSelector from '../SignupScreen/SignupComponents/SignupMiscComponents/CustomSelector';\nimport UserService from '../../../api/lib/UserService';\nconst FormSchema = Yup.object().shape({\n    trustedContactName: Yup.string().required(),\n    trustedContactLastName: Yup.string().required(),\n    trustedContactEmail : Yup.string().required(),\n    trustedContactNumber : Yup.string().required(),\n\n  });\n\nexport default function TrustedContactDetailForm({userData, session, launchResponseModal} : any){\n    const trustedContactNameInputRef = useRef<any>()\n    const trustedContactLastNameInputRef = useRef<any>()\n    const trustedContactEmailInputRef = useRef<any>()\n    const trustedContactNumberInputRef = useRef<any>()\n    return(\n    <View style={{paddingHorizontal:20, width:'100%'}}>\n        <Formik\n                initialValues={{  \n                    trustedContactName: userData?.trusted_contact?.given_name,\n                    trustedContactLastName: userData?.trusted_contact?.family_name,\n                    trustedContactEmail : userData?.trusted_contact?.email_address,\n                    trustedContactNumber : userData?.trusted_contact?.phone_number,\n                }}\n                validationSchema={FormSchema}\n                onSubmit={values => {\n                    console.log(values)\n                    Keyboard.dismiss()\n                    // setUserData({...userData, ...values})\n                    UserService.updateUser(session.identity.id, {\n                            trusted_contact : {\n                                given_name : values.trustedContactName,\n                                family_name : values.trustedContactLastName,\n                                email_address : values.trustedContactEmail,\n                                phone_number : values.trustedContactNumber\n\n                            \n                        }\n                    }).then( cb => {\n                        launchResponseModal({message: 'Your profile has been updated.', subMessage:'', isSuccess: true})\n                    }).catch( cb => {\n                        console.log(cb.response)\n                        launchResponseModal({message: \"Some error occurred\", subMessage:'Email us if this error persists', isSuccess: false})\n                    }\n                    )\n                }}\n                >\n                {({ handleChange, handleBlur, handleSubmit, values, errors, touched }) => (\n                    <>\n                    <Text style={{fontFamily:'ArialNova', fontSize:11, lineHeight:18, color:'#8C949D'}}>\n                    <Text style={{fontFamily:'ArialNova-Bold'}}>Note:{'\\n'}</Text> \n\n                    A trusted contact is a person you authorize your financial firm to contact in limited circumstances, such as if there is a concern about activity in your account and they have been unable to get in touch with you. \n\n {'\\n\\n'}A trusted contact may be a family member, attorney, accountant or another third-party who you believe would respect your privacy and know how to handle the responsibility. The trusted person should be 18 years old or older.\n                    </Text>\n                    \n               <Text\n                style={{\n                    fontFamily:'ArialNova',\n                    fontSize:18,\n                    lineHeight:32,\n                    paddingTop:20\n                }}\n                >\n                First name\n                </Text>\n                    <CustomTextInput\n                    reference={trustedContactNameInputRef}\n                    touched={touched.trustedContactName}\n                    errors = {errors.trustedContactName}\n                    value={values.trustedContactName}\n                    // onFocus={()=> setShowPassView(true)}\n                    handleChange = {handleChange('trustedContactName')}\n                    handleBlur = {handleBlur('trustedContactName')}\n                    keyboardType=\"default\"\n                    placeholder={\"e.g., Arsalan\"}\n                    editable={true}\n                    // textContentType={\"email\"}\n                    />\n\n                <Text\n                style={{\n                    fontFamily:'ArialNova',\n                    fontSize:18,\n                    lineHeight:32,\n                    paddingTop:20\n                }}\n                >\n                Last name\n                </Text>\n                    <CustomTextInput\n                    reference={trustedContactLastNameInputRef}\n                    touched={touched.trustedContactLastName}\n                    errors = {errors.trustedContactLastName}\n                    value={values.trustedContactLastName}\n                    // onFocus={()=> setShowPassView(true)}\n                    handleChange = {handleChange('trustedContactLastName')}\n                    handleBlur = {handleBlur('trustedContactLastName')}\n                    keyboardType=\"default\"\n                    placeholder={\"e.g., Mirza\"}\n                    editable={true}\n                    // textContentType={\"email\"}\n                    />               \n\n                <Text\n                style={{\n                    fontFamily:'ArialNova',\n                    fontSize:18,\n                    lineHeight:32,\n                    paddingTop:20\n                }}\n                >\n                Email address\n                </Text>\n                    <CustomTextInput\n                    reference={trustedContactEmailInputRef}\n                    touched={touched.trustedContactEmail}\n                    errors = {errors.trustedContactEmail}\n                    value={values.trustedContactEmail}\n                    // onFocus={()=> setShowPassView(true)}\n                    handleChange = {handleChange('trustedContactEmail')}\n                    handleBlur = {handleBlur('trustedContactEmail')}\n                    keyboardType=\"default\"\n                    placeholder={\"e.g., arsalan.mirza@gmail.com\"}\n                    editable={true}\n                    // textContentType={\"email\"}\n                    />               \n\n<Text\n                style={{\n                    fontFamily:'ArialNova',\n                    fontSize:18,\n                    lineHeight:32,\n                    paddingTop:20\n                }}\n                >\n                Phone number\n                </Text>\n                    <CustomTextInput\n                    reference={trustedContactNumberInputRef}\n                    touched={touched.trustedContactNumber}\n                    errors = {errors.trustedContactNumber}\n                    value={values.trustedContactNumber}\n                    // onFocus={()=> setShowPassView(true)}\n                    handleChange = {handleChange('trustedContactNumber')}\n                    handleBlur = {handleBlur('trustedContactNumber')}\n                    keyboardType=\"default\"\n                    placeholder={\"e.g., +12122122112\"}\n                    editable={true}\n                    // textContentType={\"email\"}\n                    />               \n\n                    <HorizontalNavigatior nextFunction={handleSubmit} backFunction={()=>{}} showBackButton={false}/>\n                    </>\n                )}\n                \n        </Formik>\n    </View>\n    )\n}","import React, {useState, useRef, useEffect, useContext} from 'react'\nimport {\n    View,\n    Text,\n    StyleSheet,\n    ScrollView,\n    Dimensions,\n    TouchableOpacity,\n    Modal,\n    Button,\n    Image,\n    TextInput\n} from 'react-native'\nimport Constants from 'expo-constants'\nimport PersonalDetailForm from './AppDashboardEditProfile/PersonalDetailForm';\nimport FinancialDetailForm from './AppDashboardEditProfile/FinancialDetailForm';\nimport EmploymentDetailForm from './AppDashboardEditProfile/EmploymentDetailForm';\nimport BankDetailForm from './AppDashboardEditProfile/BankDetailForm';\nimport TrustedContactDetailForm from './AppDashboardEditProfile/TrustedContentDetailForm';\nimport { AuthContext } from '../components/authProvider';\nimport ResponseModal from '../components/ResponseModal';\nconst indexNames = ['S&P', 'Dow Jones', 'NASDAQ']\n\nexport default function AppDashboardEditProfile({navigation, userObject} : any){\n\n    const { isAuthenticated, session, sessionToken } = useContext(AuthContext)\n\n    const scrollViewRef = useRef()\n\n    const [selectedCategory, setCategory] = useState<any>('Personal')\n\n    const [showResponseModal, setResponseModal] = useState(false)\n    const [responseModalConfig, setResponseModalConfig] = useState({\n        isSuccess : null,\n        message : \"\",\n        subMessage : \"\"\n    })\n\n    function launchResponseModal({message, subMessage, isSuccess} : any) {\n        setResponseModalConfig({\n            message,\n            subMessage,\n            isSuccess\n        })\n        setResponseModal(true)\n    }\n\n    return (\n        <ScrollView showsVerticalScrollIndicator={false} ref={scrollViewRef} bounces={false}>\n            <ResponseModal show={showResponseModal} closeModal={()=>setResponseModal(false)} {...responseModalConfig} onClose={()=>false && navigation.goBack()}/>\n        <View style={{ justifyContent: 'flex-start', alignItems: 'center',backgroundColor:'transparent', paddingTop:100}}>\n\n        <View style={{ borderRadius:6, height:401-100,width:'100%',\n   \n                }}>\n                    <View style={{alignSelf:'flex-start', paddingHorizontal:30}}>\n          <Text style={{fontFamily:'Overpass_700Bold', fontSize:40, color:'white'}}>{userObject?.given_name}</Text>\n          </View>\n        \n        </View>\n\n        <Image source = {require('../../assets/avatar.png')} style={{height:140, width:140, marginTop:-90, alignSelf:'flex-start', marginLeft:30}}/>\n\n\n            <View style={{paddingLeft:10, paddingRight:30, paddingTop:40, marginBottom:40, width:'100%'}}>\n                <ScrollView horizontal={true} showsHorizontalScrollIndicator={false} bounces={false} bouncesZoom={false}>\n                    <View style={{flexDirection:'row'}}>\n\n                    <TouchableOpacity activeOpacity={1} onPress={()=>setCategory('Personal')} style = {{borderBottomColor:'#004DBC', borderBottomWidth: selectedCategory === 'Personal' ? 2 : 0, paddingBottom:5, marginHorizontal:10}}>\n                        <Text style={{fontFamily:selectedCategory === 'Personal' ? 'ArialNova-Bold' : 'ArialNova'}}>\n                            Personal\n                        </Text>\n                    </TouchableOpacity>\n\n                    <TouchableOpacity activeOpacity={1} onPress={()=>setCategory('Financial')} style = {{borderBottomColor:'#004DBC', borderBottomWidth: selectedCategory === 'Financial' ? 2 : 0, paddingBottom:5, marginHorizontal:10}}>\n                        <Text style={{fontFamily:selectedCategory === 'Financial' ? 'ArialNova-Bold' : 'ArialNova'}}>\n                            Financial\n                        </Text>\n                    </TouchableOpacity>\n\n                    <TouchableOpacity activeOpacity={1} onPress={()=>setCategory('Employment')} style = {{borderBottomColor:'#004DBC', borderBottomWidth: selectedCategory === 'Employment' ? 2 : 0, paddingBottom:5, marginHorizontal:10}}>\n                        <Text style={{fontFamily:selectedCategory === 'Employment' ? 'ArialNova-Bold' : 'ArialNova'}}>\n                            Employment\n                        </Text>\n                    </TouchableOpacity>\n\n                    <TouchableOpacity activeOpacity={1} onPress={()=>setCategory('Bank')} style = {{borderBottomColor:'#004DBC', borderBottomWidth: selectedCategory === 'Bank' ? 2 : 0, paddingBottom:5, marginHorizontal:10}}>\n                        <Text style={{fontFamily:selectedCategory === 'Bank' ? 'ArialNova-Bold' : 'ArialNova'}}>\n                            Bank\n                        </Text>\n                    </TouchableOpacity>\n\n                    <TouchableOpacity activeOpacity={1} onPress={()=>setCategory('Trusted Contact')} style = {{borderBottomColor:'#004DBC', borderBottomWidth: selectedCategory === 'Trusted Contact' ? 2 : 0, paddingBottom:5, marginHorizontal:10}}>\n                        <Text style={{fontFamily:selectedCategory === 'Trusted Contact' ? 'ArialNova-Bold' : 'ArialNova'}}>\n                            Trusted Contact\n                        </Text>\n                    </TouchableOpacity>\n                   \n                    </View>\n                </ScrollView>\n\n            </View>\n\n            {selectedCategory === 'Personal' && <PersonalDetailForm userData={userObject} session={session} launchResponseModal={launchResponseModal}/>}\n            {selectedCategory === 'Financial' && <FinancialDetailForm userData={userObject} session={session} launchResponseModal={launchResponseModal}/>}\n            {selectedCategory === 'Employment' && <EmploymentDetailForm userData={userObject} session={session} launchResponseModal={launchResponseModal}/>}\n            {selectedCategory === 'Bank' && <BankDetailForm userData={userObject} session={session} launchResponseModal={launchResponseModal}/>}\n            {selectedCategory === 'Trusted Contact' && <TrustedContactDetailForm userData={userObject} session={session} launchResponseModal={launchResponseModal}/>}\n            \n\n            <View style={{height:100}}/>\n\n\n        </View>\n\n        <View style={{ zIndex:-1, position:'absolute',width:'100%'}}>\n          <Image source={require('../../assets/nyse.png')} style={{}}/>\n          <View style = {{backgroundColor:'rgba(0, 23, 139,0.8)', position:'absolute',height:'100%',width:'100%'}}>\n                \n          </View>\n\n        </View>\n       \n        </ScrollView>\n      );\n}\n\n\nconst DetailItem = ({title, value} : any) => {\n    return(\n        <View style={{flex:1, paddingVertical:10}}>\n            <Text style={{fontFamily:'ArialNova', fontSize:12, color:'#8692A6'}}>\n                {title}\n            </Text>\n            <Text style={{fontFamily:'ArialNova', fontSize:16, color:'black',paddingTop:10}}>\n                {value}\n            </Text>\n        </View>\n    )\n}\n","import React, {useState} from 'react'\nimport {\n    View,\n    Text,\n    StyleSheet,\n    ScrollView,\n    Dimensions,\n    TouchableOpacity,\n    Modal,\n    Button,\n    Image,\n    TextInput\n} from 'react-native'\nimport {Octicons, Feather, MaterialIcons, MaterialCommunityIcons, AntDesign, Ionicons } from '@expo/vector-icons'\nimport { AlpacaAccountsError, AppConstants } from '../../assets/AppConstants';\nimport BigButtonRectangle from './AppDashboardHome/BigButtonRectangle';\nimport {\n    LineChart\n} from 'react-native-chart-kit'\nimport MarketItem from './AppDashboardHome/MarketItem';\nimport RingButtonSquare from './AppDashboardHome/RingButtonSquare';\nimport ConfigModal from './AppDashboardInvest/ConfigModal';\nimport Constants from 'expo-constants'\nimport ResponseModal from '../components/ResponseModal';\nimport Slider from '@react-native-community/slider';\nimport AlpacaService from '../../api/lib/AlpacaService';\n\nexport default function AppDashboardSell({navigation, setSellValue, account_id, userBalances,alpacaService} : any){\n    const [showResponseModal, setResponseModal] = useState(false)\n    const [availableForWithdrawal, setCashBalance] = useState(0)\n    const [proportion, setProportion] = useState(0)\n    const [responseModalConfig, setResponseModalConfig] = useState({\n        isSuccess : null,\n        message : \"\",\n        subMessage : \"\"\n    })\n    function launchResponseModal({message, subMessage, isSuccess} : any) {\n        setResponseModalConfig({\n            message,\n            subMessage,\n            isSuccess\n        })\n        setResponseModal(true)\n    }\n    return (\n        <ScrollView bounces={false} showsVerticalScrollIndicator={false}>\n        <View style={{ justifyContent: 'center', alignItems: 'center',backgroundColor:'transparent', paddingTop: 100}}>\n        <ResponseModal show={showResponseModal} closeModal={()=>setResponseModal(false)} {...responseModalConfig} onClose={()=>{setSellValue(proportion);}}/>\n\n        \n        <View style={{alignSelf:'flex-start',paddingHorizontal:30}}>\n        <Text style={{fontFamily:'Overpass_700Bold', fontSize:40, color:'white'}}>${userBalances.long_market_value && parseFloat(userBalances?.long_market_value).toLocaleString(undefined,{currency:'USD',maximumFractionDigits:2, minimumFractionDigits:2})}</Text>\n          <Text style={{fontFamily:'ArialNova', fontSize:16, color:'white'}}>Portfolio Value</Text>\n          </View>\n\n        <View style={{backgroundColor:'#fff', borderRadius:6, marginTop:20,\n                shadowColor: \"#000\",\n                shadowOffset: {\n                    width: 0,\n                    height: 2,\n                },\n                shadowOpacity: 0.1,\n                shadowRadius: 9,\n                elevation:5,\n                width:'95%',\n                }}>\n        <View style={{padding:20, flexDirection:'row',justifyContent:'space-between', alignItems:'center'}}>\n            <View>\n            <Text style={{fontFamily:'ArialNova', fontSize:16, color:'#1C1939' }}>\n            Sell your investments\n            </Text>\n            </View>\n        </View>\n\n        <View style={{ borderBottomWidth:0, borderBottomColor:'rgba(151,151,151,0.2)', padding:20, flexDirection:'row',justifyContent:'space-between', alignItems:'center'}}>\n            <View>\n            <Text style={{fontFamily:'ArialNova', fontSize:14, color:'#8692A6' }}>\n            Choose how much do you want to sell\n            </Text>\n            </View>\n        </View>\n        \n        <TextInput\n            style={{\n                width:'90%',\n                height:64,\n                borderWidth:1,\n                alignSelf:'center',\n                borderRadius:6,\n                borderColor:'#ddd',\n                padding:10,\n            }}\n            keyboardType=\"numeric\"\n            value={(proportion).toLocaleString() + '%'}\n            editable={false}\n        />\n        <Slider\n  style={{width:'90%', height: 40, alignSelf:'center', marginBottom:20}}\n  minimumValue={0}\n  maximumValue={100}\n  step={1}\n  value={proportion}\n  onValueChange={cb=>setProportion(cb)}\n  minimumTrackTintColor=\"#004DBC\"\n//   maximumTrackTintColor=\"#004DBC\"\n  thumbImage={require('../../assets/images/slider_icon.png')} \n/>\n\n        <TouchableOpacity style={{ borderBottomWidth:1, borderBottomColor:'rgba(151,151,151,0.2)', padding:20, flexDirection:'row',justifyContent:'space-between', alignItems:'center', backgroundColor:'#737A86', borderBottomStartRadius:6, borderBottomEndRadius:6}}\n        onPress={\n            \n            \n            ()=>\n            alpacaService.placePortfolioSellOrder({ sellPercentage: proportion}).then(cb=>{\n                launchResponseModal({\n                    message:'Your sell order has been placed successfully.',\n                    subMessage:'We’ve sent you a confirmation email. Please check your inbox.',\n                    isSuccess:true\n                })\n            }).catch((err: { getErrorMsg: () => string; getStatusCode: () => number; })=>{\n                launchResponseModal(AlpacaAccountsError(err.getErrorMsg(),err.getStatusCode(),'sell').GenericErrorResponse)\n            })\n            }\n        >\n\n            <Text style={{fontFamily:'ArialNova', fontSize:16, color:'white' }}>\n            Sell Now\n            </Text>\n            <Ionicons name=\"ios-arrow-forward\" size={24} color=\"white\" />\n        </TouchableOpacity>\n        </View>\n\n        <View style={{alignSelf:'center', marginTop:30, marginBottom:50}}>\n            <Text style={{fontFamily:'Overpass_300Light', paddingHorizontal:10,fontSize:20}}>\n                Quick Actions\n            </Text>\n            <View style={{width:'100%'}}>\n            <View style={{flexDirection:'row', }}>\n                <RingButtonSquare title = {\"Invest \\nNow\"} Icon={({color} : any)=>{\n                return <MaterialIcons name=\"show-chart\" size={26} color={color}/>\n                }} dark = {true} onPress={()=>navigation.navigate('Invest')}/>\n\n                <RingButtonSquare title = {\"Add \\nFunds\"} Icon={({color} : any)=>{\n                return <AntDesign name=\"pluscircle\" size={24} color={color}/>\n                }} \n                onPress={()=>navigation.navigate('Add Funds')}\n                />\n          </View>\n            </View>\n        </View>\n\n        \n\n        </View>\n\n        <View style={{ zIndex:-1, position:'absolute',width:'100%'}}>\n          <Image source={require('../../assets/nyse.png')} style={{}}/>\n          <View style = {{backgroundColor:'rgba(0, 23, 139,0.8)', position:'absolute',height:'100%',width:'100%'}}>\n\n          </View>\n\n        </View>\n       <View style={{height:100}}/>\n        </ScrollView>\n      );\n}\n","import { View, Text, Dimensions, TouchableOpacity } from \"react-native\";\n\nfunction convertDateFormat(datetime: any) {\n  const date = new Date(datetime);\n  const options = {\n    day: \"numeric\",\n    month: \"short\",\n  };\n  const dateString = date.toLocaleDateString(\"en-US\", options as any);\n  const timeString = date.toLocaleTimeString(\"en-US\", {\n    hour: \"2-digit\",\n    minute: \"2-digit\",\n  });\n  return `${dateString}, ${timeString}`;\n}\n\nexport function TransactionItem(props: any) {\n  const {\n    symbol,\n    name,\n    qty,\n    filled_at,\n    filled_avg_price,\n    filled_qty,\n    submitted_at,\n    failed_at,\n    side,\n    status,\n    updated_at,\n    id,\n    cancelOrderFunction,\n  } = props;\n  return (\n    <View\n      style={{\n        width: Dimensions.get(\"window\").width * 0.9,\n        height: 120,\n        borderRadius: 6,\n        backgroundColor: \"#fff\",\n        shadowColor: \"#000\",\n        shadowOffset: {\n          width: 0,\n          height: 2,\n        },\n        shadowOpacity: 0.1,\n        shadowRadius: 9,\n        elevation: 5,\n        marginVertical: 7.5,\n        // overflow: 'hidden'\n      }}\n    >\n      <View style={{ height: 20, alignItems: \"flex-end\" }}>\n        <View\n          style={{\n            width: 60,\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            height: \"100%\",\n            backgroundColor: side === \"buy\" ? \"#71DE5633\" : \"#3293F633\",\n            borderBottomStartRadius: 6,\n            borderTopEndRadius: 6,\n          }}\n        >\n          <Text style={{ fontFamily: \"ArialNova\", fontSize: 12, color: \"#6C757D\" }}>\n            {side}\n          </Text>\n\n        </View>\n      </View>\n\n      <View\n        style={{\n          padding: 15,\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n        }}\n      >\n        <View style={{ height: \"100%\", justifyContent: \"flex-start\" }}>\n\n          <Text style={{ fontFamily: \"ArialNova\", fontSize: 16 }}>\n            {name?.slice(0, 9)}... /{\" \"}\n            <Text style={{ fontSize: 10, color: \"#888\" }}>{symbol}</Text>\n          </Text>\n\n          {filled_at ? (\n\n            <Text style={{ fontSize: 10, color: \"#888\", marginVertical: 2 }}>\n              No of Shares: {parseFloat(filled_qty).toFixed(2)}\n            </Text>\n\n          ) : (\n            \n            <Text style={{ fontSize: 10, color: \"#888\", marginVertical: 2 }}>\n              No of Shares: {parseFloat(qty).toFixed(2)}\n            </Text>\n            \n          )}\n\n          {filled_at && (\n            <Text style={{ fontSize: 10, color: \"#888\" }}>\n              Price: $ {parseFloat(filled_avg_price).toFixed(2)}\n            </Text>\n          )}\n        </View>\n\n        <View style={{ width: \"50%\", alignItems: \"flex-end\" }}>\n          {filled_at ? (\n            <Text style={{ fontFamily: \"ArialNova\", fontSize: 16 }}>\n              Total: ${\" \"}\n              {(parseFloat(filled_qty) * parseFloat(filled_avg_price)).toFixed(2)}\n            </Text>\n          ) : (\n            <Text\n              style={{\n                fontFamily: \"ArialNova\",\n                fontSize: 16,\n                color: status === \"canceled\" ? \"red\" : \"black\",\n              }}\n            >\n              {status === \"canceled\" ? \"Canceled\" : \"Pending\"}\n            </Text>\n          )}\n          <Text\n            style={{\n              fontFamily: \"ArialNova\",\n              fontSize: 10,\n              paddingVertical: 5,\n              color: \"#888\",\n            }}\n          >\n            {convertDateFormat(updated_at)}\n          </Text>\n\n          {filled_at && (\n            <Text\n              style={{\n                fontFamily: \"ArialNova\",\n                fontSize: 10,\n                color: \"#21BF73\",\n              }}\n            >\n              Successfully Completed\n            </Text>\n          )}\n\t\t\t\t\t\n          {[\n            \"new\",\n            \"partially_filled\",\n            \"done_for_day\",\n            \"accepted\",\n            \"pending_new\",\n            \"accepted_for_bidding\",\n            \"stopped\",\n            \"suspended\",\n          ].includes(status) && (\n            <TouchableOpacity\n              style={{\n                borderWidth: 1,\n                borderRadius: 100,\n                borderColor: \"red\",\n                padding: 2,\n                paddingHorizontal: 7.5,\n                marginTop: 5,\n              }}\n              onPress={cancelOrderFunction}\n            >\n              <Text\n                style={{ fontFamily: \"ArialNova\", fontSize: 9, color: \"red\" }}\n              >\n                Cancel Order\n              </Text>\n            </TouchableOpacity>\n          )}\n        </View>\n      </View>\n\n    </View>\n  );\n}\n","import {\n    View,\n    Text,\n    Dimensions,\n    TouchableOpacity\n} from 'react-native'\n\n\nfunction convertDateFormat(datetime : any) {\n    const date = new Date(datetime);\n    const options = {\n        day: 'numeric',\n        month: 'short',\n    }\n    const dateString = date.toLocaleDateString('en-US', options as any);\n    const timeString = date.toLocaleTimeString('en-US', {hour: '2-digit', minute: '2-digit'});\n    return `${dateString}, ${timeString}`;\n}\n\n// export function TransferInItemOld(props : any){\n\n//     const {status, amount, updated_at} = props\n//     return(\n//         <View style={{\n//             width:Dimensions.get('window').width *0.9, height:120, borderRadius:6, backgroundColor:'#fff',\n//         shadowColor: \"#000\",\n//                 shadowOffset: {\n//                     width: 0,\n//                     height: 2,\n//                 },\n//                 shadowOpacity: 0.1,\n//                 shadowRadius: 9,\n//                 elevation:5,\n//                 marginVertical:7.5,\n//                 // overflow: 'hidden'\n//         }}>\n//             <View style={{height:20,alignItems:'flex-end'}}>\n//             </View>\n//         <View style={{\n                \n//                 padding:15,\n//                 flexDirection:'row',\n//                 justifyContent:'space-between'}}>\n//             <View style={{height:'100%', justifyContent:'flex-start'}}>\n//             <Text style={{fontFamily:'ArialNova', fontSize:16}}>\n//             Cash Transfer In\n//             </Text>\n//             { <Text style={{fontSize:10, color:'#888',marginVertical:2}}>\n//             {convertDateFormat(updated_at) }\n//             </Text>\n\n//             }\n            \n//             </View>\n//             <View style={{width:'50%', alignItems:'flex-end'}}>\n//                 <Text style={{fontFamily:'ArialNova', fontSize:16}}>\n//                     Total: $ {parseFloat(amount).toLocaleString(undefined,{minimumFractionDigits:2, maximumFractionDigits:2})}\n//                 </Text> \n                \n//                 {status === 'COMPLETE' ? <Text style={{fontFamily:'ArialNova', fontSize:10, color:'#21BF73', marginVertical:4}}>\n//                 Successfully Completed\n//                 </Text> \n//                 : (\n//                     status === 'CANCELED' ? \n//                     <Text style={{fontFamily:'ArialNova', fontSize:10, color:'red', marginVertical:4}}>\n//                         Canceled\n//                     </Text> :\n//                     <Text style={{fontFamily:'ArialNova', fontSize:10, color:'black', marginVertical:4}}>\n//                     Queued\n//                     </Text> \n\n//                 )\n                \n//                 }{\n//                     ['new','partially_filled','done_for_day','accepted', 'pending_new', 'accepted_for_bidding','stopped','suspended'].includes(status) && \n//                 <TouchableOpacity style={{borderWidth:1, borderRadius:100, borderColor:'red', padding:2, paddingHorizontal:7.5, marginTop:5}} \n//                 onPress={()=>{}}>\n//                     <Text style={{fontFamily:'ArialNova', fontSize:9, color:'red'}}>\n//                         Cancel Transfer\n//                     </Text>\n//                 </TouchableOpacity>\n//                 }\n//             </View>\n//         </View>\n//         </View>\n//     )\n// }\n\n\nexport function TransferInItem(props : any){\n    const {status, net_amount, settle_date} = props\n    return(\n        <View style={{\n            width:Dimensions.get('window').width *0.9, height:120, borderRadius:6, backgroundColor:'#fff',\n        shadowColor: \"#000\",\n                shadowOffset: {\n                    width: 0,\n                    height: 2,\n                },\n                shadowOpacity: 0.1,\n                shadowRadius: 9,\n                elevation:5,\n                marginVertical:7.5,\n                // overflow: 'hidden'\n        }}>\n            <View style={{height:20,alignItems:'flex-end'}}>\n            </View>\n        <View style={{\n                \n                padding:15,\n                flexDirection:'row',\n                justifyContent:'space-between'}}>\n            <View style={{height:'100%', justifyContent:'flex-start'}}>\n            <Text style={{fontFamily:'ArialNova', fontSize:16}}>\n            Cash Transfer In\n            </Text>\n            { <Text style={{fontSize:10, color:'#888',marginVertical:2}}>\n            {convertDateFormat(settle_date) }\n            </Text>\n\n            }\n            \n            </View>\n            <View style={{width:'50%', alignItems:'flex-end'}}>\n                <Text style={{fontFamily:'ArialNova', fontSize:16}}>\n                    Total: $ {parseFloat(net_amount).toLocaleString(undefined,{minimumFractionDigits:2, maximumFractionDigits:2})}\n                </Text> \n                \n                {status === 'executed' ? <Text style={{fontFamily:'ArialNova', fontSize:10, color:'#21BF73', marginVertical:4}}>\n                Successfully Completed\n                </Text> \n                : (\n                    ['canceled','rejected','refused','deleted'].includes(status) ? \n                    <Text style={{fontFamily:'ArialNova', fontSize:10, color:'red', marginVertical:4}}>\n                        Canceled\n                    </Text> :\n                    <Text style={{fontFamily:'ArialNova', fontSize:10, color:'black', marginVertical:4}}>\n                    Queued\n                    </Text> \n\n                )\n                \n                }\n            </View>\n        </View>\n        </View>\n    )\n}\n\n\nexport function TransferOutItem(props : any){\n    const {status, net_amount, settle_date} = props\n    return(\n        <View style={{\n            width:Dimensions.get('window').width *0.9, height:120, borderRadius:6, backgroundColor:'#fff',\n        shadowColor: \"#000\",\n                shadowOffset: {\n                    width: 0,\n                    height: 2,\n                },\n                shadowOpacity: 0.1,\n                shadowRadius: 9,\n                elevation:5,\n                marginVertical:7.5,\n                // overflow: 'hidden'\n        }}>\n            <View style={{height:20,alignItems:'flex-end'}}>\n            </View>\n        <View style={{\n                \n                padding:15,\n                flexDirection:'row',\n                justifyContent:'space-between'}}>\n            <View style={{height:'100%', justifyContent:'flex-start'}}>\n            <Text style={{fontFamily:'ArialNova', fontSize:16}}>\n            Cash Transfer Out\n            </Text>\n            { <Text style={{fontSize:10, color:'#888',marginVertical:2}}>\n            {convertDateFormat(settle_date) }\n            </Text>\n\n            }\n            \n            </View>\n            <View style={{width:'50%', alignItems:'flex-end'}}>\n                <Text style={{fontFamily:'ArialNova', fontSize:16}}>\n                    Total: $ {parseFloat(net_amount).toLocaleString(undefined,{minimumFractionDigits:2, maximumFractionDigits:2})}\n                </Text> \n                \n                {status === 'executed' ? <Text style={{fontFamily:'ArialNova', fontSize:10, color:'#21BF73', marginVertical:4}}>\n                Successfully Completed\n                </Text> \n                : (\n                    ['canceled','rejected','refused','deleted'].includes(status) ? \n                    <Text style={{fontFamily:'ArialNova', fontSize:10, color:'red', marginVertical:4}}>\n                        Canceled\n                    </Text> :\n                    <Text style={{fontFamily:'ArialNova', fontSize:10, color:'black', marginVertical:4}}>\n                    Queued\n                    </Text> \n\n                )\n                \n                }\n            </View>\n        </View>\n        </View>\n    )\n}","import { View, Text, Dimensions, TouchableOpacity } from \"react-native\";\nimport { date } from \"yup\";\n\nfunction convertDateFormat(datetime: any) {\n  const date = new Date(datetime);\n  const options = {\n    day: \"numeric\",\n    month: \"short\",\n  };\n  const dateString = date.toLocaleDateString(\"en-US\", options as any);\n  const timeString = date.toLocaleTimeString(\"en-US\", {\n    hour: \"2-digit\",\n    minute: \"2-digit\",\n  });\n  return `${dateString}, ${timeString}`;\n}\n\nexport function DividendsItem(props: any) {\n  const {\n    symbol,\n    name,\n    date,\n    qty,\n    filled_at,\n    filled_avg_price,\n    filled_qty,\n    submitted_at,\n    failed_at,\n    activity_type,\n    status,\n    updated_at,\n    id,\n    cancelOrderFunction,\n    net_amount,\n  } = props;\n  return (\n    <View\n      style={{\n        width: Dimensions.get(\"window\").width * 0.9,\n        height: 120,\n        borderRadius: 6,\n        backgroundColor: \"#fff\",\n        shadowColor: \"#000\",\n        shadowOffset: {\n          width: 0,\n          height: 2,\n        },\n        shadowOpacity: 0.1,\n        shadowRadius: 9,\n        elevation: 5,\n        marginVertical: 7.5,\n        // overflow: 'hidden'\n      }}\n    >\n      <View style={{ height: 20, alignItems: \"flex-end\" }}>\n        <View\n          style={{\n            width: 60,\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            height: \"100%\",\n            backgroundColor: activity_type === \"DIV\" ? \"#71DE5633\" : \"#3293F633\",\n            borderBottomStartRadius: 6,\n            borderTopEndRadius: 6,\n          }}\n        >\n          <Text style={{ fontFamily: \"ArialNova\", fontSize: 12, color: \"#6C757D\" }}>\n            {activity_type === \"DIV\" ? \"DIV\" : \"DIV Tax\"}\n          </Text>\n\n        </View>\n      </View>\n\n      <View\n        style={{\n          padding: 15,\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n        }}\n      >\n        <View style={{ height: \"100%\", justifyContent: \"flex-start\" }}>\n\n          <Text style={{ fontFamily: \"ArialNova\", fontSize: 16 }}>\n            {name?.slice(0, 9)}... /{\" \"}\n            <Text style={{ fontSize: 10, color: \"#888\" }}>{symbol}</Text>\n          </Text>\n\n        </View>\n\n        <View style={{ width: \"50%\", alignItems: \"flex-end\" }}>\n\n      \n          <Text style={{ fontFamily: \"ArialNova\", fontSize: 16 }}>\n            Total: ${\" \"}\n            {net_amount}\n          </Text>\n          \n\n          <Text\n            style={{\n              fontFamily: \"ArialNova\",\n              fontSize: 10,\n              paddingVertical: 5,\n              color: \"#888\",\n            }}\n          >\n            {convertDateFormat(date)}\n          </Text>\n\n          {filled_at && (\n            <Text\n              style={{\n                fontFamily: \"ArialNova\",\n                fontSize: 10,\n                color: \"#21BF73\",\n              }}\n            >\n              Successfully Completed\n            </Text>\n          )}\n\t\t\t\t\t\n        </View>\n      </View>\n\n    </View>\n  );\n}\n","import React, { useState, useRef, useEffect } from \"react\";\nimport {\n  View,\n  Text,\n  StyleSheet,\n  ScrollView,\n  Dimensions,\n  TouchableOpacity,\n  Modal,\n  Button,\n  Image,\n  TextInput,\n  TouchableWithoutFeedback,\n} from \"react-native\";\nimport {\n  Octicons,\n  Feather,\n  MaterialIcons,\n  MaterialCommunityIcons,\n  AntDesign,\n  Ionicons,\n  Entypo,\n} from \"@expo/vector-icons\";\nimport Constants from \"expo-constants\";\nimport { nasdaq100, snp500, dji30 } from \"../../assets/sampleIndices\";\nimport MarketItem from \"./AppDashboardHome/MarketItem\";\nimport InvestItem from \"./AppDashboardMyPortfolio/InvestmentItem\";\nimport AlpacaService from \"../../api/lib/AlpacaService\";\nimport { UserPostion } from \"../Interfaces/UserPositionInterface\";\nimport { StockDictionary } from \"../Interfaces/StockDictionaryInterface\";\nimport ResponseModal from \"../components/ResponseModal\";\nimport { TransactionItem } from \"./AppDashboardTransactions/TransactionItem\";\nimport {\n  TransferInItem,\n  TransferOutItem,\n} from \"./AppDashboardTransactions/TransferItem\";\nimport { AppConstants } from \"../../assets/AppConstants\";\nimport { DividendsItem } from \"./AppDashboardTransactions/DividendsItem\";\n\nfunction convertDateFormat(datetime: any) {\n  const date = new Date(datetime);\n  const options = {\n    day: \"numeric\",\n    month: \"short\",\n    year: \"numeric\",\n  };\n  const dateString = date.toLocaleDateString(\"en-US\", options as any);\n  const timeString = date.toLocaleTimeString(\"en-US\", {\n    hour: \"2-digit\",\n    minute: \"2-digit\",\n  });\n  return `${dateString}`;\n}\n\nexport default function AppDashboardMyTransactions({\n  navigation,\n  account_id,\n  userPositions,\n  stockDictionary,\n  userBalances,\n  alpacaService,\n  alpacaBrokerAPIService,\n  refreshFunction,\n  miscValues,\n}: {\n  navigation: any;\n  account_id?: string;\n  userPositions: UserPostion[];\n  stockDictionary: StockDictionary[];\n  userBalances: any;\n  refreshFunction: any;\n  alpacaService: AlpacaService;\n  alpacaBrokerAPIService: any;\n  miscValues: any;\n}) {\n  const [showResponseModal, setResponseModal] = useState(false);\n  const [responseModalConfig, setResponseModalConfig] = useState({\n    isSuccess: null,\n    message: \"\",\n    subMessage: \"\",\n  });\n  function launchResponseModal({ message, subMessage, isSuccess }: any) {\n    setResponseModalConfig({\n      message,\n      subMessage,\n      isSuccess,\n    });\n    setResponseModal(true);\n  }\n\n  const [selectedCategory, setCategory] = useState<any>(\"Transactions\");\n  const [transferCategory, setTransferCategory] = useState<any>(\"in\");\n  const [transactionsObject, setTransactionsObject] = useState<any>([]);\n  const [dividendsObject, setDividendsObject] = useState<any>([]);\n  const [transefersInList, setTransfersInList] = useState<any>([]);\n  const [transefersOutList, setTransfersOutList] = useState<any>([]);\n  const [corporateActions, setCorporateActions] = useState<any>([]);\n  useEffect(() => {\n    alpacaService\n      .getTransactionHistory()\n      .then((cb) => setTransactionsObject(cb));\n  }, []);\n\n  useEffect(() => {\n    alpacaService\n      .getAccountActivites()\n      .then((cb) => setDividendsObject(cb))\n      .catch((err) => console.log(`ERROR WHILE GETTING ACTIVITIES: `, err))\n    console.log(`ACTIVIITES: `, dividendsObject);\n\n    // setDividendsObject([\n    //   {\n    //       \"id\": \"20230614122106570::2e138408-eded-43a2-ad9f-73b0a863311b\",\n    //       \"account_id\": \"f469b3ea-3ef2-4cfe-9025-9e82865505af\",\n    //       \"activity_type\": \"FILL\",\n    //       \"transaction_time\": \"2023-06-14T16:21:06.570424Z\",\n    //       \"type\": \"fill\",\n    //       \"price\": \"61.028\",\n    //       \"qty\": \"0.463556072\",\n    //       \"side\": \"buy\",\n    //       \"symbol\": \"ILCG\",\n    //       \"leaves_qty\": \"0\",\n    //       \"order_id\": \"49247e3c-9217-4461-9875-977b77a879f6\",\n    //       \"cum_qty\": \"0.463556072\",\n    //       \"order_status\": \"filled\"\n    //   },\n    //   {\n    //       \"id\": \"20230614122106192::3c83016a-4869-4938-9e36-fe5702cb3bcb\",\n    //       \"account_id\": \"f469b3ea-3ef2-4cfe-9025-9e82865505af\",\n    //       \"activity_type\": \"FILL\",\n    //       \"transaction_time\": \"2023-06-14T16:21:06.192959Z\",\n    //       \"type\": \"fill\",\n    //       \"price\": \"110.172\",\n    //       \"qty\": \"0.271568339\",\n    //       \"side\": \"sell\",\n    //       \"symbol\": \"SHV\",\n    //       \"leaves_qty\": \"0\",\n    //       \"order_id\": \"343c5502-4c7a-4dbe-a2bc-0995751f33fc\",\n    //       \"cum_qty\": \"0.271568339\",\n    //       \"order_status\": \"filled\"\n    //   },\n    //   {\n    //       \"id\": \"20230614122105678::7445b471-07c7-4c0a-8e5c-a842c8934b14\",\n    //       \"account_id\": \"f469b3ea-3ef2-4cfe-9025-9e82865505af\",\n    //       \"activity_type\": \"FILL\",\n    //       \"transaction_time\": \"2023-06-14T16:21:05.678653Z\",\n    //       \"type\": \"fill\",\n    //       \"price\": \"95.916\",\n    //       \"qty\": \"0.31510384\",\n    //       \"side\": \"buy\",\n    //       \"symbol\": \"IUSG\",\n    //       \"leaves_qty\": \"0\",\n    //       \"order_id\": \"5c5fccbc-606c-4fc3-9a12-7ab8c8ebc141\",\n    //       \"cum_qty\": \"0.31510384\",\n    //       \"order_status\": \"filled\"\n    //   },\n    //   {\n    //       \"id\": \"20230614122104923::91e085ae-ee9e-489b-b8f7-36c2b5c37cdf\",\n    //       \"account_id\": \"f469b3ea-3ef2-4cfe-9025-9e82865505af\",\n    //       \"activity_type\": \"FILL\",\n    //       \"transaction_time\": \"2023-06-14T16:21:04.923257Z\",\n    //       \"type\": \"fill\",\n    //       \"price\": \"99.842\",\n    //       \"qty\": \"0.299710195\",\n    //       \"side\": \"sell\",\n    //       \"symbol\": \"GBIL\",\n    //       \"leaves_qty\": \"0\",\n    //       \"order_id\": \"3c84001e-3f13-4b90-9acd-c2f5a739c998\",\n    //       \"cum_qty\": \"0.299710195\",\n    //       \"order_status\": \"filled\"\n    //   },\n    //   {\n    //       \"id\": \"20230614122104904::2ee3a733-b0ac-45fb-a93f-5632bd57ea17\",\n    //       \"account_id\": \"f469b3ea-3ef2-4cfe-9025-9e82865505af\",\n    //       \"activity_type\": \"FILL\",\n    //       \"transaction_time\": \"2023-06-14T16:21:04.904391Z\",\n    //       \"type\": \"fill\",\n    //       \"price\": \"96.508\",\n    //       \"qty\": \"0.316617275\",\n    //       \"side\": \"buy\",\n    //       \"symbol\": \"ITOT\",\n    //       \"leaves_qty\": \"0\",\n    //       \"order_id\": \"b06853f1-8e35-404c-b836-375960dca6dd\",\n    //       \"cum_qty\": \"0.316617275\",\n    //       \"order_status\": \"filled\"\n    //   },\n    //   {\n    //       \"id\": \"20230614122104536::1fee53eb-e990-4479-baee-90865c29e7f3\",\n    //       \"account_id\": \"f469b3ea-3ef2-4cfe-9025-9e82865505af\",\n    //       \"activity_type\": \"FILL\",\n    //       \"transaction_time\": \"2023-06-14T16:21:04.536435Z\",\n    //       \"type\": \"fill\",\n    //       \"price\": \"50.422\",\n    //       \"qty\": \"0.59365691\",\n    //       \"side\": \"sell\",\n    //       \"symbol\": \"USFR\",\n    //       \"leaves_qty\": \"0\",\n    //       \"order_id\": \"37869083-2356-43b5-bb57-b637bd28d024\",\n    //       \"cum_qty\": \"0.59365691\",\n    //       \"order_status\": \"filled\"\n    //   },\n    //   {\n    //       \"id\": \"20230614122104115::0ad46c5b-ca8f-484a-9163-6b69588a8c90\",\n    //       \"account_id\": \"f469b3ea-3ef2-4cfe-9025-9e82865505af\",\n    //       \"activity_type\": \"FILL\",\n    //       \"transaction_time\": \"2023-06-14T16:21:04.115433Z\",\n    //       \"type\": \"fill\",\n    //       \"price\": \"60.224\",\n    //       \"qty\": \"0.507656416\",\n    //       \"side\": \"buy\",\n    //       \"symbol\": \"ILCB\",\n    //       \"leaves_qty\": \"0\",\n    //       \"order_id\": \"7e3eae0e-8103-4397-b7b9-000724b1adb9\",\n    //       \"cum_qty\": \"0.507656416\",\n    //       \"order_status\": \"filled\"\n    //   },\n    //   {\n    //       \"id\": \"20230614122103787::752e26e4-6c7c-471c-9c87-12c96899de8d\",\n    //       \"account_id\": \"f469b3ea-3ef2-4cfe-9025-9e82865505af\",\n    //       \"activity_type\": \"FILL\",\n    //       \"transaction_time\": \"2023-06-14T16:21:03.787777Z\",\n    //       \"type\": \"fill\",\n    //       \"price\": \"50.532\",\n    //       \"qty\": \"0.592422807\",\n    //       \"side\": \"sell\",\n    //       \"symbol\": \"TFLO\",\n    //       \"leaves_qty\": \"0\",\n    //       \"order_id\": \"96a8098d-de23-4b84-a760-805e2d04834e\",\n    //       \"cum_qty\": \"0.592422807\",\n    //       \"order_status\": \"filled\"\n    //   },\n    //   {\n    //       \"id\": \"20230614122103768::947932f4-ac48-488c-b629-6e73a351c042\",\n    //       \"account_id\": \"f469b3ea-3ef2-4cfe-9025-9e82865505af\",\n    //       \"activity_type\": \"FILL\",\n    //       \"transaction_time\": \"2023-06-14T16:21:03.768323Z\",\n    //       \"type\": \"fill\",\n    //       \"price\": \"439.006\",\n    //       \"qty\": \"0.070096764\",\n    //       \"side\": \"buy\",\n    //       \"symbol\": \"IVV\",\n    //       \"leaves_qty\": \"0\",\n    //       \"order_id\": \"daa81c26-7d7a-470a-9f88-e71f03d8f671\",\n    //       \"cum_qty\": \"0.070096764\",\n    //       \"order_status\": \"filled\"\n    //   },\n    //   {\n    //       \"id\": \"20230614122103046::7c52bd1a-31fb-40c1-adf7-15db783e46f3\",\n    //       \"account_id\": \"f469b3ea-3ef2-4cfe-9025-9e82865505af\",\n    //       \"activity_type\": \"FILL\",\n    //       \"transaction_time\": \"2023-06-14T16:21:03.04684Z\",\n    //       \"type\": \"fill\",\n    //       \"price\": \"91.582\",\n    //       \"qty\": \"0.326959434\",\n    //       \"side\": \"sell\",\n    //       \"symbol\": \"BIL\",\n    //       \"leaves_qty\": \"0\",\n    //       \"order_id\": \"7bcb5e66-0968-47f0-a44a-032b80a7ddf5\",\n    //       \"cum_qty\": \"0.326959434\",\n    //       \"order_status\": \"filled\"\n    //   },\n    //   {\n    //       \"id\": \"20230613000000000::fb64533e-c3da-412c-ab8d-c953c3be3b87\",\n    //       \"account_id\": \"f469b3ea-3ef2-4cfe-9025-9e82865505af\",\n    //       \"activity_type\": \"DIVNRA\",\n    //       \"date\": \"2023-06-13\",\n    //       \"net_amount\": \"-0.08\",\n    //       \"description\": \"DIV tax withholding on $0.28 at 30% for tax country PAK; w8w9: w8\",\n    //       \"symbol\": \"ITOT\",\n    //       \"status\": \"executed\"\n    //   },\n    //   {\n    //       \"id\": \"20230613000000000::f21da9fd-9673-45ed-a4ef-f0f14a44ab83\",\n    //       \"account_id\": \"f469b3ea-3ef2-4cfe-9025-9e82865505af\",\n    //       \"activity_type\": \"DIVNRA\",\n    //       \"date\": \"2023-06-13\",\n    //       \"net_amount\": \"-0.06\",\n    //       \"description\": \"DIV tax withholding on $0.22 at 30% for tax country PAK; w8w9: w8\",\n    //       \"symbol\": \"IUSG\",\n    //       \"status\": \"executed\"\n    //   },\n    //   {\n    //       \"id\": \"20230613000000000::c6e81fb0-5b6b-49d9-af97-63fb4f786477\",\n    //       \"account_id\": \"f469b3ea-3ef2-4cfe-9025-9e82865505af\",\n    //       \"activity_type\": \"DIV\",\n    //       \"date\": \"2023-06-13\",\n    //       \"net_amount\": \"0.27\",\n    //       \"description\": \"Cash DIV @ 0.171762, Pos QTY: 1.586107672, Rec Date: 2023-06-08\",\n    //       \"symbol\": \"ILCB\",\n    //       \"per_share_amount\": \"0.171762\",\n    //       \"status\": \"executed\"\n    //   },\n    //   {\n    //       \"id\": \"20230613000000000::b73f569f-31f0-4dcd-807a-74ab4fb2eb33\",\n    //       \"account_id\": \"f469b3ea-3ef2-4cfe-9025-9e82865505af\",\n    //       \"activity_type\": \"DIV\",\n    //       \"date\": \"2023-06-13\",\n    //       \"net_amount\": \"0.28\",\n    //       \"description\": \"Cash DIV @ 0.282666, Pos QTY: 0.991497036, Rec Date: 2023-06-08\",\n    //       \"symbol\": \"ITOT\",\n    //       \"per_share_amount\": \"0.282666\",\n    //       \"status\": \"executed\"\n    //   },\n    //   {\n    //       \"id\": \"20230613000000000::b1543c4b-2f20-4717-b651-ecb0fdd851bb\",\n    //       \"account_id\": \"f469b3ea-3ef2-4cfe-9025-9e82865505af\",\n    //       \"activity_type\": \"DIVNRA\",\n    //       \"date\": \"2023-06-13\",\n    //       \"net_amount\": \"-0.08\",\n    //       \"description\": \"DIV tax withholding on $0.29 at 30% for tax country PAK; w8w9: w8\",\n    //       \"symbol\": \"IVV\",\n    //       \"status\": \"executed\"\n    //   },\n    //   {\n    //       \"id\": \"20230613000000000::a1473ba5-cdf2-4b63-8aaf-ba96e1de0402\",\n    //       \"account_id\": \"f469b3ea-3ef2-4cfe-9025-9e82865505af\",\n    //       \"activity_type\": \"DIVNRA\",\n    //       \"date\": \"2023-06-13\",\n    //       \"net_amount\": \"-0.08\",\n    //       \"description\": \"DIV tax withholding on $0.27 at 30% for tax country PAK; w8w9: w8\",\n    //       \"symbol\": \"ILCB\",\n    //       \"status\": \"executed\"\n    //   },\n    //   {\n    //       \"id\": \"20230613000000000::93869b3b-7e18-4bdb-8c23-0945704cd2fc\",\n    //       \"account_id\": \"f469b3ea-3ef2-4cfe-9025-9e82865505af\",\n    //       \"activity_type\": \"DIV\",\n    //       \"date\": \"2023-06-13\",\n    //       \"net_amount\": \"0.22\",\n    //       \"description\": \"Cash DIV @ 0.219709, Pos QTY: 1.001755576, Rec Date: 2023-06-08\",\n    //       \"symbol\": \"IUSG\",\n    //       \"per_share_amount\": \"0.219709\",\n    //       \"status\": \"executed\"\n    //   },\n    //   {\n    //       \"id\": \"20230613000000000::4f2cb4f3-9996-4a27-a75d-2c5c1cda3e77\",\n    //       \"account_id\": \"f469b3ea-3ef2-4cfe-9025-9e82865505af\",\n    //       \"activity_type\": \"DIV\",\n    //       \"date\": \"2023-06-13\",\n    //       \"net_amount\": \"0.29\",\n    //       \"description\": \"Cash DIV @ 1.338569, Pos QTY: 0.217354788, Rec Date: 2023-06-08\",\n    //       \"symbol\": \"IVV\",\n    //       \"per_share_amount\": \"1.338569\",\n    //       \"status\": \"executed\"\n    //   },\n    //   {\n    //       \"id\": \"20230613000000000::148a786a-5ee3-4850-808d-3c0d122724e3\",\n    //       \"account_id\": \"f469b3ea-3ef2-4cfe-9025-9e82865505af\",\n    //       \"activity_type\": \"DIVNRA\",\n    //       \"date\": \"2023-06-13\",\n    //       \"net_amount\": \"-0.03\",\n    //       \"description\": \"DIV tax withholding on $0.13 at 30% for tax country PAK; w8w9: w8\",\n    //       \"symbol\": \"ILCG\",\n    //       \"status\": \"executed\"\n    //   },\n    //   {\n    //       \"id\": \"20230613000000000::04961d3c-6264-466e-b7dd-52b8252fc7e3\",\n    //       \"account_id\": \"f469b3ea-3ef2-4cfe-9025-9e82865505af\",\n    //       \"activity_type\": \"DIV\",\n    //       \"date\": \"2023-06-13\",\n    //       \"net_amount\": \"0.13\",\n    //       \"description\": \"Cash DIV @ 0.083647, Pos QTY: 1.599612757, Rec Date: 2023-06-08\",\n    //       \"symbol\": \"ILCG\",\n    //       \"per_share_amount\": \"0.083647\",\n    //       \"status\": \"executed\"\n    //   },\n    //   {\n    //       \"id\": \"20230608113858838::067227cf-d55e-49a1-936f-5a2ebfaeb70e\",\n    //       \"account_id\": \"f469b3ea-3ef2-4cfe-9025-9e82865505af\",\n    //       \"activity_type\": \"FILL\",\n    //       \"transaction_time\": \"2023-06-08T15:38:58.838304Z\",\n    //       \"type\": \"fill\",\n    //       \"price\": \"58.792\",\n    //       \"qty\": \"1.016740372\",\n    //       \"side\": \"buy\",\n    //       \"symbol\": \"ILCB\",\n    //       \"leaves_qty\": \"0\",\n    //       \"order_id\": \"1c70a569-1be7-49b0-9acc-76968aab5aa4\",\n    //       \"cum_qty\": \"1.016740372\",\n    //       \"order_status\": \"filled\"\n    //   },\n    //   {\n    //       \"id\": \"20230608113858231::a896b0a4-5026-4330-8357-95670fd0816d\",\n    //       \"account_id\": \"f469b3ea-3ef2-4cfe-9025-9e82865505af\",\n    //       \"activity_type\": \"FILL\",\n    //       \"transaction_time\": \"2023-06-08T15:38:58.23157Z\",\n    //       \"type\": \"fill\",\n    //       \"price\": \"94.318\",\n    //       \"qty\": \"0.63377298\",\n    //       \"side\": \"buy\",\n    //       \"symbol\": \"ITOT\",\n    //       \"leaves_qty\": \"0\",\n    //       \"order_id\": \"a344ed63-1a73-4540-aba7-3fcbfb5ac88b\",\n    //       \"cum_qty\": \"0.63377298\",\n    //       \"order_status\": \"filled\"\n    //   },\n    //   {\n    //       \"id\": \"20230608113857942::2193b01d-9e6c-4d8c-9e68-d26b1b25a126\",\n    //       \"account_id\": \"f469b3ea-3ef2-4cfe-9025-9e82865505af\",\n    //       \"activity_type\": \"FILL\",\n    //       \"transaction_time\": \"2023-06-08T15:38:57.942265Z\",\n    //       \"type\": \"fill\",\n    //       \"price\": \"428.716\",\n    //       \"qty\": \"0.139430765\",\n    //       \"side\": \"buy\",\n    //       \"symbol\": \"IVV\",\n    //       \"leaves_qty\": \"0\",\n    //       \"order_id\": \"39e797a6-1d91-4491-9777-9f12b41ba78c\",\n    //       \"cum_qty\": \"0.139430765\",\n    //       \"order_status\": \"filled\"\n    //   },\n    //   {\n    //       \"id\": \"20230608113857456::8b05372c-ec2e-4971-86e4-782cb34a4a4e\",\n    //       \"account_id\": \"f469b3ea-3ef2-4cfe-9025-9e82865505af\",\n    //       \"activity_type\": \"FILL\",\n    //       \"transaction_time\": \"2023-06-08T15:38:57.456437Z\",\n    //       \"type\": \"fill\",\n    //       \"price\": \"93.818\",\n    //       \"qty\": \"0.637150653\",\n    //       \"side\": \"buy\",\n    //       \"symbol\": \"IUSG\",\n    //       \"leaves_qty\": \"0\",\n    //       \"order_id\": \"d926b58a-195a-4f3d-bdce-d49bd8adbc9d\",\n    //       \"cum_qty\": \"0.637150653\",\n    //       \"order_status\": \"filled\"\n    //   },\n    //   {\n    //       \"id\": \"20230608113857050::dbfa6366-f01a-4c08-87c1-46ad8d83f714\",\n    //       \"account_id\": \"f469b3ea-3ef2-4cfe-9025-9e82865505af\",\n    //       \"activity_type\": \"FILL\",\n    //       \"transaction_time\": \"2023-06-08T15:38:57.050797Z\",\n    //       \"type\": \"fill\",\n    //       \"price\": \"59.288\",\n    //       \"qty\": \"1.008234381\",\n    //       \"side\": \"buy\",\n    //       \"symbol\": \"ILCG\",\n    //       \"leaves_qty\": \"0\",\n    //       \"order_id\": \"f5a12aad-0dd2-4d70-b873-2f868ab57568\",\n    //       \"cum_qty\": \"1.008234381\",\n    //       \"order_status\": \"filled\"\n    //   },\n    //   {\n    //       \"id\": \"20230608000000000::4c951254-2ba4-498a-9318-98a6babe5802\",\n    //       \"account_id\": \"f469b3ea-3ef2-4cfe-9025-9e82865505af\",\n    //       \"activity_type\": \"JNLC\",\n    //       \"date\": \"2023-06-08\",\n    //       \"net_amount\": \"300\",\n    //       \"description\": \"ID: a9fa7281-4ed4-4a32-8154-bfcf257f19fe - transaction_id: f469b3ea-3ef2-4cfe-9025-9e82865505af-15-06-61-08-06-2023-lw4ho, type: \\\"DEPOSIT\\\"\",\n    //       \"status\": \"executed\"\n    //   },\n    //   {\n    //       \"id\": \"20230607000000000::fd38ccd7-ee0b-4111-b0b6-dbadf4d241da\",\n    //       \"account_id\": \"f469b3ea-3ef2-4cfe-9025-9e82865505af\",\n    //       \"activity_type\": \"DIVNRA\",\n    //       \"date\": \"2023-06-07\",\n    //       \"net_amount\": \"-0.03\",\n    //       \"description\": \"DIV tax withholding on $0.13 at 30% for tax country PAK; w8w9: w8\",\n    //       \"symbol\": \"SHV\",\n    //       \"status\": \"executed\"\n    //   },\n    //   {\n    //       \"id\": \"20230607000000000::f2de3ec9-5547-409f-bbe1-e543d96c0965\",\n    //       \"account_id\": \"f469b3ea-3ef2-4cfe-9025-9e82865505af\",\n    //       \"activity_type\": \"DIV\",\n    //       \"date\": \"2023-06-07\",\n    //       \"net_amount\": \"0.13\",\n    //       \"description\": \"Cash DIV @ 0.219305, Pos QTY: 0.592422807, Rec Date: 2023-06-02\",\n    //       \"symbol\": \"TFLO\",\n    //       \"per_share_amount\": \"0.219305\",\n    //       \"status\": \"executed\"\n    //   },\n    //   {\n    //       \"id\": \"20230607000000000::c7cb249a-2d92-4e16-9c62-8e99bada2726\",\n    //       \"account_id\": \"f469b3ea-3ef2-4cfe-9025-9e82865505af\",\n    //       \"activity_type\": \"DIVNRA\",\n    //       \"date\": \"2023-06-07\",\n    //       \"net_amount\": \"-0.03\",\n    //       \"description\": \"DIV tax withholding on $0.12 at 30% for tax country PAK; w8w9: w8\",\n    //       \"symbol\": \"BIL\",\n    //       \"status\": \"executed\"\n    //   },\n    //   {\n    //       \"id\": \"20230607000000000::9474aa1a-c23f-4948-8120-c9f27cc2b668\",\n    //       \"account_id\": \"f469b3ea-3ef2-4cfe-9025-9e82865505af\",\n    //       \"activity_type\": \"DIV\",\n    //       \"date\": \"2023-06-07\",\n    //       \"net_amount\": \"0.12\",\n    //       \"description\": \"Cash DIV @ 0.38727, Pos QTY: 0.299710195, Rec Date: 2023-06-02\",\n    //       \"symbol\": \"GBIL\",\n    //       \"per_share_amount\": \"0.38727\",\n    //       \"status\": \"executed\"\n    //   },\n    //   {\n    //       \"id\": \"20230607000000000::9122b915-91a7-4c49-a5bd-cd7c24c40457\",\n    //       \"account_id\": \"f469b3ea-3ef2-4cfe-9025-9e82865505af\",\n    //       \"activity_type\": \"DIVNRA\",\n    //       \"date\": \"2023-06-07\",\n    //       \"net_amount\": \"-0.03\",\n    //       \"description\": \"DIV tax withholding on $0.12 at 30% for tax country PAK; w8w9: w8\",\n    //       \"symbol\": \"GBIL\",\n    //       \"status\": \"executed\"\n    //   },\n    //   {\n    //       \"id\": \"20230607000000000::63cfb133-caf8-443f-85ef-dc22436b961e\",\n    //       \"account_id\": \"f469b3ea-3ef2-4cfe-9025-9e82865505af\",\n    //       \"activity_type\": \"DIV\",\n    //       \"date\": \"2023-06-07\",\n    //       \"net_amount\": \"0.13\",\n    //       \"description\": \"Cash DIV @ 0.481759, Pos QTY: 0.271568339, Rec Date: 2023-06-02\",\n    //       \"symbol\": \"SHV\",\n    //       \"per_share_amount\": \"0.481759\",\n    //       \"status\": \"executed\"\n    //   },\n    //   {\n    //       \"id\": \"20230607000000000::50d717c9-6570-45b1-88fb-e7cd93a6d484\",\n    //       \"account_id\": \"f469b3ea-3ef2-4cfe-9025-9e82865505af\",\n    //       \"activity_type\": \"DIVNRA\",\n    //       \"date\": \"2023-06-07\",\n    //       \"net_amount\": \"-0.03\",\n    //       \"description\": \"DIV tax withholding on $0.13 at 30% for tax country PAK; w8w9: w8\",\n    //       \"symbol\": \"TFLO\",\n    //       \"status\": \"executed\"\n    //   },\n    //   {\n    //       \"id\": \"20230607000000000::4e93e497-3752-4858-84c2-5a33cece42fb\",\n    //       \"account_id\": \"f469b3ea-3ef2-4cfe-9025-9e82865505af\",\n    //       \"activity_type\": \"DIV\",\n    //       \"date\": \"2023-06-07\",\n    //       \"net_amount\": \"0.12\",\n    //       \"description\": \"Cash DIV @ 0.370699, Pos QTY: 0.326959434, Rec Date: 2023-06-02\",\n    //       \"symbol\": \"BIL\",\n    //       \"per_share_amount\": \"0.370699\",\n    //       \"status\": \"executed\"\n    //   },\n    //   {\n    //       \"id\": \"20230530000000000::b958e9e9-5b16-4c01-aaef-adc33b9ae3f1\",\n    //       \"account_id\": \"f469b3ea-3ef2-4cfe-9025-9e82865505af\",\n    //       \"activity_type\": \"DIVNRA\",\n    //       \"date\": \"2023-05-30\",\n    //       \"net_amount\": \"-0.03\",\n    //       \"description\": \"DIV tax withholding on $0.13 at 30% for tax country PAK; w8w9: w8\",\n    //       \"symbol\": \"USFR\",\n    //       \"status\": \"executed\"\n    //   },\n    //   {\n    //       \"id\": \"20230530000000000::31baf7bb-2789-4f90-9c8c-e2b1297d3857\",\n    //       \"account_id\": \"f469b3ea-3ef2-4cfe-9025-9e82865505af\",\n    //       \"activity_type\": \"DIV\",\n    //       \"date\": \"2023-05-30\",\n    //       \"net_amount\": \"0.13\",\n    //       \"description\": \"Cash DIV @ 0.219, Pos QTY: 0.59365691, Rec Date: 2023-05-25\",\n    //       \"symbol\": \"USFR\",\n    //       \"per_share_amount\": \"0.219\",\n    //       \"status\": \"executed\"\n    //   },\n    //   {\n    //       \"id\": \"20230510120657707::5c32d7a2-1fbd-4171-bbff-9cef2b531e0f\",\n    //       \"account_id\": \"f469b3ea-3ef2-4cfe-9025-9e82865505af\",\n    //       \"activity_type\": \"FILL\",\n    //       \"transaction_time\": \"2023-05-10T16:06:57.707709Z\",\n    //       \"type\": \"fill\",\n    //       \"price\": \"173.132\",\n    //       \"qty\": \"0.007253823\",\n    //       \"side\": \"sell\",\n    //       \"symbol\": \"AAPL\",\n    //       \"leaves_qty\": \"0\",\n    //       \"order_id\": \"879f4596-39e3-420c-adc0-b716062f509b\",\n    //       \"cum_qty\": \"0.007253823\",\n    //       \"order_status\": \"filled\"\n    //   },\n    //   {\n    //       \"id\": \"20230510120657349::fe95852b-ea91-4008-9cc1-bcea288c9bbc\",\n    //       \"account_id\": \"f469b3ea-3ef2-4cfe-9025-9e82865505af\",\n    //       \"activity_type\": \"FILL\",\n    //       \"transaction_time\": \"2023-05-10T16:06:57.349006Z\",\n    //       \"type\": \"fill\",\n    //       \"price\": \"50.398\",\n    //       \"qty\": \"0.297690384\",\n    //       \"side\": \"buy\",\n    //       \"symbol\": \"USFR\",\n    //       \"leaves_qty\": \"0\",\n    //       \"order_id\": \"9a99157c-ee21-4f37-89c3-b90c8d80b1b5\",\n    //       \"cum_qty\": \"0.297690384\",\n    //       \"order_status\": \"filled\"\n    //   },\n    //   {\n    //       \"id\": \"20230510120656648::76a68b88-a40c-489f-8eb1-b72d28862866\",\n    //       \"account_id\": \"f469b3ea-3ef2-4cfe-9025-9e82865505af\",\n    //       \"activity_type\": \"FILL\",\n    //       \"transaction_time\": \"2023-05-10T16:06:56.64804Z\",\n    //       \"type\": \"fill\",\n    //       \"price\": \"50.508\",\n    //       \"qty\": \"0.297275679\",\n    //       \"side\": \"buy\",\n    //       \"symbol\": \"TFLO\",\n    //       \"leaves_qty\": \"0\",\n    //       \"order_id\": \"d7f2e4e1-4cde-4580-8ff7-75b9bff7a1da\",\n    //       \"cum_qty\": \"0.297275679\",\n    //       \"order_status\": \"filled\"\n    //   },\n    //   {\n    //       \"id\": \"20230510120656173::5129a891-6121-4aaa-8a39-c83bd3e3a97e\",\n    //       \"account_id\": \"f469b3ea-3ef2-4cfe-9025-9e82865505af\",\n    //       \"activity_type\": \"FILL\",\n    //       \"transaction_time\": \"2023-05-10T16:06:56.173494Z\",\n    //       \"type\": \"fill\",\n    //       \"price\": \"62.492\",\n    //       \"qty\": \"0.478583393\",\n    //       \"side\": \"sell\",\n    //       \"symbol\": \"O\",\n    //       \"leaves_qty\": \"0\",\n    //       \"order_id\": \"897efbf5-64ec-4404-8bf3-365c3ef10e78\",\n    //       \"cum_qty\": \"0.478583393\",\n    //       \"order_status\": \"filled\"\n    //   },\n    //   {\n    //       \"id\": \"20230510120655870::900dc49b-651c-4f52-87bd-dce60af72961\",\n    //       \"account_id\": \"f469b3ea-3ef2-4cfe-9025-9e82865505af\",\n    //       \"activity_type\": \"FILL\",\n    //       \"transaction_time\": \"2023-05-10T16:06:55.87015Z\",\n    //       \"type\": \"fill\",\n    //       \"price\": \"110.178\",\n    //       \"qty\": \"0.136351177\",\n    //       \"side\": \"buy\",\n    //       \"symbol\": \"SHV\",\n    //       \"leaves_qty\": \"0\",\n    //       \"order_id\": \"cb13dc77-4f26-4db5-853c-baf80779ac02\",\n    //       \"cum_qty\": \"0.136351177\",\n    //       \"order_status\": \"filled\"\n    //   },\n    //   {\n    //       \"id\": \"20230510120655515::0e001370-968d-4b0d-8eaa-e156193578e9\",\n    //       \"account_id\": \"f469b3ea-3ef2-4cfe-9025-9e82865505af\",\n    //       \"activity_type\": \"FILL\",\n    //       \"transaction_time\": \"2023-05-10T16:06:55.515526Z\",\n    //       \"type\": \"fill\",\n    //       \"price\": \"99.828\",\n    //       \"qty\": \"0.150516889\",\n    //       \"side\": \"buy\",\n    //       \"symbol\": \"GBIL\",\n    //       \"leaves_qty\": \"0\",\n    //       \"order_id\": \"6a6d8c3e-bff1-4619-8287-58fc2605280b\",\n    //       \"cum_qty\": \"0.150516889\",\n    //       \"order_status\": \"filled\"\n    //   },\n    //   {\n    //       \"id\": \"20230510120655123::e419f7b3-0892-489c-b100-dd46dffd1cc9\",\n    //       \"account_id\": \"f469b3ea-3ef2-4cfe-9025-9e82865505af\",\n    //       \"activity_type\": \"FILL\",\n    //       \"transaction_time\": \"2023-05-10T16:06:55.123352Z\",\n    //       \"type\": \"fill\",\n    //       \"price\": \"64.722\",\n    //       \"qty\": \"0.465044179\",\n    //       \"side\": \"sell\",\n    //       \"symbol\": \"SHOP\",\n    //       \"leaves_qty\": \"0\",\n    //       \"order_id\": \"13a7b836-4440-422e-8614-3c4585b8b05d\",\n    //       \"cum_qty\": \"0.465044179\",\n    //       \"order_status\": \"filled\"\n    //   },\n    //   {\n    //       \"id\": \"20230510120654368::0fcd2515-cbb3-4b7a-afba-cb3276f12e81\",\n    //       \"account_id\": \"f469b3ea-3ef2-4cfe-9025-9e82865505af\",\n    //       \"activity_type\": \"FILL\",\n    //       \"transaction_time\": \"2023-05-10T16:06:54.368218Z\",\n    //       \"type\": \"fill\",\n    //       \"price\": \"56.106\",\n    //       \"qty\": \"0.786172601\",\n    //       \"side\": \"buy\",\n    //       \"symbol\": \"ILCG\",\n    //       \"leaves_qty\": \"0\",\n    //       \"order_id\": \"93cf6173-28a9-44e0-9d0a-7462421d951f\",\n    //       \"cum_qty\": \"0.786172601\",\n    //       \"order_status\": \"filled\"\n    //   },\n    //   {\n    //       \"id\": \"20230510120653728::021a944d-e95e-4f80-96b7-e4d2c9a04817\",\n    //       \"account_id\": \"f469b3ea-3ef2-4cfe-9025-9e82865505af\",\n    //       \"activity_type\": \"FILL\",\n    //       \"transaction_time\": \"2023-05-10T16:06:53.728054Z\",\n    //       \"type\": \"fill\",\n    //       \"price\": \"168.114\",\n    //       \"qty\": \"0.237925291\",\n    //       \"side\": \"sell\",\n    //       \"symbol\": \"TSLA\",\n    //       \"leaves_qty\": \"0\",\n    //       \"order_id\": \"4c3132a7-cbb6-4e0e-ad8a-f50dc9574060\",\n    //       \"cum_qty\": \"0.237925291\",\n    //       \"order_status\": \"filled\"\n    //   },\n    //   {\n    //       \"id\": \"20230510120653067::1094a0f2-92e3-4a38-9a91-01d858018685\",\n    //       \"account_id\": \"f469b3ea-3ef2-4cfe-9025-9e82865505af\",\n    //       \"activity_type\": \"FILL\",\n    //       \"transaction_time\": \"2023-05-10T16:06:53.067664Z\",\n    //       \"type\": \"fill\",\n    //       \"price\": \"91.508\",\n    //       \"qty\": \"0.16425012\",\n    //       \"side\": \"buy\",\n    //       \"symbol\": \"BIL\",\n    //       \"leaves_qty\": \"0\",\n    //       \"order_id\": \"9513cbee-e9ec-4921-8859-76cf93b135d9\",\n    //       \"cum_qty\": \"0.16425012\",\n    //       \"order_status\": \"filled\"\n    //   },\n    //   {\n    //       \"id\": \"20230510120652432::3e1cfc2e-0c36-4563-a79a-1806a9b3dde3\",\n    //       \"account_id\": \"f469b3ea-3ef2-4cfe-9025-9e82865505af\",\n    //       \"activity_type\": \"FILL\",\n    //       \"transaction_time\": \"2023-05-10T16:06:52.432123Z\",\n    //       \"type\": \"fill\",\n    //       \"price\": \"89.604\",\n    //       \"qty\": \"0.49941074\",\n    //       \"side\": \"buy\",\n    //       \"symbol\": \"IUSG\",\n    //       \"leaves_qty\": \"0\",\n    //       \"order_id\": \"67c7a2ba-1fc8-41b1-93ee-a7e018031635\",\n    //       \"cum_qty\": \"0.49941074\",\n    //       \"order_status\": \"filled\"\n    //   },\n    //   {\n    //       \"id\": \"20230510120651803::6a2d49bb-b08f-4389-9c89-a8a3d4822922\",\n    //       \"account_id\": \"f469b3ea-3ef2-4cfe-9025-9e82865505af\",\n    //       \"activity_type\": \"FILL\",\n    //       \"transaction_time\": \"2023-05-10T16:06:51.803366Z\",\n    //       \"type\": \"fill\",\n    //       \"price\": \"56.542\",\n    //       \"qty\": \"0.794218457\",\n    //       \"side\": \"buy\",\n    //       \"symbol\": \"ILCB\",\n    //       \"leaves_qty\": \"0\",\n    //       \"order_id\": \"725e4ddd-4845-4641-88da-5982d5eee7d4\",\n    //       \"cum_qty\": \"0.794218457\",\n    //       \"order_status\": \"filled\"\n    //   },\n    //   {\n    //       \"id\": \"20230510120651409::ebc6148c-5060-477f-95f4-a72a5465c1ff\",\n    //       \"account_id\": \"f469b3ea-3ef2-4cfe-9025-9e82865505af\",\n    //       \"activity_type\": \"FILL\",\n    //       \"transaction_time\": \"2023-05-10T16:06:51.409619Z\",\n    //       \"type\": \"fill\",\n    //       \"price\": \"412.974\",\n    //       \"qty\": \"0.108962791\",\n    //       \"side\": \"buy\",\n    //       \"symbol\": \"IVV\",\n    //       \"leaves_qty\": \"0\",\n    //       \"order_id\": \"bc87840f-a924-49f3-a81d-dddc1bc4f8c7\",\n    //       \"cum_qty\": \"0.108962791\",\n    //       \"order_status\": \"filled\"\n    //   },\n    //   {\n    //       \"id\": \"20230510120651039::7fe711bc-8937-4618-91b3-1bc6f4384259\",\n    //       \"account_id\": \"f469b3ea-3ef2-4cfe-9025-9e82865505af\",\n    //       \"activity_type\": \"FILL\",\n    //       \"transaction_time\": \"2023-05-10T16:06:51.039559Z\",\n    //       \"type\": \"fill\",\n    //       \"price\": \"90.538\",\n    //       \"qty\": \"0.497934568\",\n    //       \"side\": \"buy\",\n    //       \"symbol\": \"ITOT\",\n    //       \"leaves_qty\": \"0\",\n    //       \"order_id\": \"bb08d279-808c-4697-8a6c-af7620407862\",\n    //       \"cum_qty\": \"0.497934568\",\n    //       \"order_status\": \"filled\"\n    //   },\n    //   {\n    //       \"id\": \"20230510120429686::c3e118d5-a740-4de2-bee4-a2c4e5b9c61d\",\n    //       \"account_id\": \"f469b3ea-3ef2-4cfe-9025-9e82865505af\",\n    //       \"activity_type\": \"FILL\",\n    //       \"transaction_time\": \"2023-05-10T16:04:29.68693Z\",\n    //       \"type\": \"fill\",\n    //       \"price\": \"167.876\",\n    //       \"qty\": \"0.237925291\",\n    //       \"side\": \"buy\",\n    //       \"symbol\": \"TSLA\",\n    //       \"leaves_qty\": \"0\",\n    //       \"order_id\": \"b0beb0e7-a29e-4b89-bfe7-58a8eec32767\",\n    //       \"cum_qty\": \"0.237925291\",\n    //       \"order_status\": \"filled\"\n    //   },\n    //   {\n    //       \"id\": \"20230510120204675::94d7c9dd-b121-42ac-abc2-a8784bb668ae\",\n    //       \"account_id\": \"f469b3ea-3ef2-4cfe-9025-9e82865505af\",\n    //       \"activity_type\": \"FILL\",\n    //       \"transaction_time\": \"2023-05-10T16:02:04.675536Z\",\n    //       \"type\": \"fill\",\n    //       \"price\": \"64.506\",\n    //       \"qty\": \"0.465044179\",\n    //       \"side\": \"buy\",\n    //       \"symbol\": \"SHOP\",\n    //       \"leaves_qty\": \"0\",\n    //       \"order_id\": \"b771c627-48c4-4bc2-bfc1-c4f16288eb6b\",\n    //       \"cum_qty\": \"0.465044179\",\n    //       \"order_status\": \"filled\"\n    //   },\n    //   {\n    //       \"id\": \"20230510120124842::8694130c-31bb-4acb-b769-279de00baf45\",\n    //       \"account_id\": \"f469b3ea-3ef2-4cfe-9025-9e82865505af\",\n    //       \"activity_type\": \"FILL\",\n    //       \"transaction_time\": \"2023-05-10T16:01:24.842555Z\",\n    //       \"type\": \"fill\",\n    //       \"price\": \"62.618\",\n    //       \"qty\": \"0.478583393\",\n    //       \"side\": \"buy\",\n    //       \"symbol\": \"O\",\n    //       \"leaves_qty\": \"0\",\n    //       \"order_id\": \"4432d870-303d-430b-bb94-75ae63d74d2b\",\n    //       \"cum_qty\": \"0.478583393\",\n    //       \"order_status\": \"filled\"\n    //   },\n    //   {\n    //       \"id\": \"20230510000000000::40e15a87-3f0f-46c3-a667-08515592d6ef\",\n    //       \"account_id\": \"f469b3ea-3ef2-4cfe-9025-9e82865505af\",\n    //       \"activity_type\": \"JNLC\",\n    //       \"date\": \"2023-05-10\",\n    //       \"net_amount\": \"300\",\n    //       \"description\": \"ID: f6d86a6c-e769-458b-94c3-c0adc5703cb6 - transaction_id: f469b3ea-3ef2-4cfe-9025-9e82865505af-13-05-54-10-05-2023-KS64l, type: \\\"DEPOSIT\\\"\",\n    //       \"status\": \"executed\"\n    //   },\n    //   {\n    //       \"id\": \"20230505000000000::ebbd0f8a-e90a-4832-8611-87ae62eb9244\",\n    //       \"account_id\": \"f469b3ea-3ef2-4cfe-9025-9e82865505af\",\n    //       \"activity_type\": \"DIV\",\n    //       \"date\": \"2023-05-05\",\n    //       \"net_amount\": \"0.05\",\n    //       \"description\": \"Cash DIV @ 0.397518, Pos QTY: 0.135217162, Rec Date: 2023-05-02\",\n    //       \"symbol\": \"SHV\",\n    //       \"per_share_amount\": \"0.397518\",\n    //       \"status\": \"executed\"\n    //   },\n    //   {\n    //       \"id\": \"20230505000000000::dd523f24-4695-493f-87bf-e0c36676f78d\",\n    //       \"account_id\": \"f469b3ea-3ef2-4cfe-9025-9e82865505af\",\n    //       \"activity_type\": \"DIV\",\n    //       \"date\": \"2023-05-05\",\n    //       \"net_amount\": \"0.06\",\n    //       \"description\": \"Cash DIV @ 0.3775, Pos QTY: 0.149193306, Rec Date: 2023-05-02\",\n    //       \"symbol\": \"GBIL\",\n    //       \"per_share_amount\": \"0.3775\",\n    //       \"status\": \"executed\"\n    //   },\n    //   {\n    //       \"id\": \"20230505000000000::cc86846a-4c4e-4b65-a53b-1d5cbae67146\",\n    //       \"account_id\": \"f469b3ea-3ef2-4cfe-9025-9e82865505af\",\n    //       \"activity_type\": \"DIVNRA\",\n    //       \"date\": \"2023-05-05\",\n    //       \"net_amount\": \"-0.01\",\n    //       \"description\": \"DIV tax withholding on $0.06 at 30% for tax country PAK; w8w9: w8\",\n    //       \"symbol\": \"BIL\",\n    //       \"status\": \"executed\"\n    //   },\n    //   {\n    //       \"id\": \"20230505000000000::a5b754c8-941d-423a-8d23-8e763043ac14\",\n    //       \"account_id\": \"f469b3ea-3ef2-4cfe-9025-9e82865505af\",\n    //       \"activity_type\": \"DIV\",\n    //       \"date\": \"2023-05-05\",\n    //       \"net_amount\": \"0.06\",\n    //       \"description\": \"Cash DIV @ 0.201107, Pos QTY: 0.295147128, Rec Date: 2023-05-02\",\n    //       \"symbol\": \"TFLO\",\n    //       \"per_share_amount\": \"0.201107\",\n    //       \"status\": \"executed\"\n    //   },\n    //   {\n    //       \"id\": \"20230505000000000::98cf89b4-14a1-4159-9d8d-9139fed1492d\",\n    //       \"account_id\": \"f469b3ea-3ef2-4cfe-9025-9e82865505af\",\n    //       \"activity_type\": \"DIVNRA\",\n    //       \"date\": \"2023-05-05\",\n    //       \"net_amount\": \"-0.01\",\n    //       \"description\": \"DIV tax withholding on $0.06 at 30% for tax country PAK; w8w9: w8\",\n    //       \"symbol\": \"TFLO\",\n    //       \"status\": \"executed\"\n    //   },\n    //   {\n    //       \"id\": \"20230505000000000::4fa59519-bca1-4b87-a2f6-8e85f41e9d13\",\n    //       \"account_id\": \"f469b3ea-3ef2-4cfe-9025-9e82865505af\",\n    //       \"activity_type\": \"DIVNRA\",\n    //       \"date\": \"2023-05-05\",\n    //       \"net_amount\": \"-0.01\",\n    //       \"description\": \"DIV tax withholding on $0.06 at 30% for tax country PAK; w8w9: w8\",\n    //       \"symbol\": \"GBIL\",\n    //       \"status\": \"executed\"\n    //   },\n    //   {\n    //       \"id\": \"20230505000000000::4b115c2a-d095-4c07-9482-452cad85ebdb\",\n    //       \"account_id\": \"f469b3ea-3ef2-4cfe-9025-9e82865505af\",\n    //       \"activity_type\": \"DIV\",\n    //       \"date\": \"2023-05-05\",\n    //       \"net_amount\": \"0.06\",\n    //       \"description\": \"Cash DIV @ 0.353155, Pos QTY: 0.162709314, Rec Date: 2023-05-02\",\n    //       \"symbol\": \"BIL\",\n    //       \"per_share_amount\": \"0.353155\",\n    //       \"status\": \"executed\"\n    //   },\n    //   {\n    //       \"id\": \"20230505000000000::23fc8657-2577-4960-8552-7d47141c1d43\",\n    //       \"account_id\": \"f469b3ea-3ef2-4cfe-9025-9e82865505af\",\n    //       \"activity_type\": \"DIVNRA\",\n    //       \"date\": \"2023-05-05\",\n    //       \"net_amount\": \"-0.01\",\n    //       \"description\": \"DIV tax withholding on $0.05 at 30% for tax country PAK; w8w9: w8\",\n    //       \"symbol\": \"SHV\",\n    //       \"status\": \"executed\"\n    //   },\n    //   {\n    //       \"id\": \"20230427000000000::c2b612c9-116f-49ce-b11b-9f65b0207d2d\",\n    //       \"account_id\": \"f469b3ea-3ef2-4cfe-9025-9e82865505af\",\n    //       \"activity_type\": \"DIVNRA\",\n    //       \"date\": \"2023-04-27\",\n    //       \"net_amount\": \"-0.01\",\n    //       \"description\": \"DIV tax withholding on $0.06 at 30% for tax country PAK; w8w9: w8\",\n    //       \"symbol\": \"USFR\",\n    //       \"status\": \"executed\"\n    //   },\n    //   {\n    //       \"id\": \"20230427000000000::1a1b8b6d-0cb5-458e-bce7-bac02b56d040\",\n    //       \"account_id\": \"f469b3ea-3ef2-4cfe-9025-9e82865505af\",\n    //       \"activity_type\": \"DIV\",\n    //       \"date\": \"2023-04-27\",\n    //       \"net_amount\": \"0.06\",\n    //       \"description\": \"Cash DIV @ 0.205, Pos QTY: 0.295966526, Rec Date: 2023-04-25\",\n    //       \"symbol\": \"USFR\",\n    //       \"per_share_amount\": \"0.205\",\n    //       \"status\": \"correct\"\n    //   },\n    //   {\n    //       \"id\": \"20230421102116653::5d5dcead-e385-4a19-8bc2-7523f8838ad4\",\n    //       \"account_id\": \"f469b3ea-3ef2-4cfe-9025-9e82865505af\",\n    //       \"activity_type\": \"FILL\",\n    //       \"transaction_time\": \"2023-04-21T14:21:16.653632Z\",\n    //       \"type\": \"fill\",\n    //       \"price\": \"165.536\",\n    //       \"qty\": \"0.007253823\",\n    //       \"side\": \"buy\",\n    //       \"symbol\": \"AAPL\",\n    //       \"leaves_qty\": \"0\",\n    //       \"order_id\": \"3ec0a65f-eb05-4ae8-895b-9940a4cebd4f\",\n    //       \"cum_qty\": \"0.007253823\",\n    //       \"order_status\": \"filled\"\n    //   },\n    //   {\n    //       \"id\": \"20230421101204994::5f112710-5f50-47d8-ab0d-3f413e22f08e\",\n    //       \"account_id\": \"f469b3ea-3ef2-4cfe-9025-9e82865505af\",\n    //       \"activity_type\": \"FILL\",\n    //       \"transaction_time\": \"2023-04-21T14:12:04.994885Z\",\n    //       \"type\": \"fill\",\n    //       \"price\": \"50.568\",\n    //       \"qty\": \"0.295147128\",\n    //       \"side\": \"buy\",\n    //       \"symbol\": \"TFLO\",\n    //       \"leaves_qty\": \"0\",\n    //       \"order_id\": \"39811162-4f50-487f-8091-c9902631c11d\",\n    //       \"cum_qty\": \"0.295147128\",\n    //       \"order_status\": \"filled\"\n    //   },\n    //   {\n    //       \"id\": \"20230421101204498::429da239-e462-4119-9a6f-9402a98ae6d1\",\n    //       \"account_id\": \"f469b3ea-3ef2-4cfe-9025-9e82865505af\",\n    //       \"activity_type\": \"FILL\",\n    //       \"transaction_time\": \"2023-04-21T14:12:04.498893Z\",\n    //       \"type\": \"fill\",\n    //       \"price\": \"50.428\",\n    //       \"qty\": \"0.295966526\",\n    //       \"side\": \"buy\",\n    //       \"symbol\": \"USFR\",\n    //       \"leaves_qty\": \"0\",\n    //       \"order_id\": \"d23bd362-dc41-4f36-bf86-56f922e7c962\",\n    //       \"cum_qty\": \"0.295966526\",\n    //       \"order_status\": \"filled\"\n    //   },\n    //   {\n    //       \"id\": \"20230421101203868::f5c490d4-5cc3-4c86-afef-911e94f23425\",\n    //       \"account_id\": \"f469b3ea-3ef2-4cfe-9025-9e82865505af\",\n    //       \"activity_type\": \"FILL\",\n    //       \"transaction_time\": \"2023-04-21T14:12:03.868689Z\",\n    //       \"type\": \"fill\",\n    //       \"price\": \"110.378\",\n    //       \"qty\": \"0.135217162\",\n    //       \"side\": \"buy\",\n    //       \"symbol\": \"SHV\",\n    //       \"leaves_qty\": \"0\",\n    //       \"order_id\": \"a7f4379e-55a7-4219-864a-be0b09c2242a\",\n    //       \"cum_qty\": \"0.135217162\",\n    //       \"order_status\": \"filled\"\n    //   },\n    //   {\n    //       \"id\": \"20230421101203571::7adf241f-38d7-41bb-99a3-0be79ae8b2ed\",\n    //       \"account_id\": \"f469b3ea-3ef2-4cfe-9025-9e82865505af\",\n    //       \"activity_type\": \"FILL\",\n    //       \"transaction_time\": \"2023-04-21T14:12:03.571307Z\",\n    //       \"type\": \"fill\",\n    //       \"price\": \"100.038\",\n    //       \"qty\": \"0.149193306\",\n    //       \"side\": \"buy\",\n    //       \"symbol\": \"GBIL\",\n    //       \"leaves_qty\": \"0\",\n    //       \"order_id\": \"afb8d004-ec3f-4209-9ef3-9682fc73a58f\",\n    //       \"cum_qty\": \"0.149193306\",\n    //       \"order_status\": \"filled\"\n    //   },\n    //   {\n    //       \"id\": \"20230421101202833::d469ded3-8c70-4d1d-9d8f-3a65585e6af8\",\n    //       \"account_id\": \"f469b3ea-3ef2-4cfe-9025-9e82865505af\",\n    //       \"activity_type\": \"FILL\",\n    //       \"transaction_time\": \"2023-04-21T14:12:02.833903Z\",\n    //       \"type\": \"fill\",\n    //       \"price\": \"91.728\",\n    //       \"qty\": \"0.162709314\",\n    //       \"side\": \"buy\",\n    //       \"symbol\": \"BIL\",\n    //       \"leaves_qty\": \"0\",\n    //       \"order_id\": \"311afb1d-e46a-4c7d-85b5-0f8eedc778e4\",\n    //       \"cum_qty\": \"0.162709314\",\n    //       \"order_status\": \"filled\"\n    //   },\n    //   {\n    //       \"id\": \"20230421101202283::13d47db4-50ea-40bf-8450-ccde60243ac9\",\n    //       \"account_id\": \"f469b3ea-3ef2-4cfe-9025-9e82865505af\",\n    //       \"activity_type\": \"FILL\",\n    //       \"transaction_time\": \"2023-04-21T14:12:02.283337Z\",\n    //       \"type\": \"fill\",\n    //       \"price\": \"56.542\",\n    //       \"qty\": \"0.791889215\",\n    //       \"side\": \"buy\",\n    //       \"symbol\": \"ILCB\",\n    //       \"leaves_qty\": \"0\",\n    //       \"order_id\": \"fc3e0219-7e5d-4cc0-83bb-05f0f3a140ad\",\n    //       \"cum_qty\": \"0.791889215\",\n    //       \"order_status\": \"filled\"\n    //   },\n    //   {\n    //       \"id\": \"20230421101201543::1eb09fd9-a596-4e15-99a2-9fbfce733e0c\",\n    //       \"account_id\": \"f469b3ea-3ef2-4cfe-9025-9e82865505af\",\n    //       \"activity_type\": \"FILL\",\n    //       \"transaction_time\": \"2023-04-21T14:12:01.543707Z\",\n    //       \"type\": \"fill\",\n    //       \"price\": \"90.718\",\n    //       \"qty\": \"0.493562468\",\n    //       \"side\": \"buy\",\n    //       \"symbol\": \"ITOT\",\n    //       \"leaves_qty\": \"0\",\n    //       \"order_id\": \"7c1e2d35-a389-412d-bfe4-3e88aefd2bad\",\n    //       \"cum_qty\": \"0.493562468\",\n    //       \"order_status\": \"filled\"\n    //   },\n    //   {\n    //       \"id\": \"20230421101201151::670b5a5a-a775-4adf-9881-1461dccd9a2f\",\n    //       \"account_id\": \"f469b3ea-3ef2-4cfe-9025-9e82865505af\",\n    //       \"activity_type\": \"FILL\",\n    //       \"transaction_time\": \"2023-04-21T14:12:01.151272Z\",\n    //       \"type\": \"fill\",\n    //       \"price\": \"413.084\",\n    //       \"qty\": \"0.108391997\",\n    //       \"side\": \"buy\",\n    //       \"symbol\": \"IVV\",\n    //       \"leaves_qty\": \"0\",\n    //       \"order_id\": \"16e225a5-2364-4ff1-8c9f-095d449dc45e\",\n    //       \"cum_qty\": \"0.108391997\",\n    //       \"order_status\": \"filled\"\n    //   },\n    //   {\n    //       \"id\": \"20230421101200629::7d2ebe69-c45d-4e30-b1d4-68889d546a3c\",\n    //       \"account_id\": \"f469b3ea-3ef2-4cfe-9025-9e82865505af\",\n    //       \"activity_type\": \"FILL\",\n    //       \"transaction_time\": \"2023-04-21T14:12:00.629661Z\",\n    //       \"type\": \"fill\",\n    //       \"price\": \"89.132\",\n    //       \"qty\": \"0.502344836\",\n    //       \"side\": \"buy\",\n    //       \"symbol\": \"IUSG\",\n    //       \"leaves_qty\": \"0\",\n    //       \"order_id\": \"91eb5da4-9f54-487a-aa08-1f50f8c61ac4\",\n    //       \"cum_qty\": \"0.502344836\",\n    //       \"order_status\": \"filled\"\n    //   },\n    //   {\n    //       \"id\": \"20230421101200026::af87dbbd-e2f3-4bd3-9e56-ee686ba6e237\",\n    //       \"account_id\": \"f469b3ea-3ef2-4cfe-9025-9e82865505af\",\n    //       \"activity_type\": \"FILL\",\n    //       \"transaction_time\": \"2023-04-21T14:12:00.026395Z\",\n    //       \"type\": \"fill\",\n    //       \"price\": \"55.044\",\n    //       \"qty\": \"0.813440156\",\n    //       \"side\": \"buy\",\n    //       \"symbol\": \"ILCG\",\n    //       \"leaves_qty\": \"0\",\n    //       \"order_id\": \"f3c8cff1-09c1-4eb9-ae16-c9e2b7310064\",\n    //       \"cum_qty\": \"0.813440156\",\n    //       \"order_status\": \"filled\"\n    //   },\n    //   {\n    //       \"id\": \"20230420000000000::676cb6cb-c3ff-4b25-a103-2efcd635ee48\",\n    //       \"account_id\": \"f469b3ea-3ef2-4cfe-9025-9e82865505af\",\n    //       \"activity_type\": \"JNLC\",\n    //       \"date\": \"2023-04-20\",\n    //       \"net_amount\": \"300\",\n    //       \"description\": \"ID: da35a7d4-7a3a-4ddc-871e-2327c85a2350 - \",\n    //       \"status\": \"executed\"\n    //   }\n    // ])\n\n    console.log(dividendsObject);\n  }, []);\n\n  useEffect(() => {\n    alpacaService\n      .getCorporateActions()\n      .then((cb) => setCorporateActions(cb)) \n      .catch((err) => console.log(err));\n  }, []);\n\n  useEffect(() => {\n    \n  })\n\n  function getStockFromSymbol(symbol: string) {\n    if (stockDictionary) {\n      return stockDictionary.filter((cb: any) => cb.symbol === symbol)[0]?.name;\n    }\n    return \"\";\n  }\n\n  useEffect(() => {\n    alpacaService.getJournalsIn().then((cb) => setTransfersInList(cb));\n    alpacaService.getJournalsOuts().then((cb) => setTransfersOutList(cb));\n  }, []);\n\n  return (\n    <ScrollView showsVerticalScrollIndicator={false} bounces={false}>\n      <ResponseModal\n        show={showResponseModal}\n        closeModal={() => setResponseModal(false)}\n        {...responseModalConfig}\n        onClose={refreshFunction}\n      />\n\n      <View\n        style={{\n          justifyContent: \"flex-start\",\n          alignItems: \"center\",\n          backgroundColor: \"transparent\",\n          paddingTop: 100,\n        }}\n      >\n        <View style={{ borderRadius: 6, height: 401 - 100, width: \"100%\" }}>\n          <View style={{ alignSelf: \"flex-start\", paddingHorizontal: 30 }}>\n            <Text\n              style={{\n                fontFamily: \"Overpass_700Bold\",\n                fontSize: 40,\n                color: \"white\",\n              }}\n            >\n              $\n              {userBalances.portfolio_value &&\n                parseFloat(userBalances?.portfolio_value).toLocaleString(\n                  undefined,\n                  {\n                    currency: \"USD\",\n                    maximumFractionDigits: 2,\n                    minimumFractionDigits: 2,\n                  }\n                )}\n            </Text>\n            <Text\n              style={{ fontFamily: \"ArialNova\", fontSize: 16, color: \"white\" }}\n            >\n              Total Portfolio Value\n            </Text>\n          </View>\n        </View>\n\n        <View\n          style={{\n            backgroundColor: \"#fff\",\n            width: Dimensions.get(\"window\").width * 0.8,\n            height: 180,\n            marginTop: -120,\n            shadowColor: \"#000\",\n            shadowOffset: {\n              width: 0,\n              height: 2,\n            },\n            shadowOpacity: 0.1,\n            shadowRadius: 9,\n            elevation: 5,\n            borderRadius: 6,\n          }}\n        >\n          <View\n            style={{\n              width: \"100%\",\n              height: \"100%\",\n              borderBottomColor: \"#97979744\",\n              borderBottomWidth: 0,\n              padding: 20,\n              flexDirection: \"row\",\n              justifyContent: \"space-between\",\n              alignItems: \"center\",\n            }}\n          >\n            <View>\n              <View>\n                <Text\n                  style={{\n                    fontFamily: \"ArialNova\",\n                    color: \"#1E293BCC\",\n                    paddingBottom: 10,\n                    fontSize: 11,\n                  }}\n                >\n                  Portfolio value in PKR\n                </Text>\n                <Text\n                  style={{\n                    fontFamily: \"Overpass_700Bold\",\n                    fontSize: 24,\n                  }}\n                >\n                  {(\n                    miscValues.USDPKR *\n                    (userBalances.portfolio_value\n                      ? parseFloat(userBalances?.portfolio_value)\n                      : 0)\n                  ).toLocaleString(undefined, {\n                    currency: \"USD\",\n                    maximumFractionDigits: 2,\n                    minimumFractionDigits: 2,\n                  })}\n                </Text>\n              </View>\n            </View>\n          </View>\n        </View>\n\n        <ScrollView\n          bounces={false}\n          showsHorizontalScrollIndicator={false}\n          horizontal={true}\n        >\n          <View\n            style={{\n              width: \"100%\",\n              paddingHorizontal: 30,\n              flexDirection: \"row\",\n              marginTop: 30,\n              marginBottom: 10,\n            }}\n          >\n            <TouchableWithoutFeedback\n              onPress={() => setCategory(\"Transactions\")}\n            >\n              <View\n                style={{\n                  borderBottomColor: AppConstants.loginHeaderBlue,\n                  borderBottomWidth:\n                    selectedCategory === \"Transactions\" ? 2 : 0,\n                }}\n              >\n                <Text style={{ fontFamily: \"Overpass_700Bold\", fontSize: 16 }}>\n                  Transactions\n                </Text>\n              </View>\n            </TouchableWithoutFeedback>\n            <View style={{ width: 20 }} />\n\n            <TouchableWithoutFeedback\n              onPress={() => setCategory(\"Dividends\")}\n            >\n              <View\n                style={{\n                  borderBottomColor: AppConstants.loginHeaderBlue,\n                  borderBottomWidth:\n                    selectedCategory === \"Dividends\" ? 2 : 0,\n                }}\n              >\n                <Text style={{ fontFamily: \"Overpass_700Bold\", fontSize: 16 }}>\n                Dividends\n                </Text>\n              </View>\n            </TouchableWithoutFeedback>\n            <View style={{ width: 20 }} />\n\n            <TouchableWithoutFeedback onPress={() => setCategory(\"Transfers\")}>\n              <View\n                style={{\n                  borderBottomColor: AppConstants.loginHeaderBlue,\n                  borderBottomWidth: selectedCategory === \"Transfers\" ? 2 : 0,\n                }}\n              >\n                <Text style={{ fontFamily: \"Overpass_700Bold\", fontSize: 16 }}>\n                  Transfers\n                </Text>\n              </View>\n            </TouchableWithoutFeedback>\n\n            <View style={{ width: 20 }} />\n\n            <TouchableWithoutFeedback\n              onPress={() => setCategory(\"Corporate Transactions\")}\n            >\n              <View\n                style={{\n                  borderBottomColor: AppConstants.loginHeaderBlue,\n                  borderBottomWidth:\n                    selectedCategory === \"Corporate Transactions\" ? 2 : 0,\n                }}\n              >\n                <Text style={{ fontFamily: \"Overpass_700Bold\", fontSize: 16 }}>\n                  Corporate Actions\n                </Text>\n              </View>\n            </TouchableWithoutFeedback>\n          </View>\n        </ScrollView>\n\n        {selectedCategory === \"Transfers\" && (\n          <View\n            style={{\n              width: \"100%\",\n              paddingHorizontal: 30,\n              flexDirection: \"row\",\n              marginVertical: 5,\n              marginBottom: 30,\n            }}\n          >\n            <TouchableWithoutFeedback onPress={() => setTransferCategory(\"in\")}>\n              <View\n                style={{\n                  borderBottomColor: AppConstants.loginHeaderBlue,\n                  borderBottomWidth: transferCategory === \"in\" ? 1 : 0,\n                }}\n              >\n                <Text style={{ fontFamily: \"Overpass_700Bold\", fontSize: 12 }}>\n                  Transfers In\n                </Text>\n              </View>\n            </TouchableWithoutFeedback>\n            <View style={{ width: 20 }} />\n\n            <TouchableWithoutFeedback\n              onPress={() => setTransferCategory(\"out\")}\n            >\n              <View\n                style={{\n                  borderBottomColor: AppConstants.loginHeaderBlue,\n                  borderBottomWidth: transferCategory === \"out\" ? 1 : 0,\n                }}\n              >\n                <Text style={{ fontFamily: \"Overpass_700Bold\", fontSize: 12 }}>\n                  Transfers Out\n                </Text>\n              </View>\n            </TouchableWithoutFeedback>\n          </View>\n        )}\n        \n        {selectedCategory === \"Dividends\" &&\n          dividendsObject.map((cb: any) => {\n            if (cb.activity_type == \"DIVNRA\" || cb.activity_type == \"DIV\") {\n\n              return (\n                <DividendsItem\n                  {...cb}\n                  name={getStockFromSymbol(cb.symbol)}\n                  key={cb.id}\n                />\n              )\n            }\n          })}\n\n        {selectedCategory === \"Transactions\" &&\n          transactionsObject.map((cb: any) => (\n            <TransactionItem\n              {...cb}\n              name={getStockFromSymbol(cb.symbol)}\n              key={cb.client_order_id}\n              cancelOrderFunction={() =>\n                alpacaService\n                  .cancelPendingOrder(cb.id)\n                  .then((cb: any) => {\n                    launchResponseModal({\n                      message: `Your order cancellation request has been submitted successfully`,\n                      subMessage:\n                        \"We’ve sent you a confirmation email. Please check your inbox.\",\n                      isSuccess: true,\n                    });\n                  })\n                  .catch((cb: any) => {\n                    console.log(cb);\n                    launchResponseModal(AppConstants.GenericErrorResponse);\n                  })\n              }\n            />\n          ))}\n\n        {selectedCategory === \"Transfers\" &&\n          transferCategory === \"in\" &&\n          transefersInList.map((transferObject: any) => (\n            <TransferInItem {...transferObject} key={transferObject.id} />\n          ))}\n\n        {selectedCategory === \"Transfers\" &&\n          transferCategory === \"out\" &&\n          transefersOutList.map((transferObject: any) => (\n            <TransferOutItem {...transferObject} key={transferObject.id} />\n          ))}\n\n        {selectedCategory === \"Corporate Transactions\" &&\n          corporateActions.map((item: any, index: any) => (\n            <CorporateActionItem {...item} key={index} />\n          ))}\n\n        <View style={{ height: 100 }} />\n      </View>\n\n      <View style={{ zIndex: -1, position: \"absolute\", width: \"100%\" }}>\n        <Image source={require(\"../../assets/nyse.png\")} style={{}} />\n        <View\n          style={{\n            backgroundColor: \"rgba(0, 23, 139,0.8)\",\n            position: \"absolute\",\n            height: \"100%\",\n            width: \"100%\",\n          }}\n        ></View>\n      </View>\n    </ScrollView>\n  );\n}\nconst ActionTypeMap = {\n  dividend: {\n    cash: \"Cash Dividend\",\n    stock: \"Stock Dividend\",\n  },\n  merger: {\n    merger_completion: \"Merger\",\n  },\n  split: {\n    reverse_split: \"Reverse Split\",\n    stock_split: \"Stock Split\",\n    unit_split: \"Unit Split\",\n  },\n  spinoff: {\n    spinoff: \"Spinoff\",\n  },\n};\n\nconst CorporateActionItem = (props: any) => {\n  const {\n    ca_type,\n    declaration_date,\n    record_date,\n    payable_date,\n    ca_sub_type,\n    initiating_symbol,\n    target_symbol,\n    new_rate,\n    old_rate,\n    effective_date,\n    cash,\n  } = props;\n  if (ca_sub_type === \"merger_update\") {\n    return null;\n  }\n  return (\n    <View\n      style={{\n        width: Dimensions.get(\"window\").width * 0.9,\n        borderRadius: 6,\n        backgroundColor: \"#fff\",\n        shadowColor: \"#000\",\n        shadowOffset: {\n          width: 0,\n          height: 2,\n        },\n        shadowOpacity: 0.1,\n        shadowRadius: 9,\n        elevation: 5,\n        marginVertical: 10,\n        // overflow: 'hidden'\n      }}\n    >\n      <View style={{ padding: 20 }}>\n        <View\n          style={{\n            flexDirection: \"row\",\n            alignItems: \"center\",\n            justifyContent: \"space-between\",\n          }}\n        >\n          <Text style={{ fontFamily: \"Overpass_700Bold\", fontSize: 18 }}>\n            {ActionTypeMap[ca_type][ca_sub_type]}\n          </Text>\n          <View>\n            <Text style={{ fontFamily: \"ArialNova\", fontSize: 12 }}>\n              {record_date && convertDateFormat(record_date)}\n            </Text>\n          </View>\n        </View>\n        <Text style={{ fontFamily: \"Overpass_400Regular\" }}>\n          {ca_type === \"dividend\" &&\n            ca_sub_type === \"cash\" &&\n            `Cash dividend ${cash} per share`}\n          {ca_type === \"dividend\" &&\n            ca_sub_type === \"stock\" &&\n            `Stock dividend ${((new_rate - old_rate) * 100).toLocaleString(\n              undefined,\n              { minimumFractionDigits: 2, maximumFractionDigits: 2 }\n            )}% per share`}\n          {ca_type === \"merger\" &&\n            ca_sub_type === \"merger_completion\" &&\n            `${initiating_symbol} will acquire ${target_symbol}`}\n          {ca_type === \"split\" &&\n            ca_sub_type === \"reverse_split\" &&\n            `Stock reverse split ${old_rate}:${new_rate}`}\n          {ca_type === \"split\" &&\n            ca_sub_type === \"stock_split\" &&\n            `Stock split ${old_rate}:${new_rate}`}\n          {ca_type === \"split\" &&\n            ca_sub_type === \"unit_split\" &&\n            `${initiating_symbol} is splitting out ${target_symbol}`}\n          {ca_type === \"spinoff\" &&\n            ca_sub_type === \"spinoff\" &&\n            `${initiating_symbol} will spin off ${target_symbol}`}\n        </Text>\n      </View>\n      <View\n        style={{\n          padding: 20,\n          justifyContent: \"center\",\n          borderTopWidth: 0.25,\n          borderColor: \"#bbb\",\n        }}\n      >\n        <Text style={{ fontFamily: \"ArialNova\", lineHeight: 24, fontSize: 13 }}>\n          {ca_type === \"dividend\" &&\n            ca_sub_type === \"cash\" &&\n            `Declared on ${convertDateFormat(\n              declaration_date\n            )} for shareholders of ${target_symbol} who own the shares on ${convertDateFormat(\n              record_date\n            )}, and will be paid on ${convertDateFormat(payable_date)}`}\n          {ca_type === \"dividend\" &&\n            ca_sub_type === \"stock\" &&\n            `Declared on ${convertDateFormat(\n              declaration_date\n            )} for shareholders ${target_symbol} who own the shares on ${convertDateFormat(\n              record_date\n            )}, and will be paid on ${convertDateFormat(payable_date)}`}\n          {ca_type === \"merger\" &&\n            ca_sub_type === \"merger_completion\" &&\n            `All shareholders of ${target_symbol} will receive ${new_rate} shares of ${initiating_symbol} for every ${old_rate} share of ${target_symbol} that they own. This transaction is expected to close on ${convertDateFormat(\n              effective_date\n            )}.`}\n          {ca_type === \"split\" &&\n            ca_sub_type === \"reverse_split\" &&\n            `${target_symbol} is reducing its number of shares in a ${old_rate}:${new_rate} ratio. This change will go into effect on ${convertDateFormat(\n              payable_date\n            )} and will reduce your number of shares - and increase the price of the shares - accordingly. This will not directly affect that value of your shares.`}\n          {ca_type === \"split\" &&\n            ca_sub_type === \"stock_split\" &&\n            `${target_symbol} is increasing its number of shares in a ${old_rate}:${new_rate} ratio. This change will go into effect on ${convertDateFormat(\n              payable_date\n            )} and will increase your number of shares - and decrease the price of the shares - accordingly. This will not directly affect that value of your shares.`}\n          {ca_type === \"split\" &&\n            ca_sub_type === \"unit_split\" &&\n            `All shareholders of ${initiating_symbol} will receive ${new_rate} units of ${target_symbol} for every ${old_rate} share of ${initiating_symbol}. The new shares will be available on ${convertDateFormat(\n              effective_date\n            )}.`}\n          {ca_type === \"spinoff\" &&\n            ca_sub_type === \"spinoff\" &&\n            `All shareholders of ${initiating_symbol} will receive ${new_rate} shares of ${target_symbol} for every ${old_rate} share of ${initiating_symbol} that they own as of ${convertDateFormat(\n              record_date\n            )}. The new shares will be available on ${convertDateFormat(\n              payable_date\n            )}.`}\n        </Text>\n      </View>\n    </View>\n  );\n};\n","import axios, { AxiosRequestConfig } from \"axios\";\nimport * as SecureStore from 'expo-secure-store'\n\nconst axiosClientBalanceService = axios.create({\n    baseURL: \"https://api.elphinstone.us/v1/user-balance\"\n    // baseURL: process.env.NODE_ENV === \"production\" ? \"https:///api-business.elphinstone.com.pk/b2c\" : \"https://staging-api-business.elphinstone.com.pk/b2c\"\n})\n\n//check if the call composes of login or register, if not, insert the jwt here\naxiosClientBalanceService.interceptors.request.use(async (config : AxiosRequestConfig) => {\n    \n    const sessionToken = JSON.parse(await SecureStore.getItemAsync(\"user_session\") as string )\n    config.headers['X-Session-Token'] = sessionToken.session_token\n    config.auth\n    return config\n})\n\n\nexport default axiosClientBalanceService\n","import axios from \"axios\";\nimport axiosClient from \"../axiosWrapper\";\nimport axiosClientBalanceService from \"../axiosWrapperBalanceService\";\n\n\nexport default class AlpacaBalanceService {\n\n    private account_id;\n    \n    constructor(account_id : any) {\n        this.account_id = account_id\n    }\n\n    async getUserBalance(){\n        let url= `/account-details/balance/${this.account_id}`\n        try{\n            const data =  await axiosClientBalanceService.get(url)\n            const responseDataWithStatus = {\n                ...data.data,\n                statusCode: data.status,\n            };\n        \n            return responseDataWithStatus;\n        }catch(err){\n            //console.log(err)\n            const responseDataWithStatus = {\n               \n                statusCode: 404,\n            };\n        \n            return responseDataWithStatus;\n        }\n    }\n    async getUserPorfolio(){\n        let url= `/account-details/portfolio/${this.account_id}`\n        try{\n            const data =  await axiosClientBalanceService.get(url)\n            const responseDataWithStatus = {\n                ...data.data,\n                statusCode: data.status,\n            };\n            \n            return responseDataWithStatus;\n        }catch(err){\n            console.log(err)\n            const responseDataWithStatus = {\n               \n                statusCode: 404,\n            };\n        \n            return responseDataWithStatus;\n        }\n    }\n    async getUserCash(){\n        let url= `/account-details/cash/${this.account_id}`\n        try{\n            const data =  await axiosClientBalanceService.get(url)\n            const responseDataWithStatus = {\n                ...data.data,\n                statusCode: data.status,\n            };\n        \n            return responseDataWithStatus;\n        }catch(err){\n            //console.log(err)\n            const responseDataWithStatus = {\n               \n                statusCode: 404,\n            };\n        \n            return responseDataWithStatus;\n        }\n    }\n    async getAll() {\n        let url= `/account-details/all/${this.account_id}`\n        console.log(url)\n        try{\n            const data =  await axiosClientBalanceService.get(url)\n            const responseDataWithStatus = {\n                ...data.data,\n                statusCode: data.status,\n            };\n        \n            return responseDataWithStatus;\n        }catch(err){\n            console.log(\"getall\",err)\n            const responseDataWithStatus = {\n               \n                statusCode: 404,\n            };\n        \n            return responseDataWithStatus;\n        }\n        \n        \n     // Append status to data before returning\n\n}\n    public static async getAccount(account_id : string) {\n        let url= `/account-details/all/${account_id}`\n        try{\n            \n            const data =  await axiosClientBalanceService.get(url)\n            const responseDataWithStatus = {\n                ...data.data,\n                statusCode: data.status,\n            };\n            \n            return responseDataWithStatus;\n        }catch(err){\n            //console.log(err)\n            const responseDataWithStatus = {\n               \n                statusCode: 404,\n            };\n        \n            return responseDataWithStatus;\n        }\n    }\n}","import axios, { AxiosRequestConfig } from \"axios\";\n\nconst NON_AUTH_CALLS = ['/v1/users/signup/', '/v1/users/login', '/v1/users/password-reset-no-auth']\nimport dotenv from \"dotenv\";\nconst axiosClientBrokerAPIService = axios.create({\n    baseURL: \"https://broker-api.sandbox.alpaca.markets\"\n    // baseURL: process.env.NODE_ENV === \"production\" ? \"https:///api-business.elphinstone.com.pk/b2c\" : \"https://staging-api-business.elphinstone.com.pk/b2c\"\n})\n\n//check if the call composes of login or register, if not, insert the jwt here\naxiosClientBrokerAPIService.interceptors.request.use((config : AxiosRequestConfig) => {\n    // if (!NON_AUTH_CALLS.includes(config.url)) {\n    //     config.headers.authorization = localStorage.getItem('jwt')\n    // }\n    //config.headers['X-App-Type'] = 'B2C'\n    //config.headers['Access-Control-Request-Headers'] = \"X-Correlation-ID\"\n    //config.headers['X-Correlation-ID'] = uuidv4().toUpperCase()\n    // console.log(config)\n\n    return config\n})\n\n\nexport default axiosClientBrokerAPIService\n","import axios from \"axios\";\nimport axiosClient from \"../axiosWrapper\";\nimport axiosClientBro from \"../axiosWrapperBalanceService\";\nimport axiosClientBrokerAPIService from \"../axiosWrapperBrokerAPI\";\n\n\nexport default class AlpacaBrokerAPIService {\n\n    private account_id;\n    \n    constructor(account_id : any) {\n        this.account_id = account_id\n    }\n\n    async getUserTransfers(){\n        let url= `/v1/accounts/${this.account_id}/transfers`\n        const data =  await axiosClientBrokerAPIService.get(url)\n        return data.data\n    }\n    async getUserJournalOuts(){\n        let url= `/v1/journals`\n        const data =  await axiosClientBrokerAPIService.get(url,{\n            params:{\n                from_account :this.account_id\n            }\n        })\n        return data.data\n    }\n    async cancelTransferOut(journalId : string) {\n        let url = `/v1/journals/${journalId}`\n        const data = await axiosClientBrokerAPIService.delete(url)\n    }\n    \n}","import axios, { AxiosRequestConfig } from \"axios\";\nimport * as SecureStore from 'expo-secure-store'\n\nconst axiosClient = axios.create({\n    baseURL: \"https://api.elphinstone.us/v1/monthly-reports/\" //Change to actual port on deployment\n})\n\naxiosClient.interceptors.request.use(async (config : AxiosRequestConfig) => {\n    \n    const sessionToken = JSON.parse(await SecureStore.getItemAsync(\"user_session\") as string )\n    config.headers['X-Session-Token'] = sessionToken.session_token\n    config.auth\n    return config\n})\n\n\nexport default axiosClient\n","import axios from \"axios\";\nimport axiosClient from \"../axiosWrapperDocumentService\";\n\n\nexport default class AlpacaDocumentService {\n\n    private account_id;\n    \n    constructor(account_id : any) {\n        this.account_id = account_id\n    }\n\n    async getAllDocuments(){\n        let url= `/reports/${this.account_id}/document/account_statement`\n        const data =  await axiosClient.get(url)\n        return data.data\n    }\n    async getDocument(date : string){\n        let url= `/reports/${this.account_id}/document/account_statement/${date}`\n        const data =  await axiosClient.get(url)\n        return data.data\n    }\n}","import React, { useState } from \"react\";\nimport {\n  View,\n  Text,\n  StyleSheet,\n  ScrollView,\n  Dimensions,\n  TouchableOpacity,\n  Modal,\n  Button,\n  Image,\n  TextInput,\n} from \"react-native\";\nimport {\n  Octicons,\n  Feather,\n  MaterialIcons,\n  MaterialCommunityIcons,\n  AntDesign,\n  Ionicons,\n} from \"@expo/vector-icons\";\nimport { AlpacaAccountsError, AppConstants } from \"../../assets/AppConstants\";\nimport BigButtonRectangle from \"./AppDashboardHome/BigButtonRectangle\";\nimport { LineChart } from \"react-native-chart-kit\";\nimport MarketItem from \"./AppDashboardHome/MarketItem\";\nimport RingButtonSquare from \"./AppDashboardHome/RingButtonSquare\";\nimport ConfigModal from \"./AppDashboardInvest/ConfigModal\";\nimport Constants from \"expo-constants\";\nimport ResponseModal from \"../components/ResponseModal\";\nimport Slider from \"@react-native-community/slider\";\nimport AlpacaService from \"../../api/lib/AlpacaService\";\n\nexport default function AppDashboardWithdrawals({\n  navigation,\n  setSellValue,\n  account_id,\n  userBalances,\n  alpacaService,\n}: any) {\n  const [showResponseModal, setResponseModal] = useState(false);\n  const [availableForWithdrawal, setCashBalance] = useState(0);\n  const [proportion, setProportion] = useState(\"\");\n  const [responseModalConfig, setResponseModalConfig] = useState({\n    isSuccess: null,\n    message: \"\",\n    subMessage: \"\",\n  });\n  function launchResponseModal({ message, subMessage, isSuccess }: any) {\n    setResponseModalConfig({\n      message,\n      subMessage,\n      isSuccess,\n    });\n    setResponseModal(true);\n  }\n\n  return (\n    <ScrollView bounces={false} showsVerticalScrollIndicator={false}>\n      <View\n        style={{\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          backgroundColor: \"transparent\",\n          paddingTop: 100,\n        }}\n      >\n        <ResponseModal\n          show={showResponseModal}\n          closeModal={() => setResponseModal(false)}\n          {...responseModalConfig}\n          onClose={() => {\n            setSellValue(proportion);\n          }}\n        />\n\n        <View style={{ alignSelf: \"flex-start\", paddingHorizontal: 30 }}>\n          <Text\n            style={{\n              fontFamily: \"Overpass_700Bold\",\n              fontSize: 40,\n              color: \"white\",\n            }}\n          >\n            $\n            {userBalances.cash_withdrawable &&\n              parseFloat(userBalances?.cash_withdrawable).toLocaleString(\n                undefined,\n                {\n                  currency: \"USD\",\n                  maximumFractionDigits: 2,\n                  minimumFractionDigits: 2,\n                }\n              )}\n          </Text>\n          <Text\n            style={{ fontFamily: \"ArialNova\", fontSize: 16, color: \"white\" }}\n          >\n            Available for withdrawal\n          </Text>\n        </View>\n\n        <View\n          style={{\n            backgroundColor: \"#fff\",\n            borderRadius: 6,\n            marginTop: 20,\n            shadowColor: \"#000\",\n            shadowOffset: {\n              width: 0,\n              height: 2,\n            },\n            shadowOpacity: 0.1,\n            shadowRadius: 9,\n            elevation: 5,\n            width: \"95%\",\n          }}\n        >\n          <View\n            style={{\n              padding: 20,\n              flexDirection: \"row\",\n              justifyContent: \"space-between\",\n              alignItems: \"center\",\n            }}\n          >\n            <View>\n              <Text\n                style={{\n                  fontFamily: \"ArialNova\",\n                  fontSize: 16,\n                  color: \"#1C1939\",\n                }}\n              >\n                Withdraw your cash\n              </Text>\n            </View>\n          </View>\n\n          <View\n            style={{\n              borderBottomWidth: 0,\n              borderBottomColor: \"rgba(151,151,151,0.2)\",\n              padding: 20,\n              flexDirection: \"row\",\n              justifyContent: \"space-between\",\n              alignItems: \"center\",\n            }}\n          >\n            <View>\n              <Text\n                style={{\n                  fontFamily: \"ArialNova\",\n                  fontSize: 14,\n                  color: \"#8692A6\",\n                }}\n              >\n                Choose how much do you want to withdraw\n              </Text>\n            </View>\n          </View>\n          <TextInput\n  style={{\n    width: \"90%\",\n    height: 64,\n    borderWidth: 1,\n    alignSelf: \"center\",\n    borderRadius: 6,\n    borderColor: \"#ddd\",\n    padding: 10,\n    marginBottom: 20,\n  }}\n  keyboardType=\"numeric\"\n  onChangeText={(val) => {\n    const cleanedValue = val.replace(/[^0-9.]/g, '');\n    console.log(cleanedValue)\n    console.log(`VAL:`, val, typeof(val));\n    if (cleanedValue.split(\".\").length > 2) {\n      return;\n    }\n    if (cleanedValue === \"\") {\n      setProportion(\"\"); // Set proportion to an mpty string for better control\n    } else {\n      setProportion(cleanedValue);\n    }\n    try {\n      if (parseFloat(cleanedValue) > parseFloat(userBalances.cash_withdrawable)) {\n        setProportion(userBalances.cash_withdrawable.toString());\n      }\n    } catch (e) {}\n  }}\n  value={proportion}\n/>\n\n          {/* <TextInput\n            style={{\n              width: \"90%\",\n              height: 64,\n              borderWidth: 1,\n              alignSelf: \"center\",\n              borderRadius: 6,\n              borderColor: \"#ddd\",\n              padding: 10,\n              marginBottom: 20,\n            }}\n            keyboardType=\"numeric\"\n            onChangeText={(val) => {\n\n\t\t\t\t\t\t\tconsole.log(`VAL:`, val, typeof(val));\n\n              if (val.split(\".\").length > 2) {\n\t\t\t\t\t\t\t\tconsole.log(`REMOVED DECIMAL`);\n                return;\n              }\n              if(val==\"\"){\n                val=\"\"\n                setProportion(\"\")\n              }\n\t\t\t\t\t\t\tif (val in [\"N\",\"Na\", \"NaN\", \"nan\", \"Nan\"]) {\n                console.log(\"inside if\")\n\t\t\t\t\t\t\t\tsetProportion(0)\n\t\t\t\t\t\t\t\tval = \"0\"\n\t\t\t\t\t\t\t}\n              setProportion(val);\n              try {\n                if (parseFloat(val) > parseFloat(userBalances.cash_withdrawable)) {\n                  setProportion(userBalances.cash_withdrawable);\n                }\n              } catch (e) {}\n            }}\n            value={`${proportion}`}\n            // value={(proportion).toLocaleString() + '%'}\n            // editable={false}\n          /> */}\n          {/* <Slider\n  style={{width:'90%', height: 40, alignSelf:'center', marginBottom:20}}\n  minimumValue={0}\n  maximumValue={100}\n  step={1}\n  value={proportion}\n  onValueChange={cb=>setProportion(cb)}\n  minimumTrackTintColor=\"#004DBC\"\n//   maximumTrackTintColor=\"#004DBC\"\n  thumbImage={require('../../assets/images/slider_icon.png')} \n/> */}\n\n          <TouchableOpacity\n            style={{\n              borderBottomWidth: 1,\n              borderBottomColor: \"rgba(151,151,151,0.2)\",\n              padding: 20,\n              flexDirection: \"row\",\n              justifyContent: \"space-between\",\n              alignItems: \"center\",\n              backgroundColor: \"#004DBC\",\n              borderBottomStartRadius: 6,\n              borderBottomEndRadius: 6,\n            }}\n            onPress={() =>\n              alpacaService\n                .withdrawCash(proportion)\n                .then((cb: any) => {\n                  launchResponseModal({\n                    message: `Your withdrawal request of USD ${proportion} has been placed successfully.`,\n                    subMessage:\n                      \"We’ve sent you a confirmation email. Please check your inbox.\",\n                    isSuccess: true,\n                  });\n                })\n                .catch((err: any) => {\n                  launchResponseModal(AlpacaAccountsError(err.getErrorMsg(),err.getStatusCode(),'withdrawal').GenericErrorResponse);\n                })\n            }\n          >\n            <Text\n              style={{ fontFamily: \"ArialNova\", fontSize: 16, color: \"white\" }}\n            >\n              Withdraw Now\n            </Text>\n            <Ionicons name=\"ios-arrow-forward\" size={24} color=\"white\" />\n          </TouchableOpacity>\n        </View>\n\n        <View style={{ alignSelf: \"center\", marginTop: 30, marginBottom: 50 }}>\n          <Text\n            style={{\n              fontFamily: \"Overpass_300Light\",\n              paddingHorizontal: 10,\n              fontSize: 20,\n            }}\n          >\n            Quick Actions\n          </Text>\n          <View style={{ width: \"100%\" }}>\n            <View style={{ flexDirection: \"row\" }}>\n              <RingButtonSquare\n                title={\"Invest \\nNow\"}\n                Icon={({ color }: any) => {\n                  return (\n                    <MaterialIcons name=\"show-chart\" size={26} color={color} />\n                  );\n                }}\n                dark={true}\n                onPress={() => navigation.navigate(\"Invest\")}\n              />\n\n              <RingButtonSquare\n                title={\"Add \\nFunds\"}\n                Icon={({ color }: any) => {\n                  return (\n                    <AntDesign name=\"pluscircle\" size={24} color={color} />\n                  );\n                }}\n                onPress={() => navigation.navigate(\"Add Funds\")}\n              />\n            </View>\n          </View>\n        </View>\n      </View>\n\n      <View style={{ zIndex: -1, position: \"absolute\", width: \"100%\" }}>\n        <Image source={require(\"../../assets/nyse.png\")} style={{}} />\n        <View\n          style={{\n            backgroundColor: \"rgba(0, 23, 139,0.8)\",\n            position: \"absolute\",\n            height: \"100%\",\n            width: \"100%\",\n          }}\n        ></View>\n      </View>\n      <View style={{ height: 100 }} />\n    </ScrollView>\n  );\n}\n","import React from \"react\";\nimport {\n  View,\n  Text,\n  StyleSheet,\n  Modal,\n  Dimensions,\n  TouchableOpacity,\n} from 'react-native';\nimport { AntDesign } from '@expo/vector-icons';\n\nexport default function ReferralBonusModal({\n  show,\n  closeModal,\n}) {\n  return (\n    <Modal visible={show} transparent={true} animationType='fade'>\n      <View style={styles.container}>\n        <View style={styles.modalContent}>\n          <View style={styles.line} />\n          <View style={styles.content}>\n            <TouchableOpacity style={styles.closeButton} onPress={closeModal}>\n              <AntDesign name=\"close\" color={\"#666\"} size={16} />\n            </TouchableOpacity>\n            <View style={styles.iconContainer}>\n              <AntDesign name=\"check\" color='white' size={40} />\n            </View>\n            <Text style={styles.title}>\n              Now Elphinstone allows you to send your own referral code to family and friends, and you will both receive a $5 bonus when they fund their account!\n            </Text>\n            <Text style={styles.note}>\n              Note: To be eligible for the referral bonus, the minimum funding amount is $500, which must remain in their account for at least 30 days.\n            </Text>\n            <Text style={styles.instruction}>\n            Locate your referral code by visiting the 'Personal' section under Profile in the app.\n            </Text>\n            <TouchableOpacity style={styles.okButton} onPress={closeModal}>\n              <Text style={styles.okButtonText}>\n                Okay\n              </Text>\n            </TouchableOpacity>\n          </View>\n        </View>\n      </View>\n    </Modal>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    height: Dimensions.get('window').height,\n    width: Dimensions.get('window').width,\n    backgroundColor: 'rgba(127,127,127,0.5)',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  modalContent: {\n    width: '95%',\n    height: \"65%\",\n    backgroundColor: '#fff',\n    borderRadius: 6,\n    flexDirection: 'row',\n    overflow: 'hidden',\n  },\n  line: {\n    height: '100%',\n    width: 5,\n    backgroundColor: '#004DBC',\n  },\n  content: {\n    flex: 1,\n    paddingHorizontal: 20,\n    justifyContent: 'space-evenly',\n    marginVertical: 20,\n  },\n  closeButton: {\n    width: '95%',\n    alignItems: 'flex-end',\n  },\n  iconContainer: {\n    height: 80,\n    width: 80,\n    borderRadius: 50,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#004DBC',\n  },\n  title: {\n    fontFamily: 'ArialNova-Light',\n    fontSize: 18,\n    paddingVertical: 10,\n  },\n  note: {\n    fontFamily: 'ArialNova-Light',\n    fontSize: 14,\n    paddingBottom: 10,\n    color: '#666',\n  },\n  instruction: {\n    fontFamily: 'ArialNova-Regular',\n    fontSize: 14,\n    paddingBottom: 10,\n  },\n  okButton: {\n    backgroundColor: '#004DBC',\n    borderRadius: 6,\n    height: 50,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  okButtonText: {\n    color: 'white',\n    fontFamily: 'ArialNova',\n  },\n});\n","import axios, { AxiosRequestConfig } from \"axios\";\nimport * as SecureStore from \"expo-secure-store\"\n\nconst axiosClient = axios.create({\n    baseURL: \"https://api.elphinstone.us/v1/referral-service\"\n    // baseURL: process.env.NODE_ENV === \"production\" ? \"https:///api-business.elphinstone.com.pk/b2c\" : \"https://staging-api-business.elphinstone.com.pk/b2c\"\n})\n\n//check if the call composes of login or register, if not, insert the jwt here\naxiosClient.interceptors.request.use(async (config : AxiosRequestConfig) => {\n    \n    const sessionToken = JSON.parse(await SecureStore.getItemAsync(\"user_session\") as string )\n    config.headers['X-Session-Token'] = sessionToken.session_token\n    config.auth\n    return config\n})\n\n\nexport default axiosClient\n","import axios, { AxiosError } from \"axios\";\nimport axiosClientReferralService from \"../axiosWrapperReferralService\";\nimport HttpException from \"../../src/Interfaces/HttpException\";\nexport default class ReferralService {\n  public static async getRewards() {\n    const res = await axiosClientReferralService.get(\"/v1/get-reward\");\n   \n    return res?.data;\n  }\n  public email\n  public phone;\n  constructor(email: any,phone:any) {\n    this.email = email;\n    this.phone=phone;\n  }\n  async validateReferral(code:any){\n    try{\n      \n    const res= await axiosClientReferralService.post(\"/v1/validate-referral\",{\n      email:this.email,\n      phone_number:this.phone,\n      code:code\n    })\n    \n    return res?.data\n  }catch(e : any){\n   \n    throw new HttpException(\n      \"Referral Code Not Found\",404\n    );\n  }\n  }\n\n}\n\n\n","import React,{useState, useEffect, useRef, useContext} from 'react';\nimport { Text, View, Modal, Image, StatusBar, Platform, Button, Touchable, TouchableOpacity } from 'react-native';\nimport { NavigationContainer , DefaultTheme} from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport CustomTabBar from './DashboardTabNavigator/CustomTabBar';\nimport Constants from 'expo-constants'\nimport {EvilIcons} from '@expo/vector-icons'\nimport AppDashboardHome from '../screens/AppDashboardHome';\nimport AppDashboardAddFunds from '../screens/AppDashboardAddFunds';\nimport AppDashboardInvest from '../screens/AppDashboardInvest';\nimport AppDashboardWithdraw from '../screens/AppDashboardWithdraw';\nimport AppDashboardMarkets from '../screens/AppDashboardMarkets';\nimport AppDashboardNewsScreen from '../screens/AppDashboardNewsScreen';\nimport {AntDesign, Feather} from '@expo/vector-icons'\nimport AppDashboardMyPortfolio from '../screens/AppDashboardMyPortfolio';\nimport AppDashboardMyPortfolioEquities from '../screens/AppDashboardMyPortfolioEquities';\nimport AppDashboardIndividualStock from '../screens/AppDashboardIndividualStock';\nimport AppDashboardUserProfile from '../screens/AppDashboardUserProfile';\nimport AppDashboardAccountStatements from '../screens/AppDashboardAccountStatements';\nimport AppDashboardEditProfile from '../screens/AppDashboardEditProfile';\nimport AppDashboardSell from '../screens/AppDashboardSell';\nimport AlpacaService from '../../api/lib/AlpacaService';\nimport { StockDictionary } from '../Interfaces/StockDictionaryInterface';\nimport { UserPostion } from '../Interfaces/UserPositionInterface';\nimport AppDashboardMyTransactions from '../screens/AppDashboardTransactions';\nimport { AuthContext } from \"../components/authProvider\";\nimport AlpacaBalanceService from '../../api/lib/AlpacaBalanceService';\nimport AlpacaBrokerAPIService from '../../api/lib/AlpacaBrokerAPIService';\nimport MiscService from '../../api/lib/MiscService';\nimport UserService from '../../api/lib/UserService';\nimport AlpacaDocumentService from '../../api/lib/AlpacaDocumentsService';\nimport { usePostHog } from 'posthog-react-native';\nimport AppDashboardWithdrawSelect from '../screens/AppDashboardWithdrawals';\nimport ServiceDownModal from '../components/ServiceDownModal';\nimport TermsConditionsModal from '../components/TermsAndConditionsModal';\nimport ReferralBonusModal from '../components/ReferralBonusModal';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport axios from 'axios';\nimport ReferralService from '../../api/lib/ReferralService';\n\nconst Tab = createBottomTabNavigator();\n\nconst MyTheme = {\n  ...DefaultTheme,\n  colors: {\n    ...DefaultTheme.colors,\n    background: '#FFF',\n  },\n};\n\nconst HeaderComponent = ({ navigation, route, options, logout } : any) => {\n  return(\n    <View style={{paddingTop: Platform.OS === 'ios' ? Constants.statusBarHeight : 0,  }}>\n      <View style={{height:100, width:'100%', overflow:'hidden',position:'absolute'}}>\n          <Image source={require('../../assets/nyse.png')} style={{ position:'absolute'}}/>\n          <View style = {{backgroundColor:'rgba(0, 23, 139,0.8)', position:'absolute',height:'100%',width:'100%'}}>\n\n          </View>\n      </View>\n        \n        <View style={{paddingTop: Platform.OS === 'ios' ? Constants.statusBarHeight : Constants.statusBarHeight,position:'absolute' ,flexDirection:'row', paddingHorizontal:20, width:'100%',alignItems:'center', justifyContent:'space-between', height:100}}>\n        <View style={{flexDirection:'row', alignItems:'center'}}>\n        {\n          ['News','Stock','My Profile','Account Statements','Edit Profile', 'Sell', 'Withdrawal'].includes(route.name)  && <TouchableOpacity style={{marginRight:20}} onPress={() => navigation.goBack()}>\n            <AntDesign name='arrowleft' color={\"white\"} size={24}/>\n          </TouchableOpacity>\n        }\n        <Text style={{fontFamily:'Overpass_700Bold', color:'white', fontSize:18}}>{route.name === 'Stock' ? route.params.stockTicker : route.name}</Text>\n        </View>\n        <TouchableOpacity onPress={(route.name === 'My Profile')  ? ()=>navigation.navigate('Edit Profile') : ()=>navigation.navigate('My Profile')} disabled={route.name === 'Edit Profile'}>\n        {route.name === 'My Profile' ?  \n        \n          <Feather name=\"edit-2\" size={24} color=\"white\"/>\n        :   \n\n        <EvilIcons name=\"user\" size={40} color=\"white\" />\n        \n        }\n        </TouchableOpacity>\n        </View>\n      </View>\n  )\n}\n\nexport default function DashboardTabNavigator({navigation, accountId,isSubscribed,portfolioid} : any) {\n\n  const { setSession, syncSession } = useContext(AuthContext)\n  const { isAuthenticated, session, sessionToken } = useContext(AuthContext)\n  const { name: { first = String(session !== undefined ? session!.identity.id : \"\")  } = {} } = {name : {first : \"\"} }\n \n  const [sellValue, setSellValue] = useState(0)\n  const [stockDictionary, setStockDictionary] = useState<StockDictionary[]>([])\n  const [userPositions, setUserPositions] = useState<UserPostion[]>([])\n  const [portfolioValue, setPortfolioValue] = useState<number>()\n  const [userBalances, setUserBalances] = useState<any>({})\n  const [showServiceDownModal, setShowServiceDownModal] = React.useState(false);\n\n  const alpacaService = new AlpacaService(accountId)\n  const alpacaBalanceService = new AlpacaBalanceService(accountId)\n  const alpacaBrokerAPIService = new AlpacaBrokerAPIService(accountId)\n  const alpacaDocumentService = new AlpacaDocumentService(accountId)\n  const [miscValues, setMiscValues] = useState({USDPKR : 270})\n  const [userObject, setUserObject] = useState<any>()\n  const posthog = usePostHog()\n  const [termsAccept,setTermsAccept]=useState(false)\n  const [reward,setReward]=useState()\n\n  \n  useEffect(() => {\n    \n    AsyncStorage.getItem('announcementAccepted').then((value) => {\n      console.log(value,value)\n      if (!value) {\n       \n        // If terms have not been accepted, show the modal\n        setTermsAccept(true);\n      }\n    });\n    MiscService.getUSDPKR().then(cb => setMiscValues({...miscValues,USDPKR: ((parseFloat(cb?.data[0]?.buying) + parseFloat(cb?.data[0]?.selling))/2)})).catch((err)=>console.log(\"USDPKR\",err))\n  },[])\n\n\n  const getProfile = () => {\n    UserService.getUser(session?.identity.id).then(cb=>setUserObject(cb))\n  }\n  const getReward=()=>{\n    //axios.get('https://3026-2400-adc1-13e-a200-f190-3ec7-5790-a0f6.ngrok-free.app//v1/get-reward').then(res=>setReward(res.data))\n    ReferralService.getRewards()\n    .then((reward) => {\n     \n      setReward(reward.data)\n    })\n    .catch((error) => {\n      console.log(error);\n    });\n  }\n\n  useEffect(()=>{\n    console.log(\"is subscribed\",isSubscribed)\n    alpacaService.getAllStocks().then(cb=> setStockDictionary(cb)).catch((e)=>{setShowServiceDownModal(true)})\n  },[])\n  \n  useEffect(() => {\n    posthog.identify(session?.identity?.id,{\n      email : session?.identity?.traits.email,\n    })\n    getPositions()\n    getUserBalances()\n  },[])\n\n\n  useEffect(() => {\n    getProfile()\n    getReward()\n  },[])\n\n  function getUserBalances() {    \n    alpacaBalanceService.getAll()\n        .then(cb => {\n      //   console.log(\"getUserBalances\",cb)\n            setUserBalances(cb);\n\n            // Check if the status is not equal to 200 and show the modal\n            if (cb.statusCode != 200) {\n              setShowServiceDownModal(true);\n            }\n\n            \n        })\n        .catch(err => {\n            console.log('err', err);\n\n            // Handle error and show the modal\n            setShowServiceDownModal(true);\n        });\n}\n\n\n  function getPositions(){\n    alpacaService.getAllPositions().then(data=>\n      {\n        \n        setUserPositions(data)\n        setPortfolioValue(data.reduce((total : number, cb : UserPostion)=>{return parseFloat(cb.market_value) + total}, 0))\n      } \n      ).catch(err=>{console.log(\"ERROR\",err)\n        setShowServiceDownModal(true)})\n  }\n \n    \n  const logout = async () => {\n    setSession(null)\n  }\n  const handleTermsAccept = () => {\n    // Set termsAccepted in AsyncStorage\n    AsyncStorage.setItem('announcementAccepted', 'true').then(() => {\n      // Close the modal\n      setTermsAccept(false);\n    });\n  };\n  return (\n      <View style={{flex:1}}>\n        <StatusBar barStyle='light-content'/>\n        { showServiceDownModal==true ? (<><ServiceDownModal/></>) :(\n        termsAccept===true ? (<><ReferralBonusModal show={true} closeModal={handleTermsAccept}  /></>):(\n\n        <Tab.Navigator \n        screenOptions={{headerShown: true, header: (props) => <HeaderComponent {...props} logout = {logout}/>, headerTransparent:true, tabBarHideOnKeyboard:true, unmountOnBlur:true}} \n        backBehavior=\"history\"\n        tabBar={props => <CustomTabBar {...props}/>} sceneContainerStyle={{backgroundColor:'transparent'}}\n      >\n          \n          \n  \n          <Tab.Screen name=\"Home\"  >\n            {props => <AppDashboardHome {...props} sellValue = {sellValue} stockDictionary={stockDictionary} userBalances={userBalances} refreshFunction = {()=>{getUserBalances(), getProfile()}} alpacaService={alpacaService} alpacaBalanceService={alpacaBalanceService}/>}\n            </Tab.Screen>\n            <Tab.Screen name=\"Add Funds\"  >\n            {props => <AppDashboardAddFunds {...props} sellValue = {sellValue} stockDictionary={stockDictionary} userBalances={userBalances} refreshFunction = {getUserBalances} alpacaService={alpacaService}/>}\n            </Tab.Screen>\n  \n            <Tab.Screen name=\"Invest\"  >\n            {props => <AppDashboardInvest {...props} stockDictionary={stockDictionary} userProfile={userObject} userBalances={userBalances} refreshFunction = {()=>{getUserBalances(), getProfile()}} alpacaService={alpacaService} session={session}/>}\n            </Tab.Screen>\n  \n          <Tab.Screen name=\"Withdraw\" >\n            {props => <AppDashboardWithdraw {...props} userBalances={userBalances} refreshFunction = {getUserBalances} alpacaService={alpacaService}/>}\n            </Tab.Screen>\n          <Tab.Screen name=\"Markets\">\n          {props => <AppDashboardMarkets {...props}  stockDictionary={stockDictionary} userBalances={userBalances} refreshFunction = {getUserBalances} alpacaService={alpacaService}/>}\n          </Tab.Screen>\n  \n          <Tab.Screen name=\"My Portfolio\">\n          {props => <AppDashboardMyPortfolioEquities {...props} stockDictionary={stockDictionary} userPositions={userPositions} userBalances={userBalances} resetPositions={()=>{getPositions(); getUserBalances();}} alpacaService={alpacaService}isSubscribed={isSubscribed} portfolioid={portfolioid} miscValues = {miscValues} alpacaBalanceService={alpacaBalanceService}/>}  \n          </Tab.Screen>\n  \n          <Tab.Screen name=\"Sell\">\n            {(props) => <AppDashboardSell {...props} setSellValue={setSellValue} refreshFunction = {getUserBalances}  userBalances={userBalances} alpacaService={alpacaService}/>}\n            </Tab.Screen>\n            <Tab.Screen name=\"Withdrawal\">\n            {(props) => <AppDashboardWithdrawSelect {...props} setSellValue={setSellValue} refreshFunction = {getUserBalances}  userBalances={userBalances} alpacaService={alpacaService}/>}\n            </Tab.Screen>\n  \n          <Tab.Screen name=\"Edit Profile\">\n            {props => <AppDashboardEditProfile {...props} userObject = {userObject}/>}\n          </Tab.Screen>\n    \n        {/* <Tab.Screen name=\"My Profile\" component={AppDashboardUserProfile} /> */}\n        <Tab.Screen name=\"Account Statements\">\n          {props => <AppDashboardAccountStatements {...props} userBalances={userBalances} alpacaDocumentService={alpacaDocumentService}/>}\n        </Tab.Screen>\n  \n        <Tab.Screen name=\"My Profile\">\n        {props => <AppDashboardUserProfile {...props} userObject ={userObject} refreshFunction={getProfile} reward={reward}/>}  \n        </Tab.Screen>\n        <Tab.Screen name=\"Stock\">\n          {(props) => <AppDashboardIndividualStock {...props} userPositions={userPositions} resetPositions={getPositions} refreshFunction = {getUserBalances}  userBalances={userBalances} alpacaService={alpacaService}/>}\n        </Tab.Screen>\n          {/* <Tab.Screen name=\"Stock\" component={AppDashboardIndividualStock} /> */}\n          <Tab.Screen name=\"News\" component={AppDashboardNewsScreen}/>\n  \n          <Tab.Screen name=\"Transactions\">\n          {props => <AppDashboardMyTransactions {...props} stockDictionary={stockDictionary} userPositions={userPositions} refreshFunction = {getUserBalances}  userBalances={userBalances} alpacaService={alpacaService} alpacaBrokerAPIService={alpacaBrokerAPIService} miscValues = {miscValues}/>}  \n          </Tab.Screen>\n  \n  \n        </Tab.Navigator>))\n}\n      \n      </View>\n  );\n}\n","import React, {useRef, useState, useEffect, useContext} from 'react'\nimport {\n    View,\n    Text,\n    StyleSheet,\n    Image,\n    StatusBar,\n    useColorScheme,\n    Dimensions,\n    TouchableOpacity,\n    Animated,\n    Easing\n} from 'react-native'\nimport { ButtonMain } from '../components/ButtonMain';\nimport { StackScreenProps } from \"@react-navigation/stack\"\nimport { RootStackParamList } from \"../components/navigation\"\nimport { AuthContext } from '../components/authProvider';\n\n\nexport default function OutOfService({ navigation, route }: any){\n\n    const { setSession, syncSession } = useContext(AuthContext)\n  const { isAuthenticated, session, sessionToken } = useContext(AuthContext)\n\n    const isDarkMode = useColorScheme() === 'dark';\n    const [carouselIndex, setCarouselIndex] = useState(0)\n    console.log(\"Out of Service screen shown.\")\n    useEffect(() => {\n        if (!isAuthenticated || !session) {\n          navigation.navigate('Login', { refresh: true })\n        }\n      }, [isAuthenticated, sessionToken])\n\n\n    return(\n        <View style={{flex:1, backgroundColor:'white',overflow:'hidden'}}>\n            <StatusBar\n        barStyle={isDarkMode ? 'light-content' : 'dark-content'}\n        backgroundColor={'white'}\n      />\n        <Animated.View style={{flexDirection:'row', height:'55%'}}>\n        <View style={styles.Carousel}>\n            <Image source={require('../../assets/noService.png')} style={{height:280, width:280}}/>\n\n        </View>\n        </Animated.View>\n        <View style={{\n            // backgroundColor:'#ddd',\n            flex:1,\n            alignItems:'center',\n            marginTop:20\n        }}>\n            <Text style={{\n                fontFamily:'Overpass_700Bold',\n                // fontWeight:'700',\n                fontSize:30,\n                textAlign:'center',\n                color:'black',\n            }}>{'The service is not \\navailable at the moment'\n            \n            }\n            </Text>\n\n            <Text style={{\n                marginTop:10,\n                fontFamily:'Overpass_300Light',\n                // fontWeight:'300',\n                color:'#8692A6',\n                textAlign:'center',\n                width:'80%'\n            \n            }}\n            numberOfLines={2}\n            >\n            Try again later in sometime. If the problem persists, please email us at help@elphinstone.us\n            </Text>\n            <View style={{marginTop:60}}>\n            <TouchableOpacity style={{\n            backgroundColor: '#004DBC',\n            height : 64,\n            width : 340,\n            elevation:5,\n            borderRadius:8,\n            alignItems:'center',\n            justifyContent:'center',\n            shadowColor: \"#000\",\n            shadowOffset: {\n                width: 0,\n                height: 2,\n            },\n            shadowOpacity: 0.25,\n            shadowRadius: 3.84,\n        }} onPress={()=>{setSession(null)}}>\n            <Text style={{\n                color:'white',\n                fontFamily:'ArialNova',\n                fontWeight:'400',\n                fontSize:16\n            }}>\n                Back\n            </Text>\n        </TouchableOpacity>\n            </View>\n\n        </View>\n        </View>\n    )\n}\n\nconst styles = StyleSheet.create({\n    Carousel:{\n        height:'100%',\n        width:Dimensions.get('window').width,\n        backgroundColor:'#F7F8FC',\n        alignItems:'center',\n        justifyContent:'center'\n    },\n    pipOnIndex : \n        {\n            width:12,\n            height:12,\n            backgroundColor:'#004DBC',\n            borderRadius:6,\n            marginHorizontal:2.5\n        },\n    pipOffIndex : {\n        width:9,\n        height:9,\n        backgroundColor:'rgba(0, 77, 188, 0.2)',\n        borderRadius:4.5,\n        marginHorizontal:2.5\n    }\n    \n})","\nimport {\n    View,\n    Text,\n    StyleSheet,\n    Image,\n    StatusBar,\n    TextInput,\n    TouchableOpacity,\n    Button,\n    Animated,\n    ScrollView,\n    KeyboardAvoidingView,\n    Dimensions,\n    Linking\n} from 'react-native';\nimport React,{ useRef, useState, useEffect } from 'react';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { Entypo, Feather } from '@expo/vector-icons'; \nimport AuthScreenWrapper from '../ScreenWrappers/AuthScreenWrapper'\nimport { GlobalStyles } from '../GlobalStyles';\nimport PasswordValidationView from './RegisterScreen/PasswordValidationView';\nimport { AppConstants } from '../../assets/AppConstants';\nimport SignupWelcomeScreen from './SignupScreen/SignupComponents/WelcomeScreen';\nimport { NavigationProp } from '@react-navigation/native';\nimport SignupLegalNames from './SignupScreen/SignupComponents/SignupLegalNames';\nimport SignupTaxResidence from './SignupScreen/SignupComponents/SignupTaxResidence';\nimport SignupCitizenship from './SignupScreen/SignupComponents/SignupCitizenship';\nimport SignupDOB from './SignupScreen/SignupComponents/SignupDOB';\nimport SignupBirthCountry from './SignupScreen/SignupComponents/SignupBirthCountry';\nimport SignupIDType from './SignupScreen/SignupComponents/SignupIDType';\nimport SignupIDDetails from './SignupScreen/SignupComponents/SignupIDDetails';\nimport SignupAddress from './SignupScreen/SignupComponents/SignupAddress';\nimport SignupIncomeDetails from './SignupScreen/SignupComponents/SignupIncomeDetails';\nimport SignupEmploymentDetails from './SignupScreen/SignupComponents/SignupEmploymentDetails';\nimport SignupBankDetails from './SignupScreen/SignupComponents/SignupBankDetails';\nimport SignupFundPreference from './SignupScreen/SignupComponents/SignupFundPreference';\nimport SignupAffiliationQs from './SignupScreen/SignupComponents/SignupAffiliationQs';\nimport SignupPEPQuestion from './SignupScreen/SignupComponents/SignupPEPQuestion';\nimport SignupAffiliationDetails from './SignupScreen/SignupComponents/SignupAffiliationDetails';\nimport SignupPEPFollowUps from './SignupScreen/SignupComponents/SignupPEPFollowups';\nimport SignupFATCA from './SignupScreen/SignupComponents/SignupFATCA';\nimport SignupNONUSDeclaration from './SignupScreen/SignupComponents/SignupNONUSDeclaration';\nimport SignupW8 from './SignupScreen/SignupComponents/SignupW8';\nimport SignupTrustedContact from './SignupScreen/SignupComponents/SignupTrustedContact';\nimport SignupDocumentUpload from './SignupScreen/SignupComponents/SignupDocumentUpload';\nimport SignupAgreementsDisclosures from './SignupScreen/SignupComponents/SignupAgreementsDisclosures';\nimport SignupPaymentGateway from './SignupScreen/SignupComponents/SignupPaymentGateway';\nimport SignupLastScreen from './SignupScreen/SignupComponents/SignupLastScreen';\n\nexport default function PendingVerificationScreen({navigation, backButtonFunction} : {navigation : NavigationProp<Screen>, backButtonFunction : any}) {\n    const showBackButton = true\n    return (\n        <AuthScreenWrapper navigation={navigation} showLogoutButton = {showBackButton} backButtonFunction={backButtonFunction}>\n            <ScrollView bounces={true} showsVerticalScrollIndicator={false}>\n            <View style={{\n                width:Dimensions.get('window').width,\n                alignItems:'flex-start',\n                justifyContent:'flex-start',\n                height:'100%',\n                overflow:'hidden',\n                paddingHorizontal:20\n            }}\n            onStartShouldSetResponder={()=>true}\n            >\n\n                <View style={{\n                    marginBottom:20\n                }}>\n                    <Image source={require('../../assets/images/tree.png')} style={{height:36,width:36}}/>\n                </View>\n            <Text style={{\n                    width:'100%',\n                    fontFamily:'PlayfairDisplay_700Bold',\n                    fontSize:32,\n                    color:AppConstants.loginHeaderBlue\n\n                }}>\n                    Account {'\\n'}Approval\n                </Text>\n\n                <Text\n                style={{\n                    marginTop:20,\n                    fontFamily:'ArialNova',\n                    lineHeight: 32,\n                    fontSize:18\n                }}\n                >\n                    Dear valued client, your account is under process for approval before we can make it transaction-ready and live.\n                    {'\\n\\n'}However, in the meantime, you can visit our website and read through our blog to learn more about Elphinstone’s product offering.\n                    {'\\n\\n'}For further questions or assistance, email us at help@elphinstone.us\n                </Text>\n\n                <View\n                style={{\n                    alignItems:'flex-end',\n                    justifyContent:'space-between',\n                    width:'100%', \n                    marginTop:20, \n                    flex:1,\n                    flexDirection:'row',\n                    paddingBottom:20,\n                }}>\n                \n                <TouchableOpacity style={{\n                    width:'100%',\n                    marginTop:10,\n                    height: 54,\n                    backgroundColor:AppConstants.loginHeaderBlue,\n                    marginVertical:10,\n                    borderRadius: 6,\n                    padding:10,\n                    alignItems:'center',\n                    flexDirection:'row',\n                    justifyContent:'space-between',\n                    elevation:5,\n                    shadowColor: \"#000\",\n                    shadowOffset: {\n                        width: 0,\n                        height: 2,\n                    },\n                    shadowOpacity: 0.25,\n                    shadowRadius: 3.84,\n                }} \n                activeOpacity={0.8}\n                onPress = {()=> Linking.openURL('https://elphinstone.us')}\n                // disabled= {true}\n                >\n                <Text style={{color:'white', fontFamily:'ArialNova', fontSize:18}}>\n                visit www.elphinstone.us\n                </Text>\n                <Feather name=\"arrow-right\" size={24} color=\"white\" />\n            </TouchableOpacity>\n            </View>\n           </View>\n           </ScrollView>\n        </AuthScreenWrapper>\n    )\n}","\nimport {\n    View,\n    Text,\n    StyleSheet,\n    Image,\n    StatusBar,\n    TextInput,\n    TouchableOpacity,\n    Button,\n    Animated,\n    ScrollView,\n    KeyboardAvoidingView,\n    Dimensions,\n    Linking,\n    Alert\n} from 'react-native';\nimport React,{ useRef, useState, useEffect } from 'react';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { Entypo, Feather } from '@expo/vector-icons'; \nimport AuthScreenWrapper from '../ScreenWrappers/AuthScreenWrapper'\nimport { GlobalStyles } from '../GlobalStyles';\nimport PasswordValidationView from './RegisterScreen/PasswordValidationView';\nimport { AppConstants } from '../../assets/AppConstants';\nimport SignupWelcomeScreen from './SignupScreen/SignupComponents/WelcomeScreen';\nimport { NavigationProp } from '@react-navigation/native';\n\nexport default function InformationRequestScreen({navigation} : {navigation : NavigationProp<Screen>}) {\n    const showBackButton = true\n    return (\n        <AuthScreenWrapper navigation={navigation} showBackButton = {false} showLogoutButton={true} backButtonFunction={()=>console.log('Continue')}>\n            <ScrollView bounces={true}>\n            <View style={{\n                width:Dimensions.get('window').width,\n                alignItems:'flex-start',\n                justifyContent:'flex-start',\n                height:'100%',\n                overflow:'hidden',\n                paddingHorizontal:20\n            }} \n            onStartShouldSetResponder={() => true}\n            >\n\n                <View style={{\n                    marginBottom:20\n                }}>\n                    <Image source={require('../../assets/images/tree.png')} style={{height:36,width:36}}/>\n                </View>\n            <Text style={{\n                    width:'100%',\n                    fontFamily:'PlayfairDisplay_700Bold',\n                    fontSize:32,\n                    color:AppConstants.loginHeaderBlue\n\n                }}>\n                    Information{'\\n'}Request\n                </Text>\n\n                <Text\n                style={{\n                    marginTop:20,\n                    fontFamily:'ArialNova',\n                    lineHeight: 32,\n                    fontSize:18\n                }}\n                >\n                    We have identified that some of the information which is required to make your Elphinstone account operational, is either incorrect or incomplete.\n                    {'\\n\\n'}Our team will contact you and we will run you through that and would like you to rectify those errors to proceed.\n                    {'\\n\\n'}For further questions or assistance, email us at help@elphinstone.us\n                </Text>\n\n                <View\n                style={{\n                    alignItems:'flex-end',\n                    justifyContent:'space-between',\n                    width:'100%', \n                    marginTop:20, \n                    flex:1,\n                    flexDirection:'row',\n                    paddingBottom:20,\n                }}>\n                \n                {/* <TouchableOpacity style={{\n                    width:'100%',\n                    marginTop:10,\n                    height: 54,\n                    backgroundColor:AppConstants.loginHeaderBlue,\n                    marginVertical:10,\n                    borderRadius: 6,\n                    padding:10,\n                    alignItems:'center',\n                    flexDirection:'row',\n                    justifyContent:'space-between',\n                    elevation:5,\n                    shadowColor: \"#000\",\n                    shadowOffset: {\n                        width: 0,\n                        height: 2,\n                    },\n                    shadowOpacity: 0.25,\n                    shadowRadius: 3.84,\n                }} \n                activeOpacity={0.8}\n                >\n                <Text style={{color:'white', fontFamily:'ArialNova', fontSize:18}}>\n                continue to onboarding\n                </Text>\n                <Feather name=\"arrow-right\" size={24} color=\"white\" />\n            </TouchableOpacity> */}\n            </View>\n           </View>\n           </ScrollView>\n        </AuthScreenWrapper>\n    )\n}","import {\n    View,\n    Text,\n    Image,\n    TouchableOpacity,\n    Animated,\n    Dimensions\n} from 'react-native'\nimport {\n    Onfido,\n    OnfidoCaptureType,\n    OnfidoCountryCode,\n    OnfidoDocumentType,\n  } from '@onfido/react-native-sdk';\nimport AlpacaService from '../../api/lib/AlpacaService';\nimport { useContext } from 'react';\nimport { AuthContext } from '../components/authProvider';\nimport AuthScreenWrapper from '../ScreenWrappers/AuthScreenWrapper';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport { AppConstants } from '../../assets/AppConstants';\nimport { Feather } from '@expo/vector-icons'\nimport { useState, useRef, useEffect } from 'react';\nimport SignupLastScreen from './SignupScreen/SignupComponents/SignupLastScreen';\nimport ResponseModal from '../components/ResponseModal';\nimport { usePostHog } from 'posthog-react-native';\n\nconst OnfidoScreen = ({navigation, route} : any) => { \n    const location = useRef(new Animated.Value(0)).current\n    const [locationState, setLocationState] = useState(0)\n    const [showResponseModal, setResponseModal] = useState(false)\n    const [responseModalConfig, setResponseModalConfig] = useState({\n        isSuccess : null,\n        message : \"\",\n        subMessage : \"\"\n    })\n    let account_details = route.params?.account_details\n    const { isAuthenticated, session, setSession } = useContext(AuthContext)\n    const [disableButton, setDisableButton] = useState(false)\n    function launchResponseModal({message, subMessage, isSuccess} : any) {\n        setResponseModalConfig({\n            message,\n            subMessage,\n            isSuccess\n        })\n        setResponseModal(true)\n    }\n\n    const OnfidoFlow = async () => {\n        setDisableButton(true)\n        const alpacaId = account_details ? account_details.id : (await AlpacaService.getAccountId(session?.identity.traits.email)).id\n        console.log(alpacaId)\n        const onfidoToken = await AlpacaService.getOnfidoToken(alpacaId)\n        console.log(onfidoToken)\n        let onfidoResponse\n        \n        // try {\n            \n        //     onfidoResponse = await Onfido.start({\n        //         sdkToken : onfidoToken.token,\n        //         flowSteps : {\n        //             welcome : true,\n        //             captureFace : {\n        //                 type : OnfidoCaptureType.PHOTO\n        //             },\n        //             captureDocument : {\n        //                 docType : OnfidoDocumentType.NATIONAL_IDENTITY_CARD,\n        //                 countryCode : OnfidoCountryCode.PAK\n    \n        //             }\n        //         }\n        //     })\n        // }catch(e : any){\n        //     console.log(\"SDK_ERROR\",JSON.stringify(e,null,2))\n        //     if (e.message === 'User canceled flow.'){\n        //         await AlpacaService.patchOnfidoToken(alpacaId, {\n        //             outcome : 'USER_EXITED',\n        //             token : onfidoToken.token\n        //         })\n        //     }else{\n        //         await AlpacaService.patchOnfidoToken(alpacaId, {\n        //             outcome : 'SDK_ERROR',\n        //             token : onfidoToken.token\n        //         })\n        //         launchResponseModal({\n        //             message:'Some error occurred.',\n        //             subMessage:'Email us if this error persists.',\n        //             isSuccess:false\n        //         })\n        //     }\n            \n        //     setDisableButton(false)\n        //     return\n        // }\n        // try {\n        //     await AlpacaService.patchOnfidoToken(alpacaId,{\n        //         outcome : \"USER_COMPLETED\",\n        //         token : onfidoToken.token\n        //     })\n        //     setLocationState(-1)\n            \n        // }catch(e){\n        //     console.log(\"ERROR IN PATCH\",JSON.stringify(e,null,2))\n        //     launchResponseModal(AppConstants.GenericErrorResponse)\n        //     setDisableButton(false)\n        // }\n        \n        \n    }\n    function goToNextScreen(locationState: number) {\n        Animated.timing(location, {\n            toValue: locationState,\n            duration: 500,\n            useNativeDriver: true\n        }).start()\n    }\n\n    useEffect(() => {\n        goToNextScreen(locationState)\n    }, [locationState])\n\n    const posthog = usePostHog()\n    return(\n        <AuthScreenWrapper navigation={navigation} showLogoutButton = {true} backButtonFunction={() => {setSession(null); posthog?.reset()}}>\n            <ResponseModal show={showResponseModal} closeModal={()=>setResponseModal(false)} {...responseModalConfig} />\n            <View style={{\n                width: Dimensions.get('window').width,\n                alignItems: 'flex-start',\n                justifyContent: 'flex-start',\n                height: '100%',\n                overflow: 'hidden',\n            }}>\n            <Animated.View style={{flexDirection:'row', width:'100%',justifyContent:'flex-start', alignItems:'flex-start', flex:1, transform: [{\n                        translateX: Animated.multiply(Dimensions.get('window').width, location)\n                    }],}}>\n            <View style={{width:'100%'}}>\n            <ScrollView style={{width:'100%'}} showsVerticalScrollIndicator = {false}>\n                <View onStartShouldSetResponder={()=>true} style={{paddingHorizontal:20}}>\n                <View style={{\n                    marginBottom:20\n                }}>\n                    <Image source={require('../../assets/images/tree.png')} style={{height:36,width:36}}/>\n                </View>\n\n                <Text style={{\n                    width:'100%',\n                    fontFamily:'PlayfairDisplay_700Bold',\n                    fontSize:32,\n                    color:AppConstants.loginHeaderBlue,\n                    marginBottom:20\n\n                }}>\n                    SmartInvest{'\\n'}Onboarding\n                </Text>\n            <Text style={{ fontFamily:'ArialNova', lineHeight:32, fontSize:18}}>\n            To complete your application, we require you to undergo a verification process that includes taking a clear picture of your government-issued photo ID and a live photo of yourself.  Make sure you have your Photo ID on hand. To begin the verification process, press the 'Start Verification' button whenever you're ready.\n            </Text>\n            <TouchableOpacity style={{\n                    width:'100%',\n                    marginTop:30,\n                    height: 54,\n                    backgroundColor:AppConstants.loginHeaderBlue,\n                    marginVertical:10,\n                    borderRadius: 6,\n                    padding:10,\n                    alignItems:'center',\n                    flexDirection:'row',\n                    justifyContent:'space-between'\n                }} \n                activeOpacity={0.8}\n                onPress = {OnfidoFlow}\n                disabled={disableButton}\n                >\n                <Text style={{color:'white', fontFamily:'ArialNova', fontSize:18}}>\n                    Start Verification\n                </Text>\n                <Feather name=\"arrow-right\" size={24} color=\"white\" />\n            </TouchableOpacity>\n        </View>\n        </ScrollView>\n        </View>\n\n\n        <SignupLastScreen goToNext={() => setSession(null)} goToPrev= { () => setSession(null)}/>\n        </Animated.View>\n        </View>\n      </AuthScreenWrapper>\n    )\n}\n\nexport default OnfidoScreen","import React, {useEffect} from 'react'\nimport {\n    View,\n    Text,\n    StyleSheet,\n    ScrollView,\n    Dimensions,\n    Image,\n    Platform,\n    StatusBar,\n    TouchableOpacity\n} from 'react-native'\nimport Constants from 'expo-constants'\nimport AuthScreenWrapper from '../ScreenWrappers/AuthScreenWrapper';\nimport {Ionicons, AntDesign} from '@expo/vector-icons'\nimport { AuthScreenWrapperStyle } from '../ScreenWrappers/AuthScreenWrapper/AuthScreenWrapperStyle';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport CustomTextInput from './SignupScreen/SignupComponents/SignupMiscComponents/CustomTextInput';\nimport { TextInput } from 'react-native-gesture-handler';\nimport { GlobalStyles } from \"../GlobalStyles\";\nimport HorizontalNavigatior from './AppDashboardEditProfile/HorizontalNavigator';\nimport axios from 'axios';\nimport { useState } from 'react';\nimport ResponseModal from '../components/ResponseModal';\nimport { AppConstants } from '../../assets/AppConstants';\n\nconst contactUsSchema = Yup.object().shape({\n    name : Yup.string().required(),\n    email: Yup.string().email('Invalid email').required('Required'),\n    phone: Yup.string().required(),\n    message : Yup.string()\n});\nexport default function ContactUsScreen({sellValue, userBalances, refreshFunction, navigation, route} : any){\n    const [showResponseModal, setResponseModal] = useState(false)\n    const [responseModalConfig, setResponseModalConfig] = useState({\n        isSuccess : null,\n        message : \"\",\n        subMessage : \"\"\n    })\n    function launchResponseModal({message, subMessage, isSuccess} : any) {\n        setResponseModalConfig({\n            message,\n            subMessage,\n            isSuccess\n        })\n        setResponseModal(true)\n    }\n    return (\n        <>\n        <View style={{ justifyContent: 'center',backgroundColor:'transparent',paddingHorizontal:0, width:'100%'}}>\n        <ResponseModal show={showResponseModal} closeModal={()=>setResponseModal(false)} {...responseModalConfig} onClose={()=>{navigation.goBack()}}/>\n        <StatusBar barStyle = 'dark-content'/>\n        <ScrollView bounces={true} showsVerticalScrollIndicator={false}>\n            <View onStartShouldSetResponder={() => true}>\n            <View style = {AuthScreenWrapperStyle.header}>\n                { <TouchableOpacity style={{\n                    // width:'100%',\n                    paddingHorizontal:20\n                }}>\n                    <Ionicons \n                    name=\"arrow-back-outline\" \n                    size={32} \n                    color=\"#9097AC\" \n                    onPress={ ()=>  navigation.goBack() }\n                    />\n                </TouchableOpacity>}\n            </View>\n\n                <Text style={{fontFamily : \"Overpass_600SemiBold\", fontSize: 24, paddingHorizontal:30}}>\n                    Contact us\n                </Text>\n\n\n                <Text style={{fontFamily : \"Overpass_400Regular\", fontSize: 16, color:\"#888\", paddingHorizontal:30, paddingVertical:10}}>\n                    get in touch and we'll revert back soon\n                </Text>\n                <View style={{paddingHorizontal:30}}>\n                <Formik\n                        initialValues={{ email: route.params?.email, name: route.params?.name, phone: (route.params?.phone), message : \"\" }}\n                        validationSchema={contactUsSchema}\n                        onSubmit={values => {\n                            axios.post('http://support.elphinstone.us/v1/contact-us',{\n                                ...values,\n                                phoneNumber: values.phone\n                            }).then((cb) => launchResponseModal({\n                                message:'Your message has been sent!',\n                                subMessage:\"We'll respond to you shortly.\",\n                                isSuccess:true\n                            })).catch(err => launchResponseModal(AppConstants.GenericErrorResponse))\n                        }}>\n                            {({ handleChange, handleBlur, handleSubmit, values, errors, touched }) => (\n                                <>\n                            <Text\n                                style={{\n                                    fontFamily: 'ArialNova',\n                                    fontSize: 18,\n                                    lineHeight: 32,\n                                    paddingTop: 20\n                                }}\n                            >\n                                Your name\n                            </Text>\n                            <CustomTextInput\n                                touched={touched.name}\n                                errors={errors.name}\n                                value={values.name}\n                                onFocus={() => { }}\n                                handleChange={handleChange('name')}\n                                handleBlur={handleBlur('name')}\n                                keyboardType=\"default\"\n                                placeholder={\"name\"}\n                                editable={true}\n                                // textContentType={\"email\"}\n                            />\n\n                            <Text\n                                style={{\n                                    fontFamily: 'ArialNova',\n                                    fontSize: 18,\n                                    lineHeight: 32,\n                                    paddingTop: 20\n                                }}\n                            >\n                                Email address\n                            </Text>\n                            <CustomTextInput\n                                touched={touched.email}\n                                errors={errors.email}\n                                value={values.email}\n                                onFocus={() => { }}\n                                handleChange={handleChange('email')}\n                                handleBlur={handleBlur('email')}\n                                keyboardType=\"email-address\"\n                                placeholder={\"email\"}\n                                editable={true}\n                                textContentType={\"email\"}\n                            />\n\n                            <Text\n                                    style={{\n                                        fontFamily: 'ArialNova',\n                                        fontSize: 18,\n                                        lineHeight: 32,\n                                        paddingTop: 20\n                                    }}\n                                >\n                            Mobile number\n                            </Text>\n\n                            <View style={{\n                                    width: '100%',\n                                    flexDirection: 'row',\n                                    marginTop: 20,\n                                    borderWidth: 1,\n                                    borderColor: touched.phone ? (errors.phone ? 'red' : '#19C18F') : '#DDDDDD',\n                                    borderRadius: 6,\n                                }}>\n                                    \n                                    <TextInput\n                                        style={{ ...GlobalStyles.textInputStyle, width: '80%', borderWidth: 0}}\n                                        placeholder=\"\"\n                                        onChangeText={handleChange('phone')}\n                                        onBlur={handleBlur('phone')}\n                                        value={values.phone}\n                                        autoCapitalize=\"none\"\n                                        keyboardType='phone-pad'\n                                    />\n                                    <View style={{\n                                        height: 64,\n                                        width: '20%',\n                                        alignItems: 'center',\n                                        justifyContent: 'center'\n                                    }}>\n                                        {(touched.phone) ?\n                                            (errors.phone ?\n                                                <AntDesign name='close' size={24} color={'red'} /> :\n                                                <AntDesign name='check' size={24} color={'#19C18F'} />\n                                            ) :\n                                            <></>\n                                        }\n                                    </View>\n                                </View>\n\n                                <Text\n                                style={{\n                                    fontFamily: 'ArialNova',\n                                    fontSize: 18,\n                                    lineHeight: 32,\n                                    paddingTop: 20\n                                }}\n                            >\n                                Your message\n                            </Text>\n                            <TextInput\n                                style={{ ...GlobalStyles.textInputStyle, width: '100%', borderWidth: 1, padding: 10, height:192 }}\n                                placeholder=\"\"\n                                onChangeText={handleChange('message')}\n                                onBlur={handleBlur('message')}\n                                value={values.message}\n                                autoCapitalize=\"none\"\n                                keyboardType='default'\n                                multiline={true}\n                                textAlignVertical=\"top\"\n                            />\n\n                            <HorizontalNavigatior mainButtonText='Submit' nextFunction={handleSubmit}/>\n                            \n                                \n                                </>\n                            )}\n                    \n                </Formik>\n                </View>\n                </View>\n        </ScrollView>\n        \n\n        </View>\n        <View style={{ zIndex:-1, position:'absolute',width:'100%'}}>\n          {/* <Image source={require('../../assets/nyse.png')} style={{}}/> */}\n          {/* <View/> */}\n          <View style = {{backgroundColor:'#F7F8FC', position:'absolute',height:Dimensions.get('window').height *0.5,width:'100%',borderBottomStartRadius:8, borderBottomEndRadius: 8}}/>\n        </View>\n        \n        </>\n      );\n}\n","import {\n    View,\n    KeyboardAvoidingView,\n    Text,\n    TouchableOpacity,\n    Dimensions,\n    TextInput,\n    Image,\n    Keyboard,\n    TouchableWithoutFeedback\n} from 'react-native'\nimport { AppConstants } from '../../../../assets/AppConstants';\nimport { Entypo, Feather } from '@expo/vector-icons'; \nimport {useEffect, useRef, useState} from 'react'\nimport LottieView from 'lottie-react-native';\n  const digitInputStyle = {\n  height: 64,\n  borderWidth: 1,\n  borderColor: '#DDDDDD',\n  borderRadius: 6,\n  fontSize:32,\n  width:'14.285%', \n  textAlign:'center',\n  padding:10\n}\n\nexport default function SignupEmailOTP({goToNext, goToPrev, onSubmit} : {goToNext? : ()=>void, goToPrev? : ()=>void, onSubmit : any}){\n    const [OTP, setOTP] = useState<string>('')\n    const OTPInputRef = useRef<any>()\n    const [isFieldDisabled, setFieldDisabled] = useState(false)\n    const [OTPResponse, setOTPResponse] = useState<string>('')\n    function handleSubmit(value : string) {\n        setOTP(value)\n        if (value.length < 6){ \n            setOTPResponse('')\n            return\n        }\n        setFieldDisabled(true)\n        onSubmit(value)\n        Keyboard.dismiss()\n    }\n\n    const onFieldPress = () =>{\n        !isFieldDisabled && OTPInputRef.current.focus()\n    }\n    const tickAnimationPath = '../../../../assets/success_anim.json'\n    const crossAnimationPath = '../../../../assets/failed_anim.json'\n\n    return(\n        <KeyboardAvoidingView behavior='height' style={{\n            width:Dimensions.get('window').width,\n            height:'100%',\n            justifyContent:'flex-start',\n            alignItems:'flex-start',\n            paddingHorizontal:20\n            }}>\n                <View style={{\n                    marginBottom:20\n                }}>\n                    <Image source={require('../../../../assets/images/tree.png')} style={{height:36,width:36}}/>\n                </View>\n\n                <Text style={{\n                    width:'100%',\n                    fontFamily:'PlayfairDisplay_700Bold',\n                    fontSize:32,\n                    color:AppConstants.loginHeaderBlue\n\n                }}>\n                    Elphinstone{'\\n'}Onboarding\n                </Text>\n                <Text\n                style={{\n                    fontFamily:'ArialNova',\n                    fontSize:18,\n                    lineHeight:32,\n                    paddingTop:20\n                }}\n                >\n                Let’s verify your email address\n                </Text>\n\n                <View style={{\n                    width: '100%', \n                    flexDirection:'row',\n                    marginTop:40, \n                    borderRadius: 6,\n                    justifyContent:'space-between'\n                }}>\n                \n                \n                <Text\n                style={{...digitInputStyle, borderColor:OTPResponse ==='failed' ? 'red' : '#19C18F'}}\n                onPress={onFieldPress}\n                >\n                {OTP[0]}\n                </Text>\n\n                <Text\n                style={{...digitInputStyle, borderColor: OTPResponse ==='failed' ? 'red' : (OTP.length > 0 ? '#19C18F' : '#ddd')}}\n                onPress={onFieldPress}\n                >\n                {OTP[1]}\n                </Text>\n\n                <Text\n                style={{...digitInputStyle, borderColor: OTPResponse ==='failed' ? 'red' : (OTP.length > 1 ? '#19C18F' : '#ddd')}}\n                onPress={onFieldPress}\n                >{OTP[2]}</Text>\n\n                <Text\n                style={{...digitInputStyle, borderColor: OTPResponse ==='failed' ? 'red' : (OTP.length > 2 ? '#19C18F' : '#ddd')}}\n                onPress={onFieldPress}>\n                    {OTP[3]}\n                </Text>\n                \n                <Text\n                style={{...digitInputStyle, borderColor: OTPResponse ==='failed' ? 'red' : (OTP.length > 3 ? '#19C18F' : '#ddd')}}\n                onPress={onFieldPress}>\n                    {OTP[4]}\n                </Text>\n                \n                <Text\n                style={{...digitInputStyle, borderColor: OTPResponse ==='failed' ? 'red' : (OTP.length > 4 ? '#19C18F' : '#ddd')}}\n                onPress={onFieldPress}>\n                    {OTP[5]}\n                </Text>\n                \n                </View>\n                \n                <Text\n                style={{\n                    fontFamily:'ArialNova',\n                    fontSize:12,\n                    lineHeight:18,\n                    color:'#1E293B',\n                    marginTop:10\n                }}\n                >\n                Please enter the 6-digit verification code we just \n                sent to your email.\n                </Text>\n                {\n                    OTPResponse === 'success' &&\n                <LottieView\n                autoPlay\n                style={{\n                paddingTop:20,\n                width: 100,\n                height: 100,\n                }}\n                loop={false}\n                onAnimationFinish={()=>{\n                    goToNext()\n                }}\n                // Find more Lottie files at https://lottiefiles.com/featured\n                source={require(tickAnimationPath)}\n                />\n                }\n                {\n                    OTPResponse === 'failed' &&\n                <LottieView\n                autoPlay\n                style={{\n                paddingTop:20,\n                width: 100,\n                height: 100,\n                }}\n                loop={false}\n                // Find more Lottie files at https://lottiefiles.com/featured\n                onAnimationFinish={()=>{\n                    setFieldDisabled(false)\n                }}\n                source={require(crossAnimationPath)}\n                />\n                }\n            \n            <TextInput\n            ref={OTPInputRef}\n            style={{color:'transparent'}}\n            onChangeText={handleSubmit}\n            value={OTP}\n            onBlur={()=>{}}\n            autoCapitalize=\"none\"\n            keyboardType='number-pad'\n            textContentType='oneTimeCode'\n            maxLength={6}\n            caretHidden={true}\n            \n            >\n\n            </TextInput>\n        </KeyboardAvoidingView>\n    )\n}","import { SelfServiceLoginFlow, SubmitSelfServiceLoginFlowBody } from \"@ory/kratos-client\";\nimport React, { useCallback, useContext, useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { View, Text, ActivityIndicator } from \"react-native\";\nimport { AuthContext } from \"../components/authProvider\";\nimport { newOrySdk } from \"../components/ory/sdk\";\nimport { ProjectContext } from \"../components/projectProvider\";\nimport { StackScreenProps } from \"@react-navigation/stack\"\nimport { RootStackParamList } from \"../components/navigation\";\nimport { useFocusEffect } from \"@react-navigation/native\";\nimport { SelfServiceFlow } from \"../components/ory\";\nimport { handleFormSubmitError } from \"../components/ory/helpers/form\";\nimport { SessionContext } from \"../components/ory/helpers/auth\";\nimport AuthScreenWrapper from '../ScreenWrappers/AuthScreenWrapper'\nimport ChangePasswordModal from \"./LoginScreen/ChangePasswordModal\"\nimport { ScrollView } from \"react-native-gesture-handler\";\nimport { LoginFlow, UpdateLoginFlowBody, UpdateVerificationFlowBody, VerificationFlow } from \"@ory/client\";\nimport SignupPhoneOTP from \"./SignupScreen/SignupComponents/SignupPhoneOTP\";\nimport SignupEmailOTP from \"./SignupScreen/SignupComponents/SignupEmailOTP\";\nimport { AppConstants } from \"../../assets/AppConstants\";\nimport ResponseModal from \"../components/ResponseModal\";\n//TODO add type checking for navigation https://reactnavigation.org/docs/typescript/\ntype Props = StackScreenProps<RootStackParamList, \"Login\">\n\nexport default function VerificationScreen({ navigation, route }: Props) {\n\n    const [flow, setConfig] = useState<VerificationFlow | undefined>(undefined)\n    const { project } = useContext(ProjectContext)\n    const [showResponseModal, setResponseModal] = useState(false)\n    const [uninvestedCashBalance, setCashBalance] = useState(47749)\n    const [responseModalConfig, setResponseModalConfig] = useState({\n        isSuccess : null,\n        message : \"\",\n        subMessage : \"\"\n    })\n\n    function launchResponseModal({message, subMessage, isSuccess} : any) {\n        setResponseModalConfig({\n            message,\n            subMessage,\n            isSuccess\n        })\n        setResponseModal(true)\n    }\n\n  \n    const initializeFlow = () =>\n      newOrySdk(project)\n        .createNativeVerificationFlow()\n        // The flow was initialized successfully, let's set the form data:\n        .then(({ data: flow }) => {\n          setConfig(flow)\n        })\n        .catch(console.error)\n    useEffect(() => console.log(JSON.stringify(flow,null,2)),[flow])\n    const fetchFlow = (id: string) =>\n      newOrySdk(project)\n        .getVerificationFlow({ id })\n        .then(({ data }) => {\n          setConfig(data)\n        })\n        .catch(console.error)\n  \n    // When the component is mounted, we initialize a new verification flow\n    // or use the id provided by the route params to fetch that flow:\n    useFocusEffect(\n      useCallback(() => {\n        if (route.params?.flowId) {\n          fetchFlow(route.params?.flowId)\n        } else {\n          initializeFlow()\n        }\n  \n        return () => {\n          setConfig(undefined)\n        }\n      }, [project]),\n    )\n  \n    // This will update the verification flow with the user provided input:\n    const onSubmit = async (\n      payload: UpdateVerificationFlowBody,\n    ): Promise<void> => {\n      if (!flow) {\n        return\n      }\n\n      newOrySdk(project)\n        .updateVerificationFlow({\n          flow: flow.id,\n          updateVerificationFlowBody: payload,\n        })\n        .then(({ data }) => {\n          setConfig(data)\n        })\n        .catch(\n          handleFormSubmitError<VerificationFlow | undefined>(\n            setConfig,\n            initializeFlow,\n          ),\n        )\n    }\n  \n    useEffect(() => {\n      if (flow && route.params && route.params.email && flow.state === 'choose_method'){\n        onSubmit({email: route.params.email, method:'code'})\n      }\n      if (flow && flow.state === 'sent_email' && flow.ui.messages?.length > 0 && flow.ui.messages[0].type === 'error'){\n        launchResponseModal({...AppConstants.GenericErrorResponse, message : \"The verification code is invalid or has already been used. Please try again.\"})\n        \n      }\n      if (flow && flow.state === 'passed_challenge'){\n        launchResponseModal({message: \"Your account has been successfully created.\", subMessage: 'Please login to use elphinstone.',isSuccess:true})\n      }\n    },[flow?.state, flow?.ui.messages])\n\n    if (flow === undefined) {\n        return \n    }\n    return (\n        <AuthScreenWrapper navigation={navigation} showBackButton={true} backButtonFunction={() => navigation.navigate('Login')}>\n          <ResponseModal show={showResponseModal} closeModal={()=>{setResponseModal(false); navigation.goBack('Login')}} {...responseModalConfig} />\n            <SignupEmailOTP onSubmit = {(value : string) => onSubmit({method : \"code\", code : value})}/>\n        </AuthScreenWrapper>\n    )\n}","import React from \"react\";\nimport { View, Text, StyleSheet, Modal, TouchableOpacity } from 'react-native';\nimport { MaterialIcons } from '@expo/vector-icons';\n\nexport default function ReferralResponseModal({\n  message,\n  subtext,\n  show,\n  continueAction,\n  closeModal,\n  check,\n}) {\n  return (\n    <Modal visible={show} transparent={true} animationType='fade'>\n      <View style={styles.modalContainer}>\n        <View style={styles.modalContent}>\n         \n            {/* Replace with tick or confirmation icon */}\n            <View style={[styles.iconContainer, check ? styles.tickIcon : styles.crossIcon]}>\n            {check ? (\n              <MaterialIcons name=\"check\" color='white' size={40} />\n            ) : (\n              <MaterialIcons name=\"close\" color='white' size={40} />\n            )}\n         \n          </View>\n          <Text style={styles.titleText}>{message}</Text>\n          <Text style={styles.subText}>{subtext}</Text>\n          {check ? (\n              <TouchableOpacity style={styles.continueButton} onPress={continueAction}>\n              <Text style={styles.continueButtonText}>Continue</Text>\n            </TouchableOpacity>\n            ) : (\n                <TouchableOpacity style={styles.continueButton} onPress={closeModal}>\n                <Text style={styles.continueButtonText}>Retry</Text>\n              </TouchableOpacity>\n            )}\n          \n        </View>\n      </View>\n    </Modal>\n  );\n}\n\n// const styles = StyleSheet.create({\n//   modalContainer: {\n//     flex: 1,\n//     alignItems: 'center',\n//     justifyContent: 'center',\n//     backgroundColor: 'rgba(127,127,127,1)',\n//   },\n//   modalContent: {\n//     width: '95%',\n//     backgroundColor: '#fff',\n//     borderRadius: 6,\n//     flexDirection: 'column',\n//     overflow: 'hidden',\n//     padding: 20,\n//     alignItems: 'center',\n//   },\n//   iconContainer: {\n//     height: 80,\n//     width: 80,\n//     borderRadius: 50,\n//     alignItems: 'center',\n//     justifyContent: 'center',\n//     backgroundColor: '#00A854', // Green color for confirmation\n//   },\n//   titleText: {\n//     fontFamily: 'ArialNova-Bold',\n//     fontSize: 18,\n//     paddingVertical: 10,\n//   },\n//   subText: {\n//     fontFamily: 'ArialNova-Light',\n//     fontSize: 18,\n//     paddingVertical: 5,\n//     textAlign: 'center',\n//   },\n//   continueButton: {\n//     backgroundColor: '#004DBC',\n//     padding: 10,\n//     borderRadius: 8,\n//     marginTop: 20,\n//   },\n//   continueButtonText: {\n//     color: 'white',\n//     fontSize: 16,\n//     textAlign: 'center',\n//     fontFamily: 'ArialNova-Bold',\n//   },\n// });\nconst styles = StyleSheet.create({\n    modalContainer: {\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center',\n      padding:16,\n      elevation: 10,\n      backgroundColor: 'rgba(127,127,127,0.5)', // Adjust the opacity as needed\n    },\n    modalContent: {\n      width: '95%',\n      backgroundColor: '#fff',\n      borderRadius: 6,\n      flexDirection: 'column',\n      overflow: 'hidden',\n      padding: 20,\n      alignItems: 'center',\n      \n    },\n    iconContainer: {\n        height: 80,\n        width: 80,\n        borderRadius: 50,\n        alignItems: 'center',\n        justifyContent: 'center',\n      },\n    tickIcon: {\n        backgroundColor: '#00A854', // Green color for confirmation\n      },\n      crossIcon: {\n        backgroundColor: 'red',\n      },\n    titleText: {\n      fontFamily: 'ArialNova-Bold',\n      fontSize: 18,\n      paddingVertical: 10,\n    },\n    subText: {\n      fontFamily: 'ArialNova-Light',\n      fontSize: 16,\n      paddingVertical: 5,\n      textAlign: 'center',\n    },\n    continueButton: {\n      backgroundColor: '#004DBC',\n      padding: 10,\n      paddingHorizontal:20,\n      borderRadius: 8,\n      marginTop: 20,\n    },\n    continueButtonText: {\n      color: 'white',\n      fontSize: 16,\n      textAlign: 'center',\n      fontFamily: 'ArialNova-Bold',\n    },\n  });\n  \n","// Import necessary modules from React Native\nimport React, { useEffect, useState } from 'react';\nimport {\n  View,\n  Image,\n  Text,\n  TextInput,\n  TouchableOpacity,\n  StyleSheet,\n  ScrollView,\n} from 'react-native';\nimport { AppConstants } from '../../assets/AppConstants';\nimport HorizontalNavigatior from '../miscComponents/HorizontalNavigator';\nimport ReferralService from '../../api/lib/ReferralService';\nimport ReferralResponseModal from '../components/ReferrralResponseModal';\n\nconst ReferralCodeScreen = ({ navigation, referralService }) => {\n  const [referralCode, setReferralCode] = useState('');\n  const [mainMsg, setMainMsg] = useState('');\n  const [noteText, setNoteText] = useState('');\n  const [showReferralModal, setShowReferralModal] = useState(false);\n  const [referralModalMessage, setReferralModalMessage] = useState('');\n  const [referralModalSubtext, setReferralModalSubtext] = useState('');\n  const [check,setcheck]=useState(true)\n  useEffect(() => {\n    ReferralService.getRewards()\n      .then((reward) => {\n        setMainMsg(reward.data.enterMsg);\n        setNoteText(reward.data.enterNoteText);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }, []);\n\n  const handleReferralCodeSubmit = () => {\n    \n    referralService\n      .validateReferral(referralCode)\n      .then((res) => {\n        // Assuming res.message and res.subtext are the properties you want to display\n        setReferralModalMessage(\"Referral Code Verified!\");\n        setReferralModalSubtext(\"Your referral Code is Verified! You can continue to onboarding now by pressing OK\");\n        setcheck(true)\n        setShowReferralModal(true);\n      })\n      .catch((error) => {\n        console.log(error);\n        setReferralModalMessage(\"Referral Code Not Verified!\");\n        setReferralModalSubtext(\"Your referral Code isn't valid! Please enter a valid referral code or press skip to continue onboarding\");\n        setcheck(false)\n        setShowReferralModal(true);\n        // Handle error if needed\n      });\n  };\n  const goToNext = () =>{\n    navigation.navigate('Onboarding')\n  }\n  const closeModal = () => {\n    setShowReferralModal(false);\n    \n    // Add any additional logic after closing the modal\n  };\n  const continueAction = () => {\n    setShowReferralModal(false);\n    goToNext()\n    // Add any additional logic after closing the modal\n  };\n  const goToPrev = () => {\n    navigation.goBack();\n  };\n\n  return (\n    <ScrollView>\n      <View style={{ zIndex: -1, marginLeft: 10 }}>\n        <Image source={require('../../assets/nyse.png')} style={{}} />\n        <View style={{ backgroundColor: 'rgba(0, 23, 139,0.8)', position: 'absolute', height: '100%', width: '100%' }}>\n          <TouchableOpacity style={styles.skipButton} onPress={goToNext}>\n            <Text style={styles.skipButtonText}>Skip</Text>\n          </TouchableOpacity>\n        </View>\n      </View>\n      <View style={styles.container}>\n        <Text style={styles.title}>Do you have a Referral Code?</Text>\n        <Text style={styles.subtext}>{mainMsg}</Text>\n        <Text style={styles.noteText}>Note: {noteText}</Text>\n        <TextInput\n          style={styles.input}\n          placeholder=\"Enter your referral code\"\n          value={referralCode}\n          onChangeText={(text) => setReferralCode(text)}\n        />\n      </View>\n      <HorizontalNavigatior showBackButton nextFunction={handleReferralCodeSubmit} backFunction={goToPrev} />\n      <ReferralResponseModal\n        message={referralModalMessage}\n        subtext={referralModalSubtext}\n        show={showReferralModal}\n        continueAction={continueAction}\n        closeModal={closeModal}\n        check={check}\n      />\n    </ScrollView>\n  );\n};\n\n\n// Define styles using StyleSheet\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 40,\n  },\n  title: {\n    fontSize: 24,\n    fontFamily:'ArialNova',\n    fontWeight: 'bold',\n    color:'white',\n    marginBottom: 35,\n    marginTop:-100,\n  },\n  subtext:{\n    fontSize: 14,\n    fontFamily:'ArialNova',\n    \n    padding:16,\n    color:'black'\n    \n  },\n  noteText:{\n    fontSize: 12,\n    fontFamily:'ArialNova',\n    marginBottom:10,\n    marginTop:-10,\n    padding:10,\n    color:'#8C949D'\n  },\n  input: {\n    height: 50,\n    width: '90%',\n    borderColor: '#8C949D',\n    borderWidth: 1,\n    borderRadius: 8,\n    marginBottom: 16,\n    marginTop:10,\n    paddingHorizontal: 8,\n  },\n  button: {\n    backgroundColor: AppConstants.loginHeaderBlue,\n    padding: 10,\n    borderRadius: 8,\n  },\n  buttonText: {\n    color: 'white',\n    fontSize: 16,\n    textAlign: 'center',\n  },\n  skipButton: {\n    position: 'absolute',\n    top: 40,\n    right: 20,\n  },\n  skipButtonText: {\n    color: 'white',\n    fontSize: 16,\n    padding:12,\n    fontFamily:'ArialNova',\n    fontWeight:'bold',\n  },\n});\n\n// Export the component to use in your application\nexport default ReferralCodeScreen;\n","import \"react-native-gesture-handler\"\n\nimport React, { useContext, useEffect, useState } from \"react\"\nimport { NavigationContainer, DefaultTheme } from \"@react-navigation/native\"\nimport { createStackNavigator } from \"@react-navigation/stack\"\n\nimport Login from \"../screens/login\"\nimport Registration from \"../screens/registration\"\nimport Dashboard from \"../screens/dashboard\"\nimport { AuthContext } from \"./authProvider\"\n//import Settings from \"./Routes/Settings\"\nimport FlashMessage from \"react-native-flash-message\"\nimport {\n  Keyboard,\n  KeyboardAvoidingView,\n  Platform,\n  TouchableWithoutFeedback,\n  View,\n  StatusBar,\n  ActivityIndicator\n} from \"react-native\"\nimport IntroCarousel from \"../screens/IntroCarousel\"\nimport SignupScreen from \"../screens/SignupScreen\"\nimport DashboardTabNavigator from \"../Navigators/DashboardTabNavigator\"\nimport AlpacaService from \"../../api/lib/AlpacaService\"\nimport OutOfService from \"../screens/OutOfService\"\nimport PendingVerificationScreen from \"../screens/PendingVerificationScreen\"\nimport InformationRequestScreen from \"../screens/InformationRequestScreen\"\nimport UserService from \"../../api/lib/UserService\"\nimport publicIP from 'react-native-public-ip';\nimport * as SecureStore from 'expo-secure-store'\nimport * as Sentry from 'sentry-expo';\nimport OnfidoScreen from \"../screens/OnfidoScreen\"\nimport AlpacaBalanceService from \"../../api/lib/AlpacaBalanceService\"\nimport ContactUsScreen from \"../screens/ContactUsScreen\"\nimport PostHog, { PostHogProvider, usePostHog } from 'posthog-react-native'\nimport VerificationScreen from \"../screens/verification\"\nimport ReferralCodeScreen from \"../screens/ReferralCodeScreen\"\nimport ReferralService from \"../../api/lib/ReferralService\"\n\nconst Stack = createStackNavigator<RootStackParamList>()\nexport type RootStackParamList = {\n  Home: undefined\n  Login: {\n    refresh?: boolean\n    aal?: \"aal2\"\n  }\n  Registration: undefined\n  Settings: undefined\n  Intro: undefined\n  Onboarding: undefined\n  Dashboard : undefined\n  Pending : undefined\n  InformationRequest : undefined\n}\n\nconst options = {}\n\nconst linking = {\n  // This is only used for e2e testing.\n  prefixes: [\"http://127.0.0.1:4457/\"],\n}\n\nconst MyTheme = {\n  ...DefaultTheme,\n  colors: {\n    ...DefaultTheme.colors,\n    background: '#FEFEFE',\n  },\n};\nexport default ({onReady, reference} : any) => {\n  // import { AuthContext } from './AuthProvider'\n  const { isAuthenticated, session, setSession } = useContext(AuthContext)\n  // if (session) session.identity.traits.onboarding = 'sent'\n  const [userEmail, setUserEmail] = useState(session?.identity.traits.email)\n  const [accountId, setAccountId] = useState(null)\n  const [idFetch, setIdFetch] = useState(false)\n  const [accountObject, setAccountObject] = useState(null)\n  const [ip, setip] = useState<string>()\n  const [subscribed,setSubscribed]=useState(null)\n  const[portfolioid,setPortfolioid]=useState(null)\n\n  useEffect(() => {\n    if (Platform.OS !== 'web') {\n      publicIP()\n        .then(ip => {    \n          Sentry.Native.setUser({\n            id: session?.identity?.id,\n            email: session?.identity?.traits.email,\n            ip_address: ip\n          });\n          setip(ip);\n        })\n        .catch(error => console.error('Error getting public IP:', error));\n    }\n  }, [session]);\n\n  useEffect(()=>{\n    console.log(\"SESSION\",session)\n    if (session) {\n      AlpacaService\n        .getAccountId(session?.identity.traits.email)\n        //.getAccountId(\"affan.syed.usc@gmail.com\")\n        .then(cb => {\n          console.log(\"CB\",cb)\n          setAccountId(cb.id); \n          setSubscribed(cb.is_subscribed)\n          setPortfolioid(cb.portfolio_details?.portfolio_id)\n          console.log(\"Account Id fetched, should navigate to dashboard\")\n          AlpacaBalanceService.getAccount(cb.id).then(cb => {setAccountObject(cb);setIdFetch(true)}).catch((cb) => {setIdFetch(true); console.log(cb)})\n        })\n        .catch(cb => {\n          setIdFetch(true)\n          console.log(\"No account Id.\")\n        })\n        \n    }else if(!isAuthenticated){\n      console.log(\"in else\")\n      setAccountId(null)\n      setUserEmail(null)\n      setIdFetch(false)\n    }\n  },[session])\n  const referralService = new ReferralService(session?.identity.traits.email,session?.identity.traits.phone)\n  useEffect(() => {\n    console.log(JSON.stringify({\n      idFetch,\n      accountId,\n      traits : session?.identity.traits\n    },null,2))\n  },[session, accountId])\n  return (\n    <KeyboardAvoidingView\n      style={{ flex: 1 }}\n      behavior={Platform.OS == \"ios\" ? \"padding\" : \"height\"}\n    >\n      <TouchableWithoutFeedback onPress={Keyboard.dismiss}>\n        <NavigationContainer linking={linking} theme={MyTheme} ref={reference} onReady={onReady} >\n        {/* <PostHogProvider \n        apiKey=\"phc_IN2Go1CZlfpsnCXnQsQxZcbjH8IQQnQHljUnhTLJKl5\" \n        autocapture\n        > */}\n          {Platform.OS === 'android' && <StatusBar translucent={true} backgroundColor={'transparent'}/>}\n          <Stack.Navigator\n            screenOptions={{\n              headerShown: false,\n            }}\n            // initialRouteName={'Intro'}\n          >\n            {session ?\n            \n\n            (\n              (!idFetch) ? \n              <Stack.Screen name=\"Loading\" options={options}>\n               {(props)=> <View style={{flex:1, alignItems:'center',justifyContent:'center'}} onLayout={()=>{console.log(\"Fetching Id/Showing Activity Indicator\")}}>\n                      <ActivityIndicator size={'large'} color={'#004DBC'}/>\n                    </View>}\n              </Stack.Screen>\n              :\n              \n              (  session.identity.traits.onboarding === \"complete\" ?\n            \n            ( accountId ?\n              <>\n              <Stack.Screen name=\"Dashboard\" options={options}>\n                {(props)=> <DashboardTabNavigator {...props} accountId={accountId} isSubscribed={subscribed} portfolioid={portfolioid}/>}\n              </Stack.Screen>\n              <Stack.Screen name=\"ContactUs\" options={options}>\n                {(props) => <ContactUsScreen {...props}/>}\n              </Stack.Screen>\n              </>\n              :<>\n\n            <Stack.Screen name=\"Out Of Service\" options={options}>\n                {(props)=> <OutOfService {...props} accountId={accountId}/>}\n              </Stack.Screen>\n              </>\n            )\n              \n              \n              :\n\n              (\n                ((session.identity.traits.onboarding === 'sent') || (session.identity.traits.onboarding === 'submitted'))  ?\n                <>\n                { accountObject && accountObject.status === 'ONBOARDING' ?\n                <>\n                <Stack.Screen name=\"Onfido Screen\" options={options}>\n                  {props => <OnfidoScreen {...props}/>}\n                </Stack.Screen>\n                <Stack.Screen name=\"Pending\" options={options}>\n                {(props) => <PendingVerificationScreen {...props} backButtonFunction={()=>setSession(null)}/>}\n                </Stack.Screen>\n                </>\n                :\n                <>\n                  <Stack.Screen name=\"Pending\" options={options}>\n                  {(props) => <PendingVerificationScreen {...props} backButtonFunction={()=>setSession(null)}/>}\n                  </Stack.Screen>\n                  <Stack.Screen name=\"ContactUs\" options={options}>\n                  {(props) => <ContactUsScreen {...props}/>}\n                </Stack.Screen>\n                  </>\n                \n                }\n                  \n\n                </>\n                :\n              <>\n              {( session.identity.traits.onboarding === 'failed' ? \n              <Stack.Screen name=\"InformationRequest\" component={InformationRequestScreen} />\n              :\n              <>\n              \n              <Stack.Screen name=\"Referral\" options={options}>\n                {props => <ReferralCodeScreen {...props} IP = {ip} referralService={referralService}/>}\n              </Stack.Screen>\n              <Stack.Screen name=\"Onboarding\" options={options}>\n                {props => <SignupScreen {...props} IP = {ip}/>}\n              </Stack.Screen>\n              <Stack.Screen name=\"Onfido Screen\" component={OnfidoScreen} options={options}/>\n              <Stack.Screen name=\"ContactUs\" options={options}>\n                {(props) => <ContactUsScreen {...props}/>}\n              </Stack.Screen>\n              </>\n              )}\n              </>\n              )\n              \n              \n              ))\n            \n            :\n            <>\n             {/* <Stack.Screen name=\"Onboarding\" component={SignupScreen} options={options}/> */}\n             \n             {/* <Stack.Screen name=\"Onfido Screen\" options={options}>\n                  {props => <OnfidoScreen {...props}/>}\n                </Stack.Screen> */}\n            \n            \n            <Stack.Screen name=\"Login\" component={Login} />\n            <Stack.Screen name=\"Verification\" component={VerificationScreen} />\n            <Stack.Screen name=\"ContactUs\" options={options}>\n                {(props) => <ContactUsScreen {...props}/>}\n              </Stack.Screen>\n             \n            <Stack.Screen name=\"Intro\" component={IntroCarousel} options={options}/>\n            <Stack.Screen name=\"Registration\" component={Registration} />\n            \n            </>\n            }\n            {\n\n            }\n            \n          </Stack.Navigator>\n          {/* </PostHogProvider> */}\n        </NavigationContainer>\n      </TouchableWithoutFeedback>\n      <View data-testid={\"flash-message\"}>\n        <FlashMessage position=\"top\" floating />\n      </View>\n    </KeyboardAvoidingView>\n  )\n}\n","import React from \"react\";\nimport {\n    View,\n    Text,\n    StyleSheet,\n    Modal,\n    Dimensions,\n    Button,\n    TouchableOpacity,\n    ActivityIndicator,\n    Linking,\n    Platform\n} from 'react-native'\nimport { BlurView } from 'expo-blur';\nimport LottieView from 'lottie-react-native';\nimport {AntDesign} from '@expo/vector-icons'\nexport default function UpdateAppModal({\n    isSuccess,\n    message,\n    subMessage,\n    show,\n    closeModal,\n    onClose\n} : any) {\n    return(\n        <Modal visible={show} transparent={true} animationType='fade' onDismiss={onClose}>\n            <View  style={{height:Dimensions.get('window').height, width : Dimensions.get('window').width,backgroundColor:'rgba(127,127,127,1)', alignItems:'center',justifyContent:'center'}}>\n                <View style={{ width:'95%',backgroundColor:'#fff', borderRadius:6, flexDirection:'row', overflow:'hidden'}}>\n                    <View style={{height:'100%', width:5, backgroundColor: '#004DBC'}}/>\n                    <View style={{flex:1, paddingHorizontal:20, justifyContent:'space-evenly', marginVertical:20}}>\n                        \n                        <TouchableOpacity style={{width:'95%', alignItems:'flex-end'}} onPress={closeModal}>\n                            {/* <AntDesign name=\"close\" color={\"#666\"} size={16}/> */}\n                        </TouchableOpacity>\n                        <View style={{height:80, width:80, borderRadius:50, alignItems:'center', justifyContent : 'center',backgroundColor:'#004DBC'}}>\n                            <AntDesign name=\"warning\" color='white' size={40}/>\n                        </View>\n\n                        <Text style={{fontFamily:'ArialNova-Light', fontSize:18, paddingVertical:10}}>\n                        A new app version is available.\n                        </Text>\n\n                        <Text style={{fontFamily:'ArialNova-Light', fontSize:14, paddingVertical:20, paddingBottom:30}}>Please update your app to continue using Elphinstone.\n                        </Text>\n\n                        <View style={{flexDirection:'row'}}>\n                        <TouchableOpacity style={{width:'35%', height:50, borderRadius:6, backgroundColor:'#004dbc',alignItems:'center',justifyContent:'center'}} onPress={() => {Platform.OS === 'ios' ? Linking.openURL('itms-apps://apps.apple.com/us/app/elphinstone-us/id1665752876') : Linking.openURL(\"market://details?id=us.elphinstone.elphinstone\")}}>\n                            <Text style={{color:'white', fontFamily:'ArialNova'}}>\n                                Update\n                            </Text>\n                        </TouchableOpacity>\n\n                        </View>\n                    </View>\n\n                {/* <Button title=\"close\" onPress={closeModal}/> */}\n\n                </View>\n            </View>\n        </Modal>\n    )\n}","import 'react-native-gesture-handler';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { StatusBar } from 'expo-status-bar';\nimport { LogBox, Platform } from 'react-native';\nimport Login from './src/screens/login';\nimport Dashboard from './src/screens/dashboard';\nimport ProjectProvider from './src/components/projectProvider';\nimport AuthProvider from './src/components/authProvider';\nimport Navigation from './src/components/navigation';\nimport { PlayfairDisplay_700Bold, useFonts} from '@expo-google-fonts/playfair-display'\nimport {decode, encode} from 'base-64'\nimport { useEffect, useRef, useState } from 'react';\nimport { View,ActivityIndicator } from 'react-native';\nimport * as Sentry from 'sentry-expo';\nimport UpdateAppModal from './src/components/UpdateAppModal';\n\n// const routingInstrumentation = new Sentry.Native.ReactNavigationInstrumentation();\n// Sentry.init({\n//   dsn: 'https://84d9a69baa4043c8a4aa23e6273c0b80@o4504705561329664.ingest.sentry.io/4504708164419584',\n//   enableInExpoDevelopment: true,\n//   debug: false,// If `true`, Sentry will try to print out useful debugging information if something goes wrong with sending the event. Set it to `false` in production\n//   enableNative:true,\n//   integrations: [\n//     new Sentry.Native.ReactNativeTracing({\n//       //Pass instrumentation to be used as `routingInstrumentation`\n//       routingInstrumentation,\n//      // ...\n//     }),\n//   ],\n//   tracesSampleRate: 0.001, \n// });\n\nLogBox.ignoreLogs(['Warning: ...']); // Ignore log notification by message\nLogBox.ignoreAllLogs();//Ignore all log notifications\nif (!global.btoa) {\n    global.btoa = encode;\n}\n\nif (!global.atob) {\n    global.atob = decode;\n}\nimport { \n  Overpass_100Thin,\n  Overpass_100Thin_Italic,\n  Overpass_200ExtraLight,\n  Overpass_200ExtraLight_Italic,\n  Overpass_300Light,\n  Overpass_300Light_Italic,\n  Overpass_400Regular,\n  Overpass_400Regular_Italic,\n  Overpass_600SemiBold,\n  Overpass_600SemiBold_Italic,\n  Overpass_700Bold,\n  Overpass_700Bold_Italic,\n  Overpass_800ExtraBold,\n  Overpass_800ExtraBold_Italic,\n  Overpass_900Black,\n  Overpass_900Black_Italic\n} from '@expo-google-fonts/overpass'\n\nimport {\n  Exo_100Thin,\n  Exo_200ExtraLight,\n  Exo_300Light,\n  Exo_400Regular,\n  Exo_500Medium,\n  Exo_600SemiBold,\n  Exo_700Bold,\n  Exo_800ExtraBold,\n  Exo_900Black,\n  Exo_100Thin_Italic,\n  Exo_200ExtraLight_Italic,\n  Exo_300Light_Italic,\n  Exo_400Regular_Italic,\n  Exo_500Medium_Italic,\n  Exo_600SemiBold_Italic,\n  Exo_700Bold_Italic,\n  Exo_800ExtraBold_Italic,\n  Exo_900Black_Italic,\n} from '@expo-google-fonts/exo';\n\n\n//Polyfills for react-native\n\n//https://github.com/facebook/react-native/issues/2392\nimport 'react-native-url-polyfill/auto';\nimport axios from 'axios';\n// import SpInAppUpdates, {\n//   NeedsUpdateResponse,\n//   IAUUpdateKind,\n//   StartUpdateOptions,\n// } from 'sp-react-native-in-app-updates';\n\n// const inAppUpdates = new SpInAppUpdates(\n//   false // isDebug\n// );\nconst APP_VERSION = '15'\n\nconst Stack = createNativeStackNavigator()\n\nfunction App() {\n  const navigationRef = useRef()\n  let [fontsLoaded] = useFonts({\n  Overpass_100Thin,\n  Overpass_100Thin_Italic,\n  Overpass_200ExtraLight,\n  Overpass_200ExtraLight_Italic,\n  Overpass_300Light,\n  Overpass_300Light_Italic,\n  Overpass_400Regular,\n  Overpass_400Regular_Italic,\n  Overpass_600SemiBold,\n  Overpass_600SemiBold_Italic,\n  Overpass_700Bold,\n  Overpass_700Bold_Italic,\n  Overpass_800ExtraBold,\n  Overpass_800ExtraBold_Italic,\n  Overpass_900Black,\n  Overpass_900Black_Italic,\n  PlayfairDisplay_700Bold,\n  Exo_100Thin,\n  Exo_200ExtraLight,\n  Exo_300Light,\n  Exo_400Regular,\n  Exo_500Medium,\n  Exo_600SemiBold,\n  Exo_700Bold,\n  Exo_800ExtraBold,\n  Exo_900Black,\n  Exo_100Thin_Italic,\n  Exo_200ExtraLight_Italic,\n  Exo_300Light_Italic,\n  Exo_400Regular_Italic,\n  Exo_500Medium_Italic,\n  Exo_600SemiBold_Italic,\n  Exo_700Bold_Italic,\n  Exo_800ExtraBold_Italic,\n  Exo_900Black_Italic,\n  'ArialNova': require('./assets/Fonts/ArialNova.ttf'),\n  'ArialNova-Bold': require('./assets/Fonts/ArialNova-Bold.ttf'),\n  'ArialNova-Light' : require('./assets/Fonts/ArialNova-Light.ttf')\n  });\n  const [allowedVersions, setAllowedVersions] = useState(null)\n  useEffect(() => {\n    // inAppUpdates.checkNeedsUpdate().then((result) => {\n    //   if (result.shouldUpdate) {\n    //     let updateOptions: StartUpdateOptions = {};\n    //     if (Platform.OS === 'android') {\n    //       // android only, on iOS the user will be promped to go to your app store page\n    //       updateOptions = {\n    //         updateType: IAUUpdateKind.FLEXIBLE,\n    //       };\n    //     } else if (Platform.OS === 'ios') {\n    //       // iOS specific configuration\n    //       updateOptions = {\n    //         title: 'Update available',\n    //         message: 'There is a new version of the app available on the App Store, do you want to update it?',\n    //         buttonUpgradeText: 'Update',\n    //         buttonCancelText: 'Cancel',\n    //       };\n    //     }\n    //     inAppUpdates.startUpdate(updateOptions); // https://github.com/SudoPlz/sp-react-native-in-app-updates/blob/master/src/types.ts#L78\n    //   }\n    // });\n    // if(Platform.os)\n    // axios.get('https://support.elphinstone.us/v1/contact-us/fetchVersions').then(cb => setAllowedVersions(cb.data))\n    if (Platform.OS != 'web') {\n      axios.get('https://support.elphinstone.us/v1/contact-us/fetchVersions')\n        .then(response => setAllowedVersions(response.data))\n        .catch(error => console.error('Error fetching versions:', error));\n    }\n  },[])\n  if (!fontsLoaded) {\n    return (<View style={{flex:1, alignItems:'center',justifyContent:'center'}} onLayout={()=>{console.log(\"Fetching Id/Showing Activity Indicator\")}}>\n    <ActivityIndicator size={'large'} color={'#004DBC'}/>\n  </View>)\n  }\n   \n  return (\n    <ProjectProvider>\n  <AuthProvider>\n    {allowedVersions && (\n      Platform.OS === 'ios'\n        ? !allowedVersions.allowed_versions_apple.includes(APP_VERSION)\n        : !allowedVersions.allowed_versions_android.includes(APP_VERSION)\n    ) ? (\n      <>\n      \n       <UpdateAppModal show={true} />\n      </>\n    ) : (\n      <>\n      \n        {/* <TermsConditionsModal show={true} /> */}\n        <Navigation\n          reference={navigationRef}\n          // onReady={() => {\n          //   // Register the navigation container with the instrumentation\n          //   routingInstrumentation.registerNavigationContainer(navigationRef);\n          // }}\n        />\n      </>\n    )}\n  </AuthProvider>\n</ProjectProvider>\n\n  );\n}\n\nexport default App;","import { registerRootComponent } from 'expo';\n\nimport App from './App';\n\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\n// It also ensures that whether you load the app in Expo Go or in a native build,\n// the environment is set up appropriately\nregisterRootComponent(App);\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = () => ([]);\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = 57101;\nmodule.exports = webpackEmptyContext;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.amdO = {};","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.hmd = (module) => {\n\tmodule = Object.create(module);\n\tif (!module.children) module.children = [];\n\tObject.defineProperty(module, 'exports', {\n\t\tenumerable: true,\n\t\tset: () => {\n\t\t\tthrow new Error('ES Modules may not assign module.exports or exports.*, Use ESM export syntax, instead: ' + module.id);\n\t\t}\n\t});\n\treturn module;\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [232], () => (__webpack_require__(81996)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["ProjectContext","createContext","setProject","project","_ref","children","_useState","useState","_useState2","_slicedToArray","_jsx","Provider","value","userSessionName","getAuthenticatedSession","p","AsyncStorage","getItem","Platform","OS","SecureStore","getItemAsync","then","sessionRaw","JSON","parse","killAuthenticatedSession","_asyncToGenerator","console","warn","deleteItemAsync","a","removeItem","log","error","apply","arguments","resilience","axios","interceptors","response","use","v","Promise","resolve","_error$config","config","reject","status","debug","_objectSpread","timeout","count","err","Error","setTimeout","request","catch","axiosFactory","create","kratosUrl","length","undefined","url","replace","canonicalize","indexOf","newOrySdk","FrontendApi","Configuration","basePath","baseOptions","withCredentials","AuthContext","setSession","syncSession","didFetch","isAuthenticated","useContext","sessionContext","setSessionContext","useEffect","auth","toSession","xSessionToken","session_token","_ref2","session","data","identity","traits","email","_err$response","setAuth","res","setItem","stringify","setAuthenticatedSession","sessionToken","Boolean","_ref$messages","messages","testID","View","map","k","text","id","Text","style","color","padding","textAlign","marginBottom","width","Dimensions","get","_Constants$manifest","_Constants$manifest$e","Constants","manifest","extra","isUiNodeInputAttributes","pet","name","getNodeId","attributes","getNodeTitle","_ref3","_meta$label2","_meta$label","meta","label","handleFormSubmitError","flow","setFlow","initializeFlow","refetchFlow","logout","ge","showMessage","message","reason","type","_x","_x2","_x3","_x4","_handleRedirectBrowserTo","handleRedirectBrowserTo","redirect_browser_to","result","WebBrowser","openAuthSessionAsync","params","initCode","session_token_exchange_code","returnToCode","URL","searchParams","exchangeSessionToken","StyledImage","Image","source","uri","src","height","NodeImage","props","node","NodeInput","_node$messages","onChange","disabled","textInputOverride","variant","guessVariant","extraProps","autoComplete","keyboardType","textContentType","autoCapitalize","autoCorrect","placeholder","secureTextEntry","_jsxs","TextInput","String","editable","onChangeText","borderWidth","borderColor","fontSize","borderRadius","marginVertical","_Fragment","_ref4","fontFamily","NodeText","_props$node$meta$labe","_props$node$meta$labe2","StyledText","AppConstants","loginHeaderBlue","GenericErrorResponse","subMessage","isSuccess","AlpacaAccountsError","msg","errorCode","orderType","toLowerCase","humanReadableDate","ts","timestamp","Date","now","date","getFullYear","getMonth","slice","getDate","getHours","getMinutes","getSeconds","LoginScreenStyle","StyleSheet","viewMain","alignItems","justifyContent","flex","header","statusBarHeight","backgroundColor","paddingTop","flexDirection","body","textInputStyle","loginButton","footer","paddingHorizontal","paddingBottom","NodeInputSubmit","onSubmitPress","isSubmitting","TouchableOpacity","activeOpacity","onPress","Feather","size","Node","isUiNodeTextAttributes","SelfServiceFlow","only","onSubmit","inProgress","setInProgress","_useState3","_useState4","values","setValues","_useState5","_useState6","nodes","setNodes","ui","filter","group","forEach","key","_defineProperty","getValue","Messages","action","AuthScreenWrapperStyle","HideKeyboard","TouchableWithoutFeedback","Keyboard","dismiss","ControlledTooltip","_React$useState","React","_React$useState2","open","setOpen","Tooltip","visible","onOpen","onClose","ToolTipComponent","contactUsRoute","Linking","openURL","borderBottomColor","borderBottomWidth","LegalToolTip","popover","skipAndroidStatusBar","containerStyle","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","pointerStyle","AuthScreenWrapper","navigation","showBackButton","backButtonFunction","showLogoutButton","StatusBar","barStyle","Ionicons","goBack","MaterialIcons","KeyboardAvoidingView","behavior","navigate","Entypo","ChangePasswordModal","closeModal","emailInputRef","useRef","setEmail","submitted","setSubmitted","setConfig","_useContext2","useFocusEffect","useCallback","createNativeRecoveryFlow","Modal","transparent","animationType","AntDesign","paddingVertical","ref","newKratosSdk","submitSelfServiceRecoveryFlow","csrf_token","method","Login","route","passModalOpen","setPassModal","userEmail","setUserEmail","_route$params","_route$params2","createNativeLoginFlow","aal","refresh","returnTo","returnSessionTokenExchangeCode","f","getLoginFlow","setSessionAndRedirect","_flow$ui","ScrollView","showsVerticalScrollIndicator","bounces","marginTop","payload","identifier","updateLoginFlow","updateLoginFlowBody","GlobalStyles","CustomTextInput","reference","touched","errors","handleChange","handleBlur","selectTextOnFocus","onFocus","onLayout","additionalStyle","onBlur","PasswordValidationView","password","showView","slideAnimator","Animated","Value","current","showViewAnimator","passCheck","setPassCheck","parsePassword","conditionArray","conditionMatch","test","num","arr","sliderWidth","interpolate","inputRange","outputRange","bgColor","to","timing","toValue","duration","useNativeDriver","start","overflow","maxHeight","FontAwesome","ResponseModal","show","onDismiss","BlurView","intensity","LottieView","autoPlay","require","loop","SignupSchema","Yup","shape","required","matches","min","phone","Registration","passInputRef","phoneInputRef","passView","setShowPassView","setFormError","_useState7","_useState8","showResponseModal","setResponseModal","_useState9","_useState10","_useState11","_useState12","responseModalConfig","setResponseModalConfig","launchResponseModal","createNativeRegistrationFlow","_ref6","updateRegistrationFlow","updateRegistrationFlowBody","_ref7","s","continue_with","c","flowId","ory_session_token","_flow$ui2","onStartShouldSetResponder","Formik","initialValues","validationSchema","e","_ref8","handleSubmit","lineHeight","ButtonMain","fontWeight","IntroCarousel","isDarkMode","useColorScheme","carouselIndex","setCarouselIndex","location","locationState","transform","translateX","multiply","styles","Carousel","pipOnIndex","pipOffIndex","marginHorizontal","axiosClientReferralService","baseURL","headers","UserService","_classCallCheck","_createClass","_createUser","axiosClient","post","_initiateAlpacaAccountOpening","userId","_uploadSingleDocument","documentType","_x5","_getUser","_x6","_updateUser","patch","_x7","_x8","_agreements","_x9","SignupWelcomeScreen","goToNext","userFetched","IP","userData","createMe","createUser","_id","ip_address","preference","risk_tolerance_level","profile_start_ts","posthog","usePostHog","disableMe","setDisableMe","horizontal","opacity","capture","finally","HorizontalNavigatior","backFunction","nextFunction","disableNextButton","legalFirstName","legalMiddleName","legalLastName","SignupLegalNames","goToPrev","setUserData","updateUser","firstInputRef","middleInputRef","lastInputRef","given_name","trim","family_name","profile_completeness","signup_page_location","getISOCode","country","countryList","item","toLocaleLowerCase","withPointer","list","setSelectedStatus","FlatList","renderItem","Flag","code","paddingLeft","keyExtractor","CountrySelector","selectedValue","setValue","disableChange","closeOnlyOnBackdropPress","ISO3","getCountryFromISO3","_ISO3$filter$","getISO3FromCountry","_ISO3$filter$2","birthPlace","SignupTaxResidence","taxResidence","selectedCountry","setSelectedCountry","country_of_tax_residence","SignupCitizenship","citizenship","country_of_citizenship","CustomDatePicker","maximumDate","DateTimePickerAndroid","event","mode","is24Hour","toLocaleDateString","DateTimePickerModal","isVisible","onConfirm","cb","onCancel","display","accentColor","getEighteenYearsAgo","newDate","setFullYear","formatDate","padStart","SignupDOB","dob","setDate","SignupBirthCountry","birthCountry","country_of_birth","idNumber","SignupIDDetails","numberInputRef","idExpirationData","idType","homeAddress1","homeAddress2","city","zipCode","state","SignupAddress","homeAddress1InputRef","homeAddress2InputRef","cityInputRef","zipInputRef","stateInputRef","addressCountry","street_address_1","street_address_2","postal_code","province","ItemComponent","index","CustomSelector","itemList","CustomNumericTextInput","focus","position","borderTopStartRadius","borderBottomStartRadius","numberOfLines","adjustsFontSizeToFit","parseFloat","toLocaleString","maximumFractionDigits","annualHouseholdIncome","investibleAssets","fund_source_map","SignupIncomeDetails","annualIncomeRef","investibleAssetsRef","sourceOfFunds","selectedFundSource","setSelectedFundSource","employmentStatus","selectedStatus","funding_source","annual_income_max","liquid_net_worth_max","employment_status","toUpperCase","SignupAffiliationQs","isUSBrokerAffiliated","setUSBrokerAffiliated","isExecutiveOrShareholderPC","setExecutiveOrShareholderPC","isSeniorPoliticalFigure","setSeniorPoliticalFigure","isRelatedToPoliticalFigure","setIsRelatedToPoliticalFigure","fontStyle","marginRight","BooleanSelector","marginLeft","SignupPEPQuestion","riskTolerance","isPEP","setPEP","SignupAffiliationDetails","brokerRegulatorName","brokerRegulatorAddress","brokerRegulatorEmail","publicCompanyName","publicCompanyAddress","publicCompanyCity","publicCompanyState","publicCompanyEmail","publicCompanyExchange","publicCompanyTicker","brokerRegulatorNameInputRef","brokerRegulatorAddressInputRef","brokerRegulatorEmailInputRef","publicCompanyNameInputRef","publicCompanyAddressInputRef","publicCompanyCityInputRef","publicCompanyStateInputRef","publicCompanyEmailInputRef","publicCompanyExchangeInputRef","publicCompanyTickerInputRef","publicCompanyCountry","setPublicCompanyCountry","alignSelf","SignupPEPFollowUps","pepJobTitleInputRef","relatedPEPNameInputRef","relatedPEPJobTitleInputRef","isUserPEP","PEP","isPEPDomesticOrForeign","setPEPDomesticOrForeign","pepCategory","setPEPCategory","relatedPEPRelation","setRelatedPEPRelation","PEPList","pepJobTitle","relatedPEPName","relatedPEPJobTitle","SignupFATCA","greenCardNumberInputRef","isUSCitizen","setUSCitizen","isUSPR","setUSPR","_useState13","isUSResident","_useState14","setUSResident","_useState15","visaType","_useState16","setVisaType","_useState17","visaExpirationDate","_useState18","setVisaExpirationDate","greenCardNumber","tax_id_type","SignupNONUSDeclaration","nonUSDeclaration","setNonUS","SignupW8","CustomDocumentSelector","mimetype","borderStyle","DocumentPicker","CustomPictureSelector","split","ImagePicker","launchImageLibraryAsync","mediaTypes","Images","allowsEditing","quality","canceled","assets","fileName","SignupDocumentUpload","photoIDFront","setPhotoIDFront","photoIDBack","setPhotoIDBack","bankStatement","setBankStatment","SignupAgreementsDisclosures","disableButton","customerAgreementAck","setCustomerAgreementAck","digitalSignatureAck","setDigitalSignatureAck","SignupLastScreen","scrollViewRef","bullets","HttpException","_Error","statusCode","_this","_callSuper","_inherits","this","_wrapNativeSuper","AlpacaService","account_id","_getAllStocks","_getAllPositions","_placePortfolioSellOrder","sellPercentage","unsubscribeFromPortfolio","percentage","_placeIndividualStockSellOrder","stockTicker","qty","symbol","side","time_in_force","_placeIndividualStockOrder","bodyObject","limit_price","stop_price","trail_price","trail_percent","_unsubscribeFromPortfolio","subscription_id","getSubscriptionDetails","delete","_placeIndividualStockBuyOrder","Market","_subscribePortfolio","_ref5","portfolio_id","_e$response","_e$response$data","_e$response2","_e$response2$data","_getSubscriptionDetails","_getTransactionHistory","_getNews","limit","symbols","_getHistoricalStockData","_getLatestStockData","_getJournalsIn","to_account","_getJournalsOuts","from_account","_getPortfolios","_withdrawCash","amount","_cancelPendingOrder","order_id","_x10","_getCorporateActions","_getAccountActivites","accountId","_fetchPortfolioName","_x11","_getAccountId","emailId","email_address","_x12","_getOnfidoToken","_x13","_patchOnfidoToken","_x14","_x15","SpinnerModal","ActivityIndicator","SignupScreenWrapper","percentageValue","AnimatorRef","animValue","Math","ceil","SignupOptionalDetails","employerNameInputRef","employerAddressInputRef","jobTitleInputRef","bankNameInputRef","bankAccountNumberInputRef","routingNumberInputRef","trustedContactNameInputRef","trustedContactLastNameInputRef","trustedContactEmailInputRef","trustedContactNumberInputRef","accountType","setAccountType","pakistaniBank","setPakistaniBank","employerName","employerAddress","jobTitle","trustedContactName","trustedContactLastName","trustedContactEmail","trustedContactNumber","bankName","bankAccountNumber","routingNumber","paddingRight","employer_name","employer_address","employment_position","bank_details","bank_type","bank_name","bank_account_number","routing_number","includes","swift_code","trusted_contact","phone_number","PAKISTAN_BANKS","Object","keys","fund_source_map_back","SignupScreen","_useContext","_objectWithoutProperties","_excluded","percentageCompleted","setPercentageCompleted","setDisableButton","setUserFetched","fundPreference","paymentGateway","setLocationState","_handleOnboardingSubmit","_session$session4","_session$session5","_session$session6","_session$session8","permanent_resident","id_number","disclosures","is_control_person","is_affiliated_exchange_or_finra","is_politically_exposed","is_us_resident","is_us_citizen","is_uspr","immediate_family_exposed","context","push","context_type","company_name","company_street_address","company_city","company_state","company_country","company_compliance_email","relation","profile_end_ts","photoIdFrontUploadBody","FormData","append","doc_upload_1","uploadSingleDocument","bankStatementBody","doc_upload_3","account_details","doc_upload_2","_session$session7","photoIdBackUploadBody","agreements","i","_session$session9","getAccountId","_session$session","_session$session2","_session$session2$ide","_session$session3","_session$session3$ide","getUser","_cb$bank_details","_cb$bank_details2","_cb$bank_details3","_cb$bank_details4","_cb$trusted_contact","_cb$trusted_contact2","_cb$trusted_contact3","_cb$trusted_contact4","_cb$bank_details5","_cb$disclosures","_cb$disclosures2","_cb$disclosures3","_cb$disclosures4","_cb$disclosures5","_cb$disclosures6","visa_type","visa_expiration_date","identify","goToNextScreen","reset","_session$session10","supress_push","max","handleOnboardingSubmit","CustomTabBar","descriptors","MaterialCommunityIcons","BigButtonSquare","title","Icon","isInverted","aspectRatio","MiscService","_getUSDPKR","maxBodyLength","Infinity","ServiceDownModal","AssetDataRectangle","alpacaBalanceService","userBalance","USDPKR","miscValues","setMiscValues","cash","setCashValue","showServiceDownModal","setShowServiceDownModal","getUSDPKR","_cb$data$","_cb$data$2","buying","selling","getUserCash","cashAmount","row_styles","bottom_row_styles","heading","sub_heading","foot_note","portfolio_value","currency","minimumFractionDigits","BigButtonRectangle","MarketItem","_latestData$bar2","_latestData$bar3","_latestData$bar4","stockName","isLast","alpacaService","historicalData","setHistoricalData","latestData","setLatestData","getHistoricalStockData","reverse","getLatestStockData","upOrDown","_latestData$bar","bar","toFixed","zIndex","Chart","concat","positive","LineChart","labels","datasets","chartConfig","backgroundGradientFrom","backgroundGradientTo","decimalPlaces","labelColor","propsForDots","r","strokeWidth","stroke","propsForHorizontalLabels","withInnerLines","withOuterLines","withShadow","yAxisInterval","RingButtonSquare","dark","LinearGradient","colors","AppDashboardHome","userBalances","refreshFunction","Octicons","ChosenCompanies","AppDashboardAddFunds","sellValue","scrollEnabled","nestedScrollEnabled","ConfigModal","showConfigModal","setConfigModal","setUserPreferences","userPreferences","fundPref","setFundPreference","UIManager","setLayoutAnimationEnabledExperimental","ConfirmationModal","confirmFunction","listOfRisks","returns","risk","AppDashboardInvest","userProfile","showConfirmationModal","setConfirmationModal","proportion","setProportion","portfolios","setPortfolios","getPortfolios","subscribePortfolio","buying_power","Slider","minimumValue","maximumValue","step","onValueChange","minimumTrackTintColor","thumbImage","AppDashboardWithdraw","cash_withdrawable","borderBottomEndRadius","AppDashboardMarkets","stockDictionary","searchText","setSearchText","news","setNews","searchItems","setSearchItems","getNews","matchDictionary","substr","startsWith","borderBottomLeftRadius","borderTopLeftRadius","_scrollViewRef$curren","scrollTo","y","borderBottomRightRadius","borderTopRightRadius","NewsItem","_news$images$","news_object","headline","created_at","images","AppDashboardNewsScreen","_news_object$images$","RenderHtml","html","content","contentWidth","tagsStyles","ignoredDomTags","AppDashboardMyPortfolioEquities","userPositions","resetPositions","isSubscribed","portfolioid","viewData","setViewData","portfolioDetails","setPortfolioDetails","fetchPortfolioName","getStockFromSymbol","_stockDictionary$filt","portfoliotype","portfolioname","PortfolioItem","current_price","ldp","lastday_price","parseInt","TradeBox","stock","currentHolding","setAmount","setOrderType","orderSide","setOrderSide","noOfShares","setNoOfShares","limitPrice","setLimitPrice","stopPrice","setStopPrice","trailPercent","setTrailPercent","trailPrice","setTrailPrice","timeInForce","setTimeInForce","updateMarketSell","val","_stock$bar3","_stock$bar2","updateMarket","Number","isNaN","maximumSignificantDigits","toString","nos","updateLimitPriceNOS","lp","updateLimitPriceLP","updateSpotPriceNOS","sp","updateSpotPriceSP","placeIndividualStockOrder","getErrorMsg","getStatusCode","compressNumber","suffixes","magnitude","floor","log10","suffix","pow","AppDashboardIndividualStock","_stock$bar","_stock$bar$c","_stock$bar2$o","_stock$bar4","_stock$bar4$l","_stock$bar5","_stock$bar5$h","setStock","o","l","h","market_value","referralCode","Clipboard","setString","ToastAndroid","SHORT","Alert","alert","AppDashboardUserProfile","userObject","reward","selectedCategory","setCategory","showsHorizontalScrollIndicator","bouncesZoom","PersonalView","FinancialView","EmploymentView","BankView","OtherView","DetailItem","BoldItem","subtext","_session$identity","_session$identity2","_session$identity3","_session$identity4","CopyToClipboard","_userObject$bank_deta","_userObject$bank_deta2","_userObject$bank_deta3","_ref9","_userObject$trusted_c","_userObject$trusted_c2","_userObject$trusted_c3","_userObject$trusted_c4","day","monthIndex","year","getMonthYear","dateString","month","AppDashboardAccountStatements","alpacaDocumentService","docList","setDocList","getAllDocuments","AccountStatementItem","getReport","getDocument","mainButtonText","FormSchema","PersonalDetailForm","_session$identity$tra","_session$identity2$tr","selectedTaxResidence","setSelectedTaxResidence","selectedCitizenship","setSelectedCitizenship","CountryFlag","isoCode","FinancialDetailForm","EmploymentDetailForm","BankDetailForm","_userData$bank_detail","_userData$bank_detail2","_userData$bank_detail3","bank_detail","TrustedContactDetailForm","_userData$trusted_con","_userData$trusted_con2","_userData$trusted_con3","_userData$trusted_con4","AppDashboardEditProfile","AppDashboardSell","setSellValue","long_market_value","placePortfolioSellOrder","convertDateFormat","datetime","toLocaleTimeString","hour","minute","TransactionItem","filled_at","filled_avg_price","filled_qty","submitted_at","failed_at","updated_at","cancelOrderFunction","borderTopEndRadius","TransferInItem","net_amount","settle_date","TransferOutItem","DividendsItem","activity_type","AppDashboardMyTransactions","alpacaBrokerAPIService","transferCategory","setTransferCategory","transactionsObject","setTransactionsObject","dividendsObject","setDividendsObject","transefersInList","setTransfersInList","transefersOutList","setTransfersOutList","corporateActions","setCorporateActions","getTransactionHistory","getAccountActivites","getCorporateActions","getJournalsIn","getJournalsOuts","_createElement","client_order_id","cancelPendingOrder","transferObject","CorporateActionItem","ActionTypeMap","dividend","merger","merger_completion","reverse_split","stock_split","unit_split","spinoff","ca_type","declaration_date","record_date","payable_date","ca_sub_type","initiating_symbol","target_symbol","new_rate","old_rate","effective_date","borderTopWidth","axiosClientBalanceService","AlpacaBalanceService","_getUserBalance","_getUserPorfolio","_getUserCash","_getAll","_getAccount","axiosClientBrokerAPIService","AlpacaBrokerAPIService","_getUserTransfers","_getUserJournalOuts","_cancelTransferOut","journalId","AlpacaDocumentService","_getAllDocuments","_getDocument","AppDashboardWithdrawals","cleanedValue","withdrawCash","ReferralBonusModal","container","modalContent","line","closeButton","iconContainer","note","instruction","okButton","okButtonText","ReferralService","_validateReferral","_getRewards","Tab","createBottomTabNavigator","HeaderComponent","DefaultTheme","background","options","EvilIcons","DashboardTabNavigator","_name$name","first","_name$name$first","setStockDictionary","setUserPositions","setPortfolioValue","setUserBalances","setUserObject","termsAccept","setTermsAccept","setReward","getProfile","getUserBalances","getAll","getPositions","getAllPositions","reduce","total","getAllStocks","getRewards","Navigator","screenOptions","headerShown","headerTransparent","tabBarHideOnKeyboard","unmountOnBlur","backBehavior","tabBar","sceneContainerStyle","Screen","AppDashboardWithdrawSelect","component","OutOfService","PendingVerificationScreen","InformationRequestScreen","OnfidoFlow","alpacaId","onfidoToken","getOnfidoToken","contactUsSchema","ContactUsScreen","_route$params3","phoneNumber","multiline","textAlignVertical","digitInputStyle","SignupEmailOTP","OTP","setOTP","OTPInputRef","isFieldDisabled","setFieldDisabled","OTPResponse","setOTPResponse","onFieldPress","onAnimationFinish","maxLength","caretHidden","VerificationScreen","createNativeVerificationFlow","getVerificationFlow","updateVerificationFlow","updateVerificationFlowBody","_flow$ui$messages","ReferralResponseModal","continueAction","check","modalContainer","tickIcon","crossIcon","titleText","subText","continueButton","continueButtonText","noteText","input","button","buttonText","skipButton","top","right","skipButtonText","referralService","setReferralCode","mainMsg","setMainMsg","setNoteText","showReferralModal","setShowReferralModal","referralModalMessage","setReferralModalMessage","referralModalSubtext","setReferralModalSubtext","setcheck","enterMsg","enterNoteText","validateReferral","Stack","createStackNavigator","linking","prefixes","MyTheme","onReady","setAccountId","idFetch","setIdFetch","accountObject","setAccountObject","ip","setip","subscribed","setSubscribed","setPortfolioid","publicIP","Sentry","setUser","_cb$portfolio_details","is_subscribed","portfolio_details","getAccount","NavigationContainer","theme","translucent","onboarding","OnfidoScreen","ReferralCodeScreen","FlashMessage","floating","UpdateAppModal","LogBox","ignoreLogs","ignoreAllLogs","global","btoa","encode","atob","decode","createNativeStackNavigator","navigationRef","_useFonts","useFonts","Overpass_100Thin","Overpass_100Thin_Italic","Overpass_200ExtraLight","Overpass_200ExtraLight_Italic","Overpass_300Light","Overpass_300Light_Italic","Overpass_400Regular","Overpass_400Regular_Italic","Overpass_600SemiBold","Overpass_600SemiBold_Italic","Overpass_700Bold","Overpass_700Bold_Italic","Overpass_800ExtraBold","Overpass_800ExtraBold_Italic","Overpass_900Black","Overpass_900Black_Italic","PlayfairDisplay_700Bold","Exo_100Thin","Exo_200ExtraLight","Exo_300Light","Exo_400Regular","Exo_500Medium","Exo_600SemiBold","Exo_700Bold","Exo_800ExtraBold","Exo_900Black","Exo_100Thin_Italic","Exo_200ExtraLight_Italic","Exo_300Light_Italic","Exo_400Regular_Italic","Exo_500Medium_Italic","Exo_600SemiBold_Italic","Exo_700Bold_Italic","Exo_800ExtraBold_Italic","Exo_900Black_Italic","fontsLoaded","allowedVersions","setAllowedVersions","ProjectProvider","AuthProvider","allowed_versions_apple","allowed_versions_android","Navigation","registerRootComponent","App","webpackEmptyContext","req","module","exports","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","loaded","__webpack_modules__","call","m","amdO","deferred","O","chunkIds","fn","priority","notFulfilled","fulfilled","j","every","splice","n","getter","__esModule","d","leafPrototypes","getProto","getPrototypeOf","obj","t","ns","def","getOwnPropertyNames","definition","defineProperty","enumerable","g","globalThis","Function","window","hmd","set","prop","prototype","hasOwnProperty","Symbol","toStringTag","nmd","paths","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}